; ########################################################################################
; # Generated by the active disassembly feature of the Exodus emulation platform
; #
; # Creation Date:   2023-7-7 20:19:46
; # Analysis Region: 0x00000000 - 0x00FFFFFF
; ########################################################################################
;
; Data declarations were removed to keep file size small.
; Commented functions are marked with a @ character.
;
loc_00000100:
loc_00000200:
	NOP
	BRA.b	loc_00000200
loc_00000204: ; @ Entry point
	TST.l	loc_00A10008
	BNE.b	loc_00000212
	TST.w	loc_00A1000C ; Test reset button
loc_00000212:
	BNE.b	loc_00000290
	LEA	loc_00000292(PC), A5
	MOVEM.w	(A5)+, D5/D6/D7
	MOVEM.l	(A5)+, A0/A1/A2/A3/A4 ; A1=$A11100
	MOVE.b	-$10FF(A1), D0
	ANDI.b	#$0F, D0
	BEQ.b	loc_00000232
	MOVE.l	#$53454741, $2F00(A1) ; Write "SEGA" to A14000
loc_00000232:
	MOVE.w	(A4), D0
	MOVEQ	#0, D0
	MOVEA.l	D0, A6
	MOVE.l	A6, USP
	MOVEQ	#$00000017, D1
loc_0000023C:
	MOVE.b	(A5)+, D5
	MOVE.w	D5, (A4)
	ADD.w	D7, D5
	DBF	D1, loc_0000023C
	MOVE.l	(A5)+, (A4)
	MOVE.w	D0, (A3)
	MOVE.w	D7, (A1)
	MOVE.w	D7, (A2)
loc_0000024E:
	BTST.b	D0, (A1)
	BNE.b	loc_0000024E
	MOVEQ	#$00000025, D2
loc_00000254:
	MOVE.b	(A5)+, (A0)+
	DBF	D2, loc_00000254
	MOVE.w	D0, (A2)
	MOVE.w	D0, (A1)
	MOVE.w	D7, (A2)
loc_00000260:
	MOVE.l	D0, -(A6)
	DBF	D6, loc_00000260
	MOVE.l	(A5)+, (A4)
	MOVE.l	(A5)+, (A4)
	MOVEQ	#$0000001F, D3
loc_0000026C:
	MOVE.l	D0, (A3)
	DBF	D3, loc_0000026C
	MOVE.l	(A5)+, (A4)
	MOVEQ	#$00000013, D4
loc_00000276:
	MOVE.l	D0, (A3)
	DBF	D4, loc_00000276
	MOVEQ	#3, D5
loc_0000027E:
	MOVE.b	(A5)+, $11(A3)
	DBF	D5, loc_0000027E
	MOVE.w	D0, (A2)
	MOVEM.l	(A6), D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	MOVE	#$2700, SR
loc_00000290:
	BRA.b	loc_000002FE
loc_00000292:
	dc.w $8000,$3FFF,$100
	dc.l $A0000,$A11100,$A11200,$C00000,$C00004
loc_000002FE:
	TST.w	loc_00C00004
	BSR.w	loc_00000354
	CMPI.l	#$4B414E4F, $FFFFFFD0.w ; KANO check
	BEQ.b	loc_0000031E
	MOVE.l	#$4B414E4F, $FFFFFFD0.w ; If check failed set it and reset config
	BSR.w	loc_4FC_reset_config
loc_0000031E:
	BSR.w	loc_00000326
	BRA.w	loc_00000CA6

loc_00000326: ; @ Zero RAM up to $FBF0
	LEA	loc_00FF0000, A6
	MOVE.w	#$0FBF, D6
	CLR.l	D7
loc_00000332: ; @ RAM clearing loop
	MOVE.l	D7, (A6)+
	MOVE.l	D7, (A6)+
	MOVE.l	D7, (A6)+
	MOVE.l	D7, (A6)+
	DBF	D6, loc_00000332
	BSR.w	loc_00007DAE ; Controller related
	BSR.w	loc_00007F08 ;
	BSR.w	loc_00008036 ; PSG stuff
	BSR.w	loc_00000AF6 ;
	BSR.w	loc_00007B0A ;
	RTS

loc_00000354:
	RTS

loc_00000402:
	BSR.w	loc_00007FCE
	MOVE.l	#$40000000, loc_00C00004
	LEA	loc_0002A874, A0
	BSR.w	loc_00008108
	MOVEQ	#3, D0
	BSR.w	loc_00007BD8
	BSR.w	loc_00007D64
	MOVE.w	$FFFFF610.w, D0
	ORI.b	#$40, D0
	MOVE.w	D0, loc_00C00004
	CLR.w	$FFFFF624.w
	LEA	loc_000004DE, A1
	MOVE.l	#$47120003, D0
	MOVEQ	#$0000000E, D1
	MOVEQ	#0, D2
	BSR.w	loc_000080A0
loc_0000044A:
	BSR.w	loc_00007D64
	BSR.w	loc_00000498
	LEA	$FFFFF624.w, A1
	LEA	$FFFFF603.w, A0
	BTST.b	#7, (A0)
	BNE.b	loc_00000484
	CMPI.b	#4, (A0)
	BNE.b	loc_00000470
	TST.w	(A1)
	BNE.b	loc_0000046E
	MOVE.w	#$000A, (A1)
loc_0000046E:
	SUBQ.w	#1, (A1)
loc_00000470:
	CMPI.b	#8, (A0)
	BNE.b	loc_00000482
	CMPI.w	#9, (A1)
	BCS.b	loc_00000480
	MOVE.w	#$FFFF, (A1)
loc_00000480:
	ADDQ.w	#1, (A1)
loc_00000482:
	BRA.b	loc_0000044A
loc_00000484:
	MOVE.w	$FFFFF610.w, D0
	ANDI.b	#$BF, D0
	MOVE.w	D0, loc_00C00004
	CLR.b	$FFFFF603.w
	RTS
loc_00000498:
	LEA	loc_000004B6, A1
	MOVE.w	$FFFFF624.w, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADDA.w	D0, A1
	MOVE.l	#$472C0003, D0
	MOVEQ	#1, D1
	MOVEQ	#0, D2
	BRA.w	loc_000080A0
loc_000004B6:
loc_000004DE:
loc_4FC_reset_config: ; @ Reset config
	LEA	$FFFFFFD8.w, A1
	MOVE.b	#3, (A1)+
	MOVE.b	#1, (A1)+
	MOVE.b	#1, (A1)+
	MOVE.b	#3, (A1)+
	MOVE.b	#0, (A1)+
	MOVE.b	#$0C, (A1)+
	MOVE.b	#7, (A1)+
	MOVE.b	#4, (A1)+
	MOVE.b	#6, (A1)+
	MOVE.b	#3, (A1)+
	MOVE.b	#0, (A1)+
	MOVE.b	#$14, (A1)+
	MOVE.b	#1, (A1)+
	MOVE.b	#0, (A1)+
	MOVE.b	#3, (A1)+
	MOVE.b	#9, (A1)+
	MOVE.b	#0, (A1)+
	MOVE.b	#$0C, (A1)+
	MOVE.b	#0, (A1)+
	MOVE.b	#5, (A1)
	MOVE.l	#$00010000, $FFFFFFD4.w
	RTS
loc_00000560:
	BSR.w	loc_00007FCE
	MOVE.l	#$40000000, loc_00C00004
	LEA	loc_0002A874, A0
	BSR.w	loc_00008108
	LEA	loc_00000A76, A1
	LEA	$FFFFFB00.w, A2
	MOVEQ	#$0000003F, D0
loc_00000584:
	MOVE.w	(A1)+, (A2)+
	DBF	D0, loc_00000584
	LEA	$FFFFFFEA.w, A1
	MOVE.b	#0, (A1)
	LEA	loc_000008D4, A0	; @ Load menu strings
	BSR.w	loc_00000858	; @ Write left column of config menu
	BSR.w	loc_000007F8
	BSR.w	loc_00000808
	BSR.w	loc_00000818
	BSR.w	loc_00000828
	BSR.w	loc_00000838
	BSR.w	loc_00000848
	BSR.w	loc_00000782
loc_000005B8:
	MOVE.b	#4, $FFFFF62A.w
	BSR.w	loc_00007D54
	CLR.w	D0
	CLR.w	D1
	LEA	$FFFFF604.w, A0
	MOVE.b	$1(A0), D0
	CMPI.b	#1, D0
	BEQ.w	loc_00000612
	CMPI.b	#2, D0
	BEQ.w	loc_00000634
	CMPI.b	#4, D0
	BEQ.w	loc_0000065E
	CMPI.b	#8, D0
	BEQ.w	loc_0000065E
	BTST.l	#6, D0
	BNE.w	loc_000006EA
	BTST.l	#4, D0
	BNE.w	loc_0000071E
	BTST.l	#7, D0
	BNE.w	loc_00000608
loc_00000606:
	BRA.b	loc_000005B8
loc_00000608:
	MOVE.b	#$40, $FFFFD11A
	RTS
loc_00000612:
	MOVE.b	#$40, $FFFFD11A
	LEA	$FFFFFFEA.w, A0
	MOVE.b	(A0), D0
	MOVE.b	D0, $1(A0)
	BEQ.b	loc_0000062A
	SUBQ.b	#1, D0
	BRA.b	loc_0000062C
loc_0000062A:
	MOVEQ	#5, D0
loc_0000062C:
	MOVE.b	D0, (A0)
	BSR.w	loc_00000782
	BRA.b	loc_00000606
loc_00000634:
	MOVE.b	#$40, $FFFFD11A
	LEA	$FFFFFFEA.w, A0
	MOVE.b	(A0), D0
	MOVE.b	D0, $1(A0)
	CMPI.b	#5, D0
	BEQ.w	loc_00000654
	ADDQ.b	#1, D0
	BRA.w	loc_00000656
loc_00000654:
	MOVEQ	#0, D0
loc_00000656:
	MOVE.b	D0, (A0)
	BSR.w	loc_00000782
	BRA.b	loc_00000606
loc_0000065E:
	LEA	$FFFFFFEA.w, A0
	MOVE.b	(A0), D1
	CMPI.b	#0, D1
	BNE.w	loc_0000067A
	LEA	$FFFFFFD8.w, A0
	BSR.w	loc_00000740
	BSR.w	loc_000007F8
	BRA.b	loc_00000606
loc_0000067A:
	CMPI.b	#1, D1
	BNE.w	loc_00000692
	LEA	$FFFFFFDB.w, A0
	BSR.w	loc_00000740
	BSR.w	loc_00000808
	BRA.w	loc_00000606
loc_00000692:
	CMPI.b	#2, D1
	BNE.w	loc_000006AA
	LEA	$FFFFFFDE.w, A0
	BSR.w	loc_00000740
	BSR.w	loc_00000818
	BRA.w	loc_00000606
loc_000006AA:
	CMPI.b	#3, D1
	BNE.w	loc_000006C2
	LEA	$FFFFFFE1.w, A0
	BSR.w	loc_00000740
	BSR.w	loc_00000828
	BRA.w	loc_00000606
loc_000006C2:
	CMPI.b	#4, D1
	BNE.w	loc_000006DA
	LEA	$FFFFFFE4.w, A0
	BSR.w	loc_00000740
	BSR.w	loc_00000838
	BRA.w	loc_00000606
loc_000006DA:
	LEA	$FFFFFFE7.w, A0
	BSR.w	loc_00000740
	BSR.w	loc_00000848
	BRA.w	loc_00000606
loc_000006EA:
	LEA	$FFFFFFEA.w, A0
	MOVE.b	(A0), D1
	CMPI.b	#5, D1
	BNE.w	loc_00000716
	LEA	$FFFFFFE7.w, A0
	CLR.w	D0
	MOVE.b	$1(A0), D0
	ADDQ.w	#1, D0
	CMPI.b	#$0A, D0
	BNE.b	loc_0000070E
	MOVE.b	#$15, D0
loc_0000070E:
	BSR.w	loc_000083F4
	BRA.w	loc_00000606
loc_00000716:
	ORI.b	#4, D0
	BRA.w	loc_0000065E
loc_0000071E:
	LEA	$FFFFFFEA.w, A0
	MOVE.b	(A0), D1
	CMPI.b	#5, D1
	BNE.w	loc_00000738
	MOVE.b	#$40, $FFFFD11A
	BRA.w	loc_00000606
loc_00000738:
	ORI.b	#8, D0
	BRA.w	loc_0000065E
loc_00000740:
	CLR.w	D2
	CLR.w	D3
	MOVE.b	(A0)+, D2
	MOVE.b	(A0), D3
	BTST.l	#2, D0
	BNE.w	loc_0000076A
	CMP.b	D2, D3
	BEQ.w	loc_0000075A
	BRA.w	loc_00000762
loc_0000075A:
	CLR.w	D3
	MOVE.b	D3, (A0)
	BRA.w	loc_00000780
loc_00000762:
	ADDQ.b	#1, D3
	MOVE.b	D3, (A0)
	BRA.w	loc_00000780
loc_0000076A:
	CMPI.b	#0, D3
	BEQ.w	loc_00000776
	BRA.w	loc_0000077C
loc_00000776:
	MOVE.b	D2, (A0)
	BRA.w	loc_00000780
loc_0000077C:
	SUBQ.b	#1, D3
	MOVE.b	D3, (A0)
loc_00000780:
	RTS
loc_00000782:
	LEA	$FFFFFFEA.w, A2
	CLR.w	D3
	MOVE.b	(A2)+, D3
	CLR.w	D4
	MOVE.b	(A2), D4
	LEA	loc_00000A6A, A1
	ADD.w	D4, D4
	ADDA.w	D4, A1
	MOVE.b	(A1)+, D0
	LSL.w	#8, D0
	MOVE.b	(A1)+, D0
	MOVE.w	D0, D1
	ANDI.w	#$3FFF, D0
	ORI.w	#$4000, D0
	MOVE.w	D0, loc_00C00004
	ANDI.w	#$C000, D1
	ROL.w	#2, D1
	MOVE.w	D1, loc_00C00004
	MOVE.w	#$0020, loc_00C00000
	LEA	loc_00000A6A, A1
	ADD.w	D3, D3
	ADDA.w	D3, A1
	MOVE.b	(A1)+, D0
	LSL.w	#8, D0
	MOVE.b	(A1)+, D0
	MOVE.w	D0, D1
	ANDI.w	#$3FFF, D0
	ORI.w	#$4000, D0
	MOVE.w	D0, loc_00C00004
	ANDI.w	#$C000, D1
	ROL.w	#2, D1
	MOVE.w	D1, loc_00C00004
	MOVE.w	#$005E, loc_00C00000
	RTS
loc_000007F8:
	LEA	loc_0000092C, A1
	LEA	$FFFFFFD8.w, A2
	BSR.w	loc_00000876
	RTS
loc_00000808:
	LEA	loc_00000932, A1
	LEA	$FFFFFFDB.w, A2
	BSR.w	loc_00000876
	RTS
loc_00000818:
	LEA	loc_00000964, A1
	LEA	$FFFFFFDE.w, A2
	BSR.w	loc_00000876
	RTS
loc_00000828:
	LEA	loc_00000996, A1
	LEA	$FFFFFFE1.w, A2
	BSR.w	loc_00000876
	RTS
loc_00000838:
	LEA	loc_000009E8, A1
	LEA	$FFFFFFE4.w, A2
	BSR.w	loc_00000876
	RTS
loc_00000848:
	LEA	loc_000009F0, A1
	LEA	$FFFFFFE7.w, A2
	BSR.w	loc_00000876
	RTS
loc_00000858:
	BSR.w	loc_000030F0
loc_0000085C:
	CLR.w	D2
	MOVE.b	(A0)+, D2
	CMPI.b	#0, D2
	BEQ.b	loc_00000874
	CMPI.b	#1, D2
	BEQ.b	loc_00000858
	MOVE.w	D2, loc_00C00000
	BRA.b	loc_0000085C
loc_00000874:
	RTS
loc_00000876:
	MOVE.b	(A1)+, D0
	LSL.w	#8, D0
	MOVE.b	(A1)+, D0
	MOVE.w	D0, D1
	ANDI.w	#$3FFF, D0
	ORI.w	#$4000, D0
	MOVE.w	D0, loc_00C00004
	ANDI.w	#$C000, D1
	ROL.w	#2, D1
	MOVE.w	D1, loc_00C00004
	CLR.w	D2
	CLR.w	D3
	CLR.w	D4
	CLR.w	D5
	MOVE.b	(A2)+, D2
	MOVE.b	(A2)+, D3
	MOVE.b	(A2)+, D4
loc_000008A6:
	CMP.b	D3, D5
	BNE.w	loc_000008B4
	BSR.w	loc_000008BE
	BRA.w	loc_000008B6
loc_000008B4:
	ADDA.w	D4, A1
loc_000008B6:
	ADDQ.b	#1, D5
	DBF	D2, loc_000008A6
	RTS
loc_000008BE:
	CLR.w	D7
	MOVE.b	D4, D7
	SUBQ.b	#1, D7
loc_000008C4:
	CLR.w	D6
	MOVE.b	(A1)+, D6
	MOVE.w	D6, loc_00C00000
	DBF	D7, loc_000008C4
	RTS
loc_000008D4:
loc_0000092C:
loc_00000932:
loc_00000964:
loc_00000996:
loc_000009E8:
loc_000009F0:
loc_00000A6A:
loc_00000A76:
loc_00000AF6:
	CLR.l	$FFFF8204.w
	CLR.l	$FFFF8208.w
	CLR.l	$FFFF820C.w
	MOVEQ	#0, D1
	BRA.b	loc_00000B08
loc_00000B08:
	MOVEM.l	A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_00000BB0, A0
	ADD.w	D1, D1
	MOVE.w	(A0,D1.w), D1
	ADDA.w	D1, A0
	LEA	$FFFF8204.w, A1
	LEA	$FFFF820C.w, A2
	MOVEQ	#3, D7
loc_00000B24:
	MOVE.w	(A0)+, D0
	BMI.b	loc_00000B2C
	MOVE.w	D0, (A1)
	CLR.b	(A2)
loc_00000B2C:
	ADDQ.l	#2, A1
	ADDQ.l	#1, A2
	DBF	D7, loc_00000B24
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3
	RTS
loc_00000B40:
	LEA	loc_00000BB0, A0
	LEA	$FFFF8204.w, A1
	LEA	$FFFF820C.w, A2
	MOVEQ	#3, D7
loc_00000B50:
	TST.b	(A2)
	BNE.b	loc_00000B5C
	MOVE.w	(A1), D6
	BEQ.b	loc_00000B5C
	BSR.b	loc_00000B68
	MOVE.w	D6, (A1)
loc_00000B5C:
	SUBQ.b	#1, (A2)
	ADDQ.l	#2, A1
	ADDQ.l	#1, A2
	DBF	D7, loc_00000B50
	RTS
loc_00000B68:
	MOVE.b	(A0,D6.w), D0
	BEQ.w	loc_00000BA6
	ADDQ.w	#1, D6
	BTST.l	#7, D0
	BEQ.w	loc_00000BA4
	BTST.l	#4, D0
	BNE.w	loc_00000B9E
	MOVE.b	D0, D1
	LSR.b	#4, D1
	CMPI.b	#$0E, D1
	BEQ.w	loc_00000B9E
	BSR.w	loc_00000BA8
	MOVE.b	(A0,D6.w), D0
	ADDQ.w	#1, D6
	BSR.w	loc_00000BA8
	BRA.b	loc_00000B68
loc_00000B9E:
	BSR.w	loc_00000BA8
	BRA.b	loc_00000B68
loc_00000BA4:
	MOVE.b	D0, (A2)
loc_00000BA6:
	RTS
loc_00000BA8:
	MOVE.b	D0, loc_00C00011
	RTS
loc_00000BB0:
loc_00000CA6:
	BSR.w	loc_0000824A
	MOVE.w	#0, $FFFFF000.w
loc_00000CB0: ; @ Title
	MOVEA.l	loc_00000000, A7
	MOVEQ	#0, D0
	BSR.w	loc_000083F4 ; Sound related
	BSR.w	loc_00007754 ; Title
	BSR.w	loc_0000223E ; Reset stats
loc_00000CC2: ; @ Game start
	CLR.b	$FFFFF004.w
	BSR.w	loc_00006E62
	BSR.w	loc_0000317E
	BSR.w	loc_00003186
	BSR.w	loc_0000318E
	ANDI	#$FAFF, SR
	MOVE.w	$FFFFF610.w, D0
	ANDI.b	#$BF, D0
	MOVE.w	D0, loc_00C00004
	BSR.w	loc_00007FCE
	BSR.w	loc_00007F08
	LEA	$FFFFFB00.w, A0
	MOVE.w	#$0400, D0
	MOVE.w	D0, (A0)
	MOVE.w	D0, $44(A0)
	BSR.w	loc_00007D7A
	LEA	$FFFFE800.w, A0
	MOVE.w	#$009F, D0
loc_00000D0A:
	CLR.l	(A0)+
	DBF	D0, loc_00000D0A
	CLR.w	$FFFFF624.w
	LEA	loc_000021AE, A1
	BSR.w	loc_000021F8
	BEQ.b	loc_00000D24
	BSR.w	loc_00000402
loc_00000D24:
	LEA	loc_000021C8, A1
	BSR.w	loc_000021F8
	BEQ.b	loc_00000D42
	MOVE.w	$FFFFF610.w, D0
	ORI.b	#$40, D0
	MOVE.w	D0, loc_00C00004
	BRA.w	loc_000020AA
loc_00000D42: ; @ Start game
	MOVE.w	$FFFFB29E, -(A7) ; Lives
	MOVE.l	$FFFFB2A2, -(A7) ; Score
	MOVE.l	$FFFFB2A6, -(A7) ; Extend
	MOVE.l	$FFFFB2B6, -(A7) ; Bombs
	BSR.w	loc_00002248 ; Apply settings
	MOVE.l	(A7)+, $FFFFB2B6
	MOVE.l	(A7)+, $FFFFB2A6
	MOVE.l	(A7)+, $FFFFB2A2
	MOVE.w	(A7)+, $FFFFB29E
	MOVEQ	#2, D0
	BSR.w	loc_00007BD8 ; Init color palette
	BSR.w	loc_00001220 ; Init stage and background
	ANDI.w	#$8080, $FFFFF602.w
	BSR.w	loc_00000DB0
	BSR.w	loc_000018B4
	BSR.w	loc_00000DB0
loc_00000D92: ; @ Main loop
	BSR.w	loc_00007D64 ; @ D94 Interrupt related
	BSR.w	loc_0000160A ; @ D96 Scrolling
	BSR.w	loc_00000DBA ; @ D9A Prevent player moving when state isn't playing
	BSR.w	loc_00002498 ; @ D9E Apply player movement
	BSR.w	loc_00000EA8 ; @ DA2 More subroutines
	BSR.w	loc_00000F3E ; @ DA6 Color cycle
	BSR.w	loc_00000DCA ; @ DAA Pause
	BRA.b	loc_00000D92 ; Keep looping
loc_00000DB0:
	CLR.b	$FFFFF603.w ; Clear pause flags
	CLR.b	$FFFFF604.w
	RTS
loc_00000DBA: ; @ Disable player input in certain states (exploding, landing)
	TST.w	$FFFFB292
	BEQ.b	loc_00000DC8 ; If state!=0, clear movement bits
	ANDI.w	#$8080, $FFFFF602.w
loc_00000DC8:
	RTS
loc_00000DCA:
	TST.w	$FFFFB292
	BNE.b	loc_00000E3E
	TST.b	$FFFFF004.w
	BNE.b	loc_00000E3E
	BTST.b	#7, $FFFFF603.w
	BEQ.b	loc_00000E3E
	MOVE.w	#1, $FFFFD10C
	BSR.b	loc_00000E40
loc_00000DEA:
	BSR.w	loc_00007D64
	BSR.w	loc_000021D2
	LEA	loc_000021B4, A1
	BSR.w	loc_000021F8
	BEQ.b	loc_00000E06
	MOVE.b	#8, $FFFFB2B8 ; @ UDRLAS cheat (upgrade) when game paused
loc_00000E06:
	LEA	loc_000021BB, A1
	BSR.w	loc_000021F8
	BEQ.b	loc_00000E1A
	MOVE.b	#8, $FFFFB2B6 ; @ UDRLBS cheat (8 bombs) when game paused
loc_00000E1A:
	LEA	loc_000021C2, A1
	BSR.w	loc_000021F8
	BEQ.b	loc_00000E2E
	EORI.b	#$FF, $FFFFCCA2
loc_00000E2E:
	BTST.b	#7, $FFFFF603.w
	BEQ.b	loc_00000DEA
	MOVE.w	#2, $FFFFD10C
loc_00000E3E:
	RTS
loc_00000E40:
	LEA	loc_00000E9C, A3
	LEA	$FFFFE800.w, A0
	LEA	$FFFFF800.w, A2
	MOVEA.l	A0, A4
	MOVEA.l	A2, A5
	MOVEQ	#1, D6
	MOVEQ	#4, D7
	MOVE.w	#$00EC, D5
loc_00000E5A:
	MOVE.w	#$00E8, (A2)+
	CLR.b	(A2)+
	MOVE.b	D6, (A2)+
	MOVE.w	(A3)+, (A2)+
	MOVE.w	D5, (A2)+
	ADDQ.w	#8, D5
	ADDQ.b	#1, D6
	DBF	D7, loc_00000E5A
	MOVEQ	#$0000004A, D7
loc_00000E70:
	MOVE.l	(A0), (A2)
	MOVE.l	$4(A0), $4(A2)
	TST.b	$3(A0)
	BEQ.b	loc_00000E90
	MOVE.b	D6, $3(A2)
	ADDQ.b	#1, D6
	ADDQ.l	#8, A0
	ADDQ.l	#8, A2
	DBF	D7, loc_00000E70
	CLR.b	-$5(A2)
loc_00000E90:
	MOVEQ	#$0000004F, D7
loc_00000E92:
	MOVE.l	(A5)+, (A4)+
	MOVE.l	(A5)+, (A4)+
	DBF	D7, loc_00000E92
	RTS
loc_00000E9C:
loc_00000EA6:
	RTS
loc_00000EA8: ; @ More main loop subroutines
	BSR.w	loc_00003AEA ; @ EA8 Player collision with enemies and power-ups
	BSR.w	loc_00003C00 ; @ Collision player bullets and enemies
	BSR.w	loc_00003CD0 ; @ Collision enemy bullets and player
	BSR.w	loc_00003D34 ; @
	BSR.w	loc_0000355C ; @ Spawn enemies
	MOVE.l	#$00FFE800, $FFFF8210.w
	MOVE.w	#1, $FFFF8214.w
loc_00000ECA:
	BSR.b	loc_00000EA6 ; @ EAC
	BSR.w	loc_00002632 ; @ ECC
	BSR.w	loc_0000240A ; @ ED0
	BSR.w	loc_00002448 ; @ ED4
	BSR.w	loc_00002570 ; @ ED8
	BSR.w	loc_00002756 ; @ EDC
	BSR.w	loc_00007408 ; @ EE0
	BSR.w	loc_00003304 ; @ EE4
	BSR.w	loc_00006F7A ; @ EE8
	BSR.w	loc_00002858 ; @ EEC
	BSR.w	loc_00003310 ; @ EF0
	BSR.w	loc_0000330A ; @ EF4
	BSR.w	loc_0000266A ; @ EF8
	BRA.w	loc_00000F30 ; @ EFC
loc_00000F00:
	BSR.w	loc_00000F14
	BSR.w	loc_00002C38
	BRA.w	loc_00000F30
loc_00000F0C:
	BSR.w	loc_00000F14
	BRA.w	loc_00000F30
loc_00000F14:
	MOVE.l	#$00FFE800, $FFFF8210.w
	MOVE.w	#1, $FFFF8214.w
	BSR.b	loc_00000EA6
	BSR.w	loc_0000240A
	BSR.w	loc_00002448
	BRA.w	loc_00002570
loc_00000F30:
	MOVEA.l	$FFFF8210.w, A0
	MOVE.w	$FFFF8214.w, D7
	CLR.l	(A0)+
	CLR.l	(A0)+
	RTS
loc_00000F3E: ; @ Check for game ending
	MOVE.l	$FFFF8268, D0
	DIVU.w	#$3000, D0
	SWAP	D0
	CMPI.w	#$0100, D0
	BCC.b	loc_00000F64
	CMPI.w	#$000A, $FFFFF624.w	; Is it last stage?
	BNE.b	loc_00000F64
	CMPI.w	#$00FE, D0
	BEQ.w	loc_000020AA	; Ending
	BRA.w	loc_000020E0
loc_00000F64:
	LEA	$FFFFFB00.w, A1
	LEA	$FFFF821A.w, A2
	LEA	loc_00000FFC, A0
	MOVE.w	$0(A2), D7
loc_00000F76:
	MOVE.w	(A0,D7.w), D1
	BPL.b	loc_00000F80
	CLR.w	D7
	BRA.b	loc_00000F76
loc_00000F80:
	MOVE.w	D1, $6E(A1)
	ADDQ.w	#2, D7
	MOVE.w	D7, $0(A2)
	CMPI.w	#4, $2(A2)
	BCS.b	loc_00000FB2
	CLR.w	$2(A2)
	MOVE.w	$64(A1), D0
	MOVE.w	$66(A1), $64(A1)
	MOVE.w	D0, $66(A1)
	MOVE.w	$68(A1), D0
	MOVE.w	$6A(A1), $68(A1)
	MOVE.w	D0, $6A(A1)
loc_00000FB2:
	ADDQ.w	#1, $2(A2)
	CMPI.w	#$00B4, $FFFF8218.w
	BCS.b	loc_00000FCC
	CLR.w	$FFFF8218.w
	ADDQ.w	#1, $FFFF8216.w
	ANDI.w	#3, $FFFF8216.w
loc_00000FCC:
	ADDQ.w	#1, $FFFF8218.w
	LEA	loc_0000104E, A0
	MOVE.w	$FFFF8216.w, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	MOVEA.l	(A0,D0.w), A0
	MOVE.w	$6(A2), D7
loc_00000FE6:
	MOVE.w	(A0,D7.w), D1
	BPL.b	loc_00000FF0
	CLR.w	D7
	BRA.b	loc_00000FE6
loc_00000FF0:
	MOVE.w	D1, $6C(A1)
	ADDQ.w	#2, D7
	MOVE.w	D7, $6(A2)
	RTS
loc_00000FFC:
loc_0000104E:
loc_0000105E:
loc_000010A8:
loc_000010F2:
loc_0000113C:
loc_00001186:
	LEA	$FFFF0000, A0
	MOVE.w	#$1FFF, D7
	MOVE.w	#$FFFF, D0
loc_00001194:
	MOVE.w	D0, (A0)+
	DBF	D7, loc_00001194
	LEA	$FFFF4000, A0
	MOVE.w	#$1FFF, D7
loc_000011A4:
	CLR.w	(A0)+
	DBF	D7, loc_000011A4
	MOVE.w	#$FFFF, D0
	LEA	$FFFF9276.w, A0
	MOVE.w	#$07FF, D7
loc_000011B6:
	MOVE.w	D0, (A0)+
	DBF	D7, loc_000011B6
	LEA	$FFFF8276.w, A0
	MOVE.w	#$07FF, D7
loc_000011C4:
	MOVE.w	D0, (A0)+
	DBF	D7, loc_000011C4
	CLR.w	$FFFF8272.w
	CLR.w	$FFFF8274.w
	CLR.w	$FFFF825C.w
	CLR.w	$FFFF825E.w
	CLR.w	$FFFF8260.w
	CLR.w	$FFFF8262.w
	MOVE.w	#$00FF, D0
	MOVE.w	D0, $FFFFF61C.w
	MOVE.w	D0, $FFFFF61E.w
	CLR.w	$FFFF8242.w
	CLR.l	D0
	MOVE.w	$FFFFF624.w, D0
	DIVU.w	#5, D0
	SWAP	D0
	MULU.w	#$3000, D0
	MOVE.l	D0, $FFFF8268.w
	CLR.w	$FFFF8244.w
	MOVE.l	#$007FFFFF, $FFFF824C.w
	CLR.w	$FFFF8250.w
	MOVE.l	#$007FFFFF, $FFFF8258.w
	RTS
loc_00001220:
	BSR.w	loc_00001186
	MOVE.w	#$01CF, D0
loc_00001228:
	MOVE.w	D0, -(A7)
	BSR.w	loc_00001650
	MOVE.w	(A7)+, D0
	DBF	D0, loc_00001228
	RTS
loc_00001236:
	MOVE.l	$FFFF8268.w, -(A7)
	MOVE.w	$FFFF8242.w, -(A7)
	MOVE.w	$FFFFF624.w, -(A7)
	BSR.w	loc_00001186
	MOVE.w	(A7)+, $FFFFF624.w
	MOVE.w	(A7)+, $FFFF8242.w
	MOVE.l	(A7)+, $FFFF8268.w
	BSR.w	loc_0000317E
	BSR.w	loc_00003186
	BSR.w	loc_0000318E
	MOVE.w	#$01CF, D0
loc_00001262:
	MOVE.w	D0, -(A7)
	BSR.w	loc_00001650
	BSR.w	loc_0000355C ; @ Called when starting attract mode
	BSR.w	loc_0000317E
	BSR.w	loc_000031A0
	MOVE.l	#$00FFE800, $FFFF8210.w
	MOVE.w	#1, $FFFF8214.w
	BSR.w	loc_00003304
	BSR.w	loc_00003310
	BSR.w	loc_0000330A
	MOVE.w	(A7)+, D0
	DBF	D0, loc_00001262
	RTS
loc_00001296:
	MOVEM.l	A5/A4/D7/D4/D3/D2, -(A7)
	MOVE.w	$FFFF825C.w, D2
	BNE.b	loc_000012C4
	MOVE.w	$FFFF8272.w, D0
	ADDI.w	#$0080, D0
	ANDI.w	#$0F80, D0
	MOVE.w	D0, $FFFF8272.w
	LEA	$FFFF9276.w, A4
	MOVE.w	$FFFF8272.w, D0
	ADDA.w	D0, A4
	LEA	loc_0003AB00, A5
	BSR.w	loc_000012F8
loc_000012C4:
	MOVE.w	$FFFF825C.w, D2
	ADD.w	D2, D2
	LEA	$FFFF9276.w, A4
	MOVE.w	$FFFF8272.w, D0
	ADDA.w	D0, A4
	MOVE.w	(A4,D2.w), D0
	MOVE.w	D0, D1
	ANDI.w	#$6000, D1
	LSR.w	#2, D1
	MOVE.w	D1, $FFFF826E.w
	ADDQ.w	#1, $FFFF825C.w
	ANDI.w	#$003F, $FFFF825C.w
	BSR.w	loc_0000146C
	MOVEM.l	(A7)+, D2/D3/D4/D7/A4/A5
	RTS
loc_000012F8:
	MOVEM.l	D7/D4/D3/D2, -(A7)
	MOVE.w	$FFFF825E.w, D3
	ANDI.w	#1, D3
	LSL.w	#2, D3
	MOVE.w	$FFFF8244.w, -(A7)
	MOVE.w	$FFFF8246.w, -(A7)
	MOVE.l	$FFFF8248.w, -(A7)
	MOVE.l	$FFFF824C.w, -(A7)
	MOVE.w	$FFFFF624.w, D6
	CMPI.w	#6, D6
	BCS.b	loc_0000132A
	MOVEQ	#7, D7
loc_00001322:
	BSR.w	loc_0000147C
	DBF	D7, loc_00001322
loc_0000132A:
	MOVEQ	#$00000017, D7
loc_0000132C:
	MOVE.w	D3, D4
	BSR.w	loc_0000147C
	LSL.w	#3, D0
	ADD.w	D0, D4
	MOVE.l	(A5,D4.w), (A4)+
	DBF	D7, loc_0000132C
	CMPI.w	#6, D6
	BCC.b	loc_00001350
	MOVEQ	#7, D7
loc_00001346:
	BSR.w	loc_0000147C
	CLR.l	(A4)+
	DBF	D7, loc_00001346
loc_00001350:
	TST.w	D3
	BNE.b	loc_00001366
	MOVE.l	(A7)+, $FFFF824C.w
	MOVE.l	(A7)+, $FFFF8248.w
	MOVE.w	(A7)+, $FFFF8246.w
	MOVE.w	(A7)+, $FFFF8244.w
	BRA.b	loc_0000136A
loc_00001366:
	ADDA.w	#$000C, A7
loc_0000136A:
	ADDQ.w	#1, $FFFF825E.w
	MOVEM.l	(A7)+, D2/D3/D4/D7
	RTS
loc_00001374:
	MOVEM.l	A5/A4/D7/D4/D3/D2, -(A7)
	MOVE.w	$FFFF8260.w, D2
	BNE.b	loc_000013A2
	MOVE.w	$FFFF8274.w, D0
	ADDI.w	#$0080, D0
	ANDI.w	#$0F80, D0
	MOVE.w	D0, $FFFF8274.w
	LEA	$FFFF8276.w, A4
	MOVE.w	$FFFF8274.w, D0
	ADDA.w	D0, A4
	LEA	loc_0003C700, A5
	BSR.w	loc_000013D6
loc_000013A2:
	MOVE.w	$FFFF8260.w, D2
	ADD.w	D2, D2
	LEA	$FFFF8276.w, A4
	MOVE.w	$FFFF8274.w, D0
	ADDA.w	D0, A4
	MOVE.w	(A4,D2.w), D0
	MOVE.w	D0, D1
	ANDI.w	#$6000, D1
	LSR.w	#2, D1
	MOVE.w	D1, $FFFF8270.w
	ADDQ.w	#1, $FFFF8260.w
	ANDI.w	#$003F, $FFFF8260.w
	BSR.w	loc_00001472
	MOVEM.l	(A7)+, D2/D3/D4/D7/A4/A5
	RTS
loc_000013D6:
	MOVEM.l	D7/D4/D3/D2, -(A7)
	MOVE.l	A4, -(A7)
	MOVE.w	$FFFF8262.w, D3
	ANDI.w	#1, D3
	LSL.w	#2, D3
	MOVE.w	$FFFF8250.w, -(A7)
	MOVE.w	$FFFF8252.w, -(A7)
	MOVE.l	$FFFF8254.w, -(A7)
	MOVE.l	$FFFF8258.w, -(A7)
	MOVE.w	$FFFFF624.w, D6
	MOVE.l	$FFFF8268.w, D0
	DIVU.w	#$3000, D0
	SWAP	D0
	ANDI.w	#$FC00, D0
	BNE.b	loc_0000140C
	CLR.w	D6
loc_0000140C:
	CMPI.w	#6, D6
	BCS.b	loc_0000141C
	MOVEQ	#7, D7
loc_00001414:
	BSR.w	loc_0000153E
	DBF	D7, loc_00001414
loc_0000141C:
	MOVEQ	#$00000017, D7
loc_0000141E:
	MOVE.w	D3, D4
	BSR.w	loc_0000153E
	LSL.w	#3, D0
	ADD.w	D0, D4
	MOVE.l	(A5,D4.w), (A4)+
	DBF	D7, loc_0000141E
	CMPI.w	#6, D6
	BCC.b	loc_00001442
	MOVEQ	#7, D7
loc_00001438:
	BSR.w	loc_0000153E
	CLR.l	(A4)+
	DBF	D7, loc_00001438
loc_00001442:
	TST.w	D3
	BNE.b	loc_00001458
	MOVE.l	(A7)+, $FFFF8258.w
	MOVE.l	(A7)+, $FFFF8254.w
	MOVE.w	(A7)+, $FFFF8252.w
	MOVE.w	(A7)+, $FFFF8250.w
	BRA.b	loc_0000145C
loc_00001458:
	ADDA.w	#$000C, A7
loc_0000145C:
	ADDQ.w	#1, $FFFF8262.w
	MOVEA.l	(A7)+, A4
	BSR.w	loc_0000388A
	MOVEM.l	(A7)+, D2/D3/D4/D7
	RTS
loc_0000146C:
	ANDI.w	#$1FFF, D0
	RTS
loc_00001472:
	ANDI.w	#$1FFF, D0
	ADDI.w	#$0BA8, D0
	RTS
loc_0000147C:
	CMPI.l	#$00000400, $FFFF824C.w
	BCS.w	loc_000014FC
	CLR.l	$FFFF824C.w
	CLR.w	$FFFF8244.w
	CLR.l	$FFFF8258.w
	CLR.w	$FFFF8250.w
	MOVE.l	$FFFF8268.w, D0
	CMPI.l	#$0000F000, D0
	BCS.b	loc_000014AA
	CLR.l	D0
	MOVE.l	D0, $FFFF8268.w
loc_000014AA:
	DIVU.w	#$0400, D0
	MOVE.w	D0, $FFFF826C.w
	ADD.w	D0, D0
	ADD.w	D0, D0
	CMPI.w	#$00E8, D0
	BCS.b	loc_000014C6
	CMPI.w	#$000A, $FFFFF624.w
	BNE.b	loc_000014C6
	ADDQ.w	#8, D0
loc_000014C6:
	LEA	loc_00048200, A6
	MOVE.l	(A6,D0.w), D1
	ADDA.l	D1, A6
	MOVE.l	A6, $FFFF8248.w
	CMPI.w	#$000A, $FFFFF624.w
	BEQ.b	loc_000014E6
	CMPI.w	#5, $FFFFF624.w
	BNE.b	loc_000014EC
loc_000014E6:
	TST.w	D0
	BNE.b	loc_000014EC
	MOVEQ	#$00000030, D0
loc_000014EC:
	LEA	loc_0003F500, A6
	MOVE.l	(A6,D0.w), D1
	ADDA.l	D1, A6
	MOVE.l	A6, $FFFF8254.w
loc_000014FC:
	TST.w	$FFFF8244.w
	BEQ.b	loc_0000150C
	SUBQ.w	#1, $FFFF8244.w
	MOVE.w	$FFFF8246.w, D0
	BRA.b	loc_00001538
loc_0000150C:
	MOVEA.l	$FFFF8248.w, A6
	MOVE.b	(A6)+, D0
	LSL.w	#8, D0
	MOVE.b	(A6)+, D0
	CMPI.w	#$FFF0, D0
	BNE.b	loc_00001534
	MOVE.b	(A6)+, $FFFF8244.w
	MOVE.b	(A6)+, $FFFF8245.w
	MOVE.b	(A6)+, $FFFF8246.w
	MOVE.b	(A6)+, $FFFF8247.w
	MOVE.l	A6, $FFFF8248.w
	BRA.w	loc_0000147C
loc_00001534:
	MOVE.l	A6, $FFFF8248.w
loc_00001538:
	ADDQ.l	#1, $FFFF824C.w
	RTS
loc_0000153E:
	TST.w	$FFFF8250.w
	BEQ.b	loc_0000154E
	SUBQ.w	#1, $FFFF8250.w
	MOVE.w	$FFFF8252.w, D0
	BRA.b	loc_00001578
loc_0000154E:
	MOVEA.l	$FFFF8254.w, A6
	MOVE.b	(A6)+, D0
	LSL.w	#8, D0
	MOVE.b	(A6)+, D0
	CMPI.w	#$FFF0, D0
	BNE.b	loc_00001574
	MOVE.b	(A6)+, $FFFF8250.w
	MOVE.b	(A6)+, $FFFF8251.w
	MOVE.b	(A6)+, $FFFF8252.w
	MOVE.b	(A6)+, $FFFF8253.w
	MOVE.l	A6, $FFFF8254.w
	BRA.b	loc_0000153E
loc_00001574:
	MOVE.l	A6, $FFFF8254.w
loc_00001578:
	ADDQ.l	#1, $FFFF8258.w
	RTS
loc_0000157E:
	BSR.w	loc_0000559C
	CLR.w	$FFFF823A.w
	CLR.b	$FFFF823C.w
	LEA	$FFFFB5EC, A0
	MOVEQ	#$0000003F, D0
loc_00001592:
	CLR.l	(A0)+
	DBF	D0, loc_00001592
	BSR.w	loc_000015A2
	JMP	loc_00002256
loc_000015A2:
	MOVE.w	$FFFFF624.w, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000015D2, A0
	MOVE.w	(A0,D0.w), $FFFFFB78.w
	MOVE.w	$2(A0,D0.w), $FFFFFB7A.w
	RTS
loc_000015BE:
	MOVE.w	$FFFFF624.w, D0
	LEA	loc_000015FE, A0
	MOVE.b	(A0,D0.w), D0
	JMP	loc_000083F4
loc_000015D2:
loc_000015FE:
loc_0000160A: ; @ Scrolling
	CLR.l	$FFFF823E.w
	MOVE.l	$FFFF8268.w, D0
	DIVU.w	#$3000, D0 ; $3000 is stage length, upper word has remainder
	SWAP	D0 ; Swap upper and lower words
	CMPI.w	#$0180, D0
	; It checks if scroll_counter%0x3000-0x0180==0
	; That happens once per stage
	BNE.b	loc_0000162A
	TST.w	$FFFFB292 ; Player state
	BNE.b	loc_0000162A ; Don't land if exploding
	BRA.w	loc_000016B6 ; Landing
loc_0000162A:
	CMPI.w	#$22D0, D0
	BNE.b	loc_00001644
	CMPI.w	#9, $FFFFF624.w ; If stage==9
	BNE.b	loc_00001644
	CLR.b	$FFFF823C.w
	BSR.w	loc_00002292
	BSR.w	loc_0000227E
loc_00001644:
	MOVE.w	$FFFFF624.w, D1
	ADD.w	D1, D1
	CMP.w	loc_0000168A(PC,D1.w), D0 ; Have we reached boss?
	BEQ.b	loc_00001666 ; If so, go to boss wait
loc_00001650: ; Do the scrolling
	MOVE.l	#$00008000, $FFFF823E.w
	BSR.w	loc_00001AC8 ;
	BSR.w	loc_000019E4 ; Scroll
	ADDQ.l	#1, $FFFF8268.w ; Increase main counter
	RTS
loc_00001666: ; Boss wait
	CMPI.b	#$10, $FFFF823C.w ; Boss was destroyed?
	BCC.b	loc_00001682
	ADDQ.w	#1, $FFFF823A.w	; Increase boss timer
	MOVE.w	$FFFF823A.w, D0
	MOVE.w	$FFFFF624.w, D1	; D1=Stage number
	ADD.w	D1, D1
	CMP.w	loc_000016A0(PC,D1.w), D0
	BCS.b	loc_00001688
loc_00001682: ; Done waiting
	CLR.w	$FFFF823A.w
	BRA.b	loc_00001650
loc_00001688:
	RTS
loc_0000168A:
	; @ These values mark the end of stages, where scrolling pauses for boss
	dc.w $7FFF,$2E60,$2ED0,$2ED0,$2E40,$2F60,$2E80,$2F20,$2EE0,$2E60,$2F60
loc_000016A0:
	; @ Boss timer values for each stage
	dc.w $7FFF,$0708,$0780,$0708,$06CC,$FFF0,$0708,$07BC,$0690,$0960,$FFF0
loc_000016B6: ; @ Landing sequence
	MOVEQ	#7, D0
	BSR.w	loc_000083F4
loc_000016BC:
	BSR.w	loc_00007D64
	ANDI.w	#$8080, $FFFFF602.w
	BSR.w	loc_0000214E
	MOVE.l	$FFFFB28E, -(A7)
	BSR.w	loc_00002498
	MOVE.l	(A7)+, $FFFFB28E
	BSR.w	loc_00001824
	MOVE.l	$FFFF8268.w, D0
	DIVU.w	#$3000, D0
	SWAP	D0
	CMPI.w	#$0200, D0
	BEQ.b	loc_000016F4
	BSR.w	loc_00001650
	BRA.b	loc_000016BC
loc_000016F4:
	MOVE.w	#$00F0, $FFFFB28E
	MOVE.w	#$00F8, $FFFFB290
	MOVE.w	#$00B3, D0
loc_00001708:
	MOVE.w	D0, -(A7)
	BSR.w	loc_00007D64
	ANDI.w	#$8080, $FFFFF602.w
	BSR.w	loc_00001820
	MOVE.w	(A7)+, D0
	DBF	D0, loc_00001708
	MOVE.b	#$20, $FFFFD11A
	BSR.w	loc_0000197E
	BSR.w	loc_000083B0
	MOVEQ	#$0000000A, D0
	BSR.w	loc_000083F4
	BSR.w	loc_00002C24
	CLR.w	$FFFFB294
	BSR.w	loc_000017D8
	MOVEQ	#$0000003C, D7
loc_00001744:
	MOVE.w	D7, -(A7)
	BSR.w	loc_00007D64
	ANDI.w	#$8080, $FFFFF602.w
	BSR.w	loc_0000180C
	MOVE.w	(A7)+, D7
	DBF	D7, loc_00001744
loc_0000175A:
	TST.b	$FFFFB299
	BEQ.b	loc_000017BE
	MOVE.b	$FFFFB299, D0
	MOVEQ	#1, D1
	SBCD	D1, D0
	MOVE.b	D0, $FFFFB299
	MOVEQ	#9, D7
loc_00001774:
	MOVE.w	D7, -(A7)
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	ANDI.w	#$8080, $FFFFF602.w
	BSR.w	loc_0000180C
	MOVE.b	$FFFFB2AC, D6
	MOVE.b	$FFFFB2AB, D7
	MOVEQ	#3, D0
	CLR.b	D1
	SBCD	D0, D6
	SBCD	D1, D7
	MOVE.b	D6, $FFFFB2AC
	MOVE.b	D7, $FFFFB2AB
	MOVEQ	#$00000030, D0
	CLR.b	D1
	BSR.w	loc_0000234C
	MOVEQ	#3, D1
	BSR.w	loc_00000B08
	MOVE.w	(A7)+, D7
	DBF	D7, loc_00001774
	BRA.b	loc_0000175A
loc_000017BE:
	MOVE.w	#$00B4, D7
loc_000017C2:
	MOVE.w	D7, -(A7)
	BSR.w	loc_00007D64
	ANDI.w	#$8080, $FFFFF602.w
	BSR.b	loc_0000180C
	MOVE.w	(A7)+, D7
	DBF	D7, loc_000017C2
	BRA.b	loc_0000182C
loc_000017D8:
	CLR.b	D6
	CLR.b	D7
	CLR.l	$FFFFB2AA
	MOVE.b	$FFFFB299, D4
	BEQ.b	loc_000017FE
	MOVEQ	#$00000030, D0
	MOVEQ	#0, D1
	MOVEQ	#1, D2
loc_000017F0:
	ANDI	#$FFFE, SR
	ABCD	D0, D6
	ABCD	D1, D7
	SBCD	D2, D4
	TST.b	D4
	BNE.b	loc_000017F0
loc_000017FE:
	MOVE.b	D6, $FFFFB2AC
	MOVE.b	D7, $FFFFB2AB
	RTS
loc_0000180C:
	BSR.w	loc_00002498
	BRA.w	loc_00000F00
loc_00001814:
	BSR.w	loc_00002498
	BSR.w	loc_00000F0C
	BRA.w	loc_00000F3E
loc_00001820:
	BSR.w	loc_00002498
loc_00001824:
	BSR.w	loc_00000EA8
	BRA.w	loc_00000F3E
loc_0000182C:
	MOVE.w	$FFFFF624.w, D0
	ADDQ.w	#1, D0
	CMPI.w	#$000B, D0
	BCS.b	loc_0000183E
	ADDQ.w	#1, $FFFF8242.w
	MOVEQ	#1, D0
loc_0000183E:
	MOVE.w	D0, $FFFFF624.w
	MOVE.b	$FFFFB2A0, D0
	ADDQ.b	#1, D0
	CMPI.b	#8, D0
	BCS.b	loc_00001852
	MOVEQ	#7, D0
loc_00001852:
	MOVE.b	D0, $FFFFB2A0
	BSR.w	loc_0000157E
	ANDI.w	#$8080, $FFFFF602.w
	BSR.b	loc_00001814
	BSR.w	loc_00007D64
	MOVEQ	#$00000014, D0
	BSR.w	loc_000083F4
	BSR.w	loc_000018EC
	BSR.w	loc_000015BE
loc_00001876:
	LEA	$FFFFA276.w, A0
	LEA	loc_00C00000, A1
	MOVE.l	#$78000000, loc_00C00004
	MOVEQ	#$0000006F, D7
loc_0000188C:
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	DBF	D7, loc_0000188C
	CLR.b	$FFFFB2A1
	CLR.w	$FFFFB298
	CLR.w	$FFFFCC9C
	RTS
loc_000018B4:
	ADDQ.w	#1, $FFFFF624.w ; Increment stage number
	MOVE.b	$FFFFFFDF.w, $FFFFB2A0 ; Copy difficulty level to B2A0
	BSR.w	loc_0000157E ; Combat heli palette swap?
	MOVEQ	#6, D0
	BSR.w	loc_000083F4 ; Music
	BSR.w	loc_000018D0 ;
	BRA.b	loc_00001876
loc_000018D0:
	BSR.w	loc_0000195E
	MOVE.w	#$FFFF, $FFFFB6EC
	CLR.l	$FFFF823E.w
	BSR.w	loc_00001FB0
	CLR.w	$FFFFB6EC
	BRA.b	loc_000018F0
loc_000018EC:
	BSR.w	loc_0000195E
loc_000018F0:
	PEA	loc_00001C1C
	CLR.w	-(A7)
loc_000018F8:
	BSR.w	loc_00007D64
	CMPI.w	#3, $FFFFB294
	BCS.b	loc_0000190A
	BSR.w	loc_0000160A
loc_0000190A:
	ANDI.w	#$8080, $FFFFF602.w
	TST.w	(A7)
	BNE.b	loc_0000194E
	MOVEA.l	$2(A7), A0
	MOVE.b	(A0), D0
	BPL.b	loc_0000192C
	TST.w	$FFFFB292
	BEQ.b	loc_0000195A
	CLR.w	$FFFFB292
	BRA.b	loc_00001950
loc_0000192C:
	EXT.w	D0
	MOVE.w	D0, $FFFFB294
	MOVE.b	$2(A0), D0
	EXT.w	D0
	MOVE.w	D0, $FFFFB296
	MOVE.b	$3(A0), D0
	EXT.w	D0
	MOVE.w	D0, (A7)
	ADDQ.l	#4, A0
	MOVE.l	A0, $2(A7)
loc_0000194E:
	SUBQ.w	#1, (A7)
loc_00001950:
	BSR.w	loc_00001820
	BSR.w	loc_00000DCA
	BRA.b	loc_000018F8
loc_0000195A:
	ADDQ.l	#6, A7
	RTS
loc_0000195E:
	LEA	loc_0002F806, A0
	LEA	$FFFFA276.w, A4
	BSR.w	loc_0000811A
	BSR.w	loc_00002CB8
	CLR.w	$FFFFB294
	CLR.w	$FFFFB296
	RTS
loc_0000197E:
	BSR.w	loc_00002CB8
	MOVE.w	#6, $FFFFB294
	MOVE.w	#$0020, $FFFFB296
	PEA	loc_00001FA8
	CLR.w	-(A7)
loc_0000199A:
	BSR.w	loc_00007D64
	ANDI.w	#$8080, $FFFFF602.w
	TST.w	(A7)
	BNE.b	loc_000019D4
	MOVEA.l	$2(A7), A0
	MOVE.b	$1(A0), D0
	BMI.b	loc_000019E0
	EXT.w	D0
	MOVE.w	D0, $FFFFB294
	MOVE.b	$2(A0), D0
	EXT.w	D0
	MOVE.w	D0, $FFFFB296
	MOVE.b	$3(A0), D0
	EXT.w	D0
	MOVE.w	D0, (A7)
	SUBQ.l	#4, A0
	MOVE.l	A0, $2(A7)
loc_000019D4:
	SUBQ.w	#1, (A7)
	BSR.w	loc_00001820
	BSR.w	loc_00000DCA
	BRA.b	loc_0000199A
loc_000019E0:
	ADDQ.l	#6, A7
	RTS
loc_000019E4:
	BTST.b	#0, $FFFF826B.w
	BEQ.b	loc_00001A04
	SUBQ.w	#1, $FFFFF61C.w
	SUBQ.w	#1, $FFFFF61E.w
	MOVE.w	$FFFFF61C.w, D0
	ANDI.w	#7, D0
	BNE.w	loc_00001A04
	BSR.w	loc_00001A06
loc_00001A04:
	RTS
loc_00001A06:
	LEA	$FFFF9276.w, A4
	MOVE.w	$FFFF8272.w, D0
	SUBI.w	#$0E80, D0
	ANDI.w	#$0F80, D0
	ADDA.w	D0, A4
	BSR.w	loc_00001A34
	LEA	$FFFF8276.w, A4
	MOVE.w	$FFFF8274.w, D0
	SUBI.w	#$0E80, D0
	ANDI.w	#$0F80, D0
	ADDA.w	D0, A4
	BSR.w	loc_00001A60
	RTS
loc_00001A34:
	LEA	$FFFF0000, A1
	LEA	$FFFF4000, A2
	MOVEQ	#$00000017, D7
loc_00001A42:
	MOVE.w	(A4)+, D0
	CMPI.w	#$FFFF, D0
	BEQ.b	loc_00001A4E
	BSR.w	loc_00001A8C
loc_00001A4E:
	MOVE.w	(A4)+, D0
	CMPI.w	#$FFFF, D0
	BEQ.b	loc_00001A5A
	BSR.w	loc_00001A8C
loc_00001A5A:
	DBF	D7, loc_00001A42
	RTS
loc_00001A60:
	LEA	$FFFF0000, A1
	LEA	$FFFF4000, A2
	MOVEQ	#$00000017, D7
loc_00001A6E:
	MOVE.w	(A4)+, D0
	CMPI.w	#$FFFF, D0
	BEQ.b	loc_00001A7A
	BSR.w	loc_00001AAA
loc_00001A7A:
	MOVE.w	(A4)+, D0
	CMPI.w	#$FFFF, D0
	BEQ.b	loc_00001A86
	BSR.w	loc_00001AAA
loc_00001A86:
	DBF	D7, loc_00001A6E
	RTS
loc_00001A8C:
	BSR.w	loc_0000146C
	ADD.w	D0, D0
	MOVE.w	(A1,D0.w), D1
	BMI.b	loc_00001AA8
	ADD.w	D1, D1
	SUBQ.w	#1, (A2,D1.w)
	BNE.w	loc_00001AA8
	MOVE.w	#$FFFF, (A1,D0.w)
loc_00001AA8:
	RTS
loc_00001AAA:
	BSR.w	loc_00001472
	ADD.w	D0, D0
	MOVE.w	(A1,D0.w), D1
	BMI.b	loc_00001AC6
	ADD.w	D1, D1
	SUBQ.w	#1, (A2,D1.w)
	BNE.w	loc_00001AC6
	MOVE.w	#$FFFF, (A1,D0.w)
loc_00001AC6:
	RTS
loc_00001AC8:
	LEA	$FFFF0000, A0
	LEA	$FFFF4000, A1
	LEA	loc_00C00000, A3
	MOVE.w	$FFFF826A.w, D7
	ANDI.w	#$000F, D7
	LSL.w	#2, D7
	MOVEA.l	A1, A5
	BSR.w	loc_00001B0E
	BSR.w	loc_00001B3C
	ADDQ.w	#1, D7
	BSR.w	loc_00001B0E
	BSR.w	loc_00001B3C
	ADDQ.w	#1, D7
	BSR.w	loc_00001B0E
	BSR.w	loc_00001B3C
	ADDQ.w	#1, D7
	BSR.w	loc_00001B0E
	BSR.w	loc_00001B3C
	RTS
loc_00001B0E:
	BSR.w	loc_00001296
	MOVE.w	D0, D1
	ADD.w	D1, D1
	MOVE.w	(A0,D1.w), D2
	BPL.w	loc_00001B2C
	LEA	loc_00059500, A2
	BSR.w	loc_00001B6A
	MOVE.w	D2, (A0,D1.w)
loc_00001B2C:
	MOVE.w	D2, D6
	ADD.w	D6, D6
	ADDQ.w	#1, (A1,D6.w)
	OR.w	$FFFF826E.w, D2
	BRA.w	loc_00001B9C
loc_00001B3C:
	BSR.w	loc_00001374
	MOVE.w	D0, D1
	ADD.w	D1, D1
	MOVE.w	(A0,D1.w), D2
	BPL.w	loc_00001B5A
	LEA	loc_00059500, A2
	BSR.w	loc_00001B6A
	MOVE.w	D2, (A0,D1.w)
loc_00001B5A:
	MOVE.w	D2, D6
	ADD.w	D6, D6
	ADDQ.w	#1, (A1,D6.w)
	OR.w	$FFFF8270.w, D2
	BRA.w	loc_00001BC2
loc_00001B6A:
	TST.w	(A5)+
	BNE.b	loc_00001B6A
	MOVE.l	A5, D6
	SUBQ.l	#2, D6
	SUB.l	A1, D6
	LSR.w	#1, D6
	CLR.l	D2
	MOVE.w	D0, D2
	LSL.l	#5, D2
	MOVEA.l	A2, A4
	ADDA.l	D2, A4
	MOVE.w	D6, D5
	LSL.w	#5, D5
	BSR.w	loc_00001BEC
	MOVE.l	(A4)+, (A3)
	MOVE.l	(A4)+, (A3)
	MOVE.l	(A4)+, (A3)
	MOVE.l	(A4)+, (A3)
	MOVE.l	(A4)+, (A3)
	MOVE.l	(A4)+, (A3)
	MOVE.l	(A4)+, (A3)
	MOVE.l	(A4)+, (A3)
	MOVE.w	D6, D2
	RTS
loc_00001B9C:
	CMPI.w	#$0030, D7
	BCC.b	loc_00001BC0
	MOVE.w	$FFFFF61C.w, D5
	SUBQ.w	#8, D5
	ANDI.w	#$00FF, D5
	LSR.w	#3, D5
	LSL.w	#7, D5
	MOVE.w	D7, D6
	ADD.w	D6, D6
	ADD.w	D6, D5
	ADDI.w	#$E000, D5
	BSR.w	loc_00001BEC
	MOVE.w	D2, (A3)
loc_00001BC0:
	RTS
loc_00001BC2:
	CMPI.w	#$0030, D7
	BCC.b	loc_00001BEA
	MOVE.w	$FFFFF61C.w, D5
	SUBQ.w	#8, D5
	ANDI.w	#$00FF, D5
	LSR.w	#3, D5
	LSL.w	#7, D5
	MOVE.w	D7, D6
	ADD.w	D6, D6
	ADD.w	D6, D5
	ADDI.w	#$C000, D5
	BSR.w	loc_00001BEC
	ORI.w	#$8000, D2
	MOVE.w	D2, (A3)
loc_00001BEA:
	RTS
loc_00001BEC:
	MOVEM.l	D5/D1, -(A7)
	BSR.b	loc_00001BF8
	MOVEM.l	(A7)+, D1/D5
	RTS
loc_00001BF8:
	MOVE.w	D5, D1
	ANDI.w	#$3FFF, D1
	ORI.w	#$4000, D1
	SWAP	D1
	ADD.w	D5, D5
	ROXL.w	#1, D1
	ADD.w	D5, D5
	ROXL.w	#1, D1
	ANDI.w	#3, D1
	MOVE.l	D1, loc_00C00004
	RTS
loc_00001C1C:
loc_00001FA8:
loc_00001FB0:
	BSR.w	loc_0000910C
	BSR.w	loc_00002498
	CLR.w	D3
loc_00001FBA:
	MOVE.w	D3, -(A7)
	BSR.w	loc_00001FE4
	MOVE.w	$FFFFF610.w, D0
	ORI.b	#$40, D0
	MOVE.w	D0, loc_00C00004
	MOVE.w	(A7)+, D3
	TST.w	D3
	BEQ.b	loc_00001FDA
	CMPI.w	#$FEA0, D3
	BCS.b	loc_00001FDE
loc_00001FDA:
	SUBQ.w	#4, D3
	BRA.b	loc_00001FBA
loc_00001FDE:
	BSR.w	loc_000090F8
	RTS
loc_00001FE4:
	MOVE.l	#$00FFE800, $FFFF8210.w
	MOVE.w	#1, $FFFF8214.w
	BSR.w	loc_00002046
	BSR.w	loc_00000ECA
	BSR.w	loc_00007D64
	CLR.w	$FFFFF002.w
	ANDI.w	#$8080, $FFFFF602.w
	RTS
loc_0000200A:
	BSR.w	loc_0000910C
	MOVE.w	#$FEA0, D3
loc_00002012:
	MOVE.w	D3, -(A7)
	BSR.b	loc_00001FE4
	MOVE.w	(A7)+, D3
	TST.w	D3
	BPL.b	loc_00002020
	ADDQ.w	#4, D3
	BRA.b	loc_00002012
loc_00002020:
	RTS
loc_00002022:
	BSR.w	loc_0000910C
	MOVE.l	#$00FFE800, $FFFF8210.w
	MOVE.w	#1, $FFFF8214.w
	CLR.w	D3
	BSR.w	loc_00002046
	MOVEA.l	$FFFF8210.w, A1
	CLR.l	(A1)+
	CLR.l	(A1)+
	BRA.w	loc_00007D64
loc_00002046:
	MOVEA.l	$FFFF8210.w, A1
	MOVE.w	$FFFF8214.w, D6
	LEA	loc_00020E80, A0
	MOVE.w	#$0080, D5
	MOVEQ	#$0000000A, D7
loc_0000205A:
	MOVE.w	D7, -(A7)
	MOVE.w	#$0080, D4
	BSR.w	loc_00002078
	ADDI.w	#$0020, D5
	MOVE.w	(A7)+, D7
	DBF	D7, loc_0000205A
	MOVE.l	A1, $FFFF8210.w
	MOVE.w	D6, $FFFF8214.w
	RTS
loc_00002078:
	MOVEQ	#7, D7
loc_0000207A:
	CMPI.w	#$FFFF, (A0)
	BEQ.b	loc_0000209E
	MOVE.w	D5, D0
	ADD.w	D3, D0
	CMPI.w	#$0060, D0
	BCS.b	loc_0000209E
	CMPI.w	#$0160, D0
	BCC.b	loc_0000209E
	MOVE.w	D0, (A1)+
	MOVE.b	#$0F, (A1)+
	MOVE.b	D6, (A1)+
	ADDQ.b	#1, D6
	MOVE.w	(A0), (A1)+
	MOVE.w	D4, (A1)+
loc_0000209E:
	ADDQ.l	#2, A0
	ADDI.w	#$0020, D4
	DBF	D7, loc_0000207A
	RTS
loc_000020AA:
	BSR.w	loc_000092C6
loc_000020AE:
	TST.b	$FFFFB299
	BEQ.b	loc_000020C6
	MOVEQ	#0, D0
	MOVEQ	#3, D1
	BSR.w	loc_0000234C
	SUBQ.b	#1, $FFFFB299
	BRA.b	loc_000020AE
loc_000020C6:
	MOVE.b	$FFFFFFDF.w, D0
	ADDQ.b	#2, D0
	CMPI.b	#8, D0
	BCS.b	loc_000020D4
	MOVEQ	#7, D0
loc_000020D4:
	MOVE.b	D0, $FFFFFFDF.w
	MOVEA.l	loc_00000000, A7
	BRA.w	loc_00000CC2
loc_000020E0:
	MOVE.b	#1, $FFFFF004.w
	MOVE.w	$FFFFF002.w, D0
	ANDI.b	#$0F, D0
	BNE.b	loc_000020FC
	MOVE.b	#$40, $FFFFD11A
	BSR.w	loc_000020FE
loc_000020FC:
	RTS
loc_000020FE:
	LEA	$FFFFFB00.w, A0
	MOVEQ	#$0000003F, D7
loc_00002104:
	MOVE.w	(A0), D0
	BSR.w	loc_00002112
	MOVE.w	D2, (A0)+
	DBF	D7, loc_00002104
	RTS
loc_00002112:
	CLR.w	D2
	MOVE.w	D0, -(A7)
	ANDI.w	#$000E, D0
	BSR.w	loc_00002142
	OR.w	D0, D2
	MOVE.w	(A7), D0
	LSR.w	#4, D0
	ANDI.w	#$000E, D0
	BSR.w	loc_00002142
	LSL.w	#4, D0
	OR.w	D0, D2
	MOVE.w	(A7)+, D0
	LSR.w	#8, D0
	ANDI.w	#$000E, D0
	BSR.w	loc_00002142
	LSL.w	#8, D0
	OR.w	D0, D2
	RTS
loc_00002142:
	ADDQ.b	#2, D0
	CMPI.b	#$0F, D0
	BCS.b	loc_0000214C
	MOVEQ	#$0000000E, D0
loc_0000214C:
	RTS
loc_0000214E:
	MOVEM.l	D0, -(A7)
	MOVE.w	$FFFFB28E, D0
	CMPI.w	#$00F0, D0
	BGT.b	loc_00002162
	BLT.b	loc_00002172
	BRA.b	loc_00002180
loc_00002162:
	SUBQ.w	#1, D0
	MOVE.w	D0, $FFFFB28E
	MOVE.b	#4, $FFFFF602.w
	BRA.b	loc_00002180
loc_00002172:
	ADDQ.w	#1, D0
	MOVE.w	D0, $FFFFB28E
	MOVE.b	#8, $FFFFF602.w
loc_00002180:
	MOVE.w	D0, $FFFFB28E
	MOVE.w	$FFFFB290, D0
	CMPI.w	#$00F8, D0
	BGT.b	loc_00002196
	BLT.b	loc_000021A0
	BRA.b	loc_000021A8
loc_00002196:
	SUBQ.w	#1, D0
	MOVE.w	D0, $FFFFB290
	BRA.b	loc_000021A8
loc_000021A0:
	ADDQ.w	#1, D0
	MOVE.w	D0, $FFFFB290
loc_000021A8:
	MOVEM.l	(A7)+, D0
	RTS
loc_000021AE:
loc_000021B4:
loc_000021BB:
loc_000021C2:
loc_000021C8:
loc_000021D2:
	MOVE.b	$FFFFF605.w, D1
	BEQ.b	loc_000021F4
	LEA	$FFFFB278, A0
	MOVE.w	$FFFFB276, D0
	ANDI.w	#$000F, D0
	MOVE.b	D1, (A0,D0.w)
	ADDQ.w	#1, D0
	MOVE.w	D0, $FFFFB276
loc_000021F4:
	RTS
loc_000021F8:
	LEA	$FFFFB278, A0
	MOVE.w	$FFFFB276, D0
loc_00002204:
	TST.b	(A1)
	BEQ.w	loc_00002224
	SUBQ.w	#1, D0
	ANDI.w	#$000F, D0
	MOVE.b	(A0,D0.w), D1
	CMP.b	(A1)+, D1
	BNE.b	loc_0000221A
	BRA.b	loc_00002204
loc_0000221A:
	CLR.w	$FFFFB288
	CLR.b	D0
	RTS
loc_00002224:
	CLR.l	(A0)
	CLR.l	$4(A0)
	CLR.l	$8(A0)
	CLR.l	$C(A0)
	MOVE.w	#1, $FFFFB288
	MOVEQ	#1, D0
	RTS
loc_0000223E:
	BSR.w	loc_000022A6 ; @ Reset player stats
	BSR.w	loc_000022FA
	RTS
loc_00002248:
	BSR.b	loc_0000223E
	LEA	$FFFFB28E.w, A0 ; @ Initialize player position x,y at start
	MOVE.w	#$00F0, (A0)+
	MOVE.w	#$00E0, (A0)
loc_00002256:
	LEA	loc_00033510, A0
	BSR.w	loc_0000231A
	BSR.w	loc_00009120
	MOVE.l	#$50000003, loc_00C00004
	LEA	loc_0002F1A6, A0
	BSR.w	loc_00008108
	BSR.w	loc_0000227E
	RTS
loc_0000227E:
	MOVE.l	#$46000001, loc_00C00004
	LEA	loc_0002FF92, A0
	BRA.w	loc_00008108
loc_00002292:
	MOVE.l	#$78000000, loc_00C00004
	LEA	loc_0002F806, A0
	BRA.w	loc_00008108
loc_000022A6:
	; @ Reset player stats (power, bombs...)
	CLR.b	$FFFFB2B7
	CLR.b	$FFFFB2B8
	MOVE.b	#3, $FFFFB2B6
	CLR.w	$FFFFB28A.w
	CLR.b	$FFFFB2B0.w
	CLR.b	$FFFFB2B1.w
	CLR.b	$FFFFB2AE.w
	CLR.w	$FFFFB298.w
	CLR.w	$FFFFCC9C
	CLR.w	$FFFFCB1A
	CLR.w	$FFFFB292.w
	; Apply config number of lives
	MOVE.b	$FFFFFFD9.w, D0
	ADDQ.b	#2, D0
	MOVE.b	D0, $FFFFB29F.w
	RTS
loc_000022EA:
loc_000022FA:
	CLR.l	$FFFFB2A2.w
	CLR.w	D0
	MOVE.b	$FFFFFFDC.w, D0 ; D0=Extend setting
	ADD.w	D0, D0 ; D0*=4
	ADD.w	D0, D0
	LEA	loc_000022EA, A0
	MOVE.l	(A0,D0.w), $FFFFB2A6.w ; RAM:$B2A6.l=ROM:$22EA[extend_idx.b*4]
	CLR.w	$FFFFB29C.w ; Reset 1-up counter
	RTS
loc_0000231A:
	LEA	loc_00C00000, A1
	LEA	loc_00C00004, A2
	MOVE.l	#$40600003, D0
	MOVEQ	#$0000001F, D7
loc_0000232E:
	MOVE.l	D0, (A2)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	ADDI.l	#$00800000, D0
	DBF	D7, loc_0000232E
	RTS
loc_0000234C:
	MOVEM.l	A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFB2A2.w, A0
	CLR.b	D2
	CLR.b	D3
	BSR.w	loc_000023C4
	MOVE.l	(A0), D0 ; D0=Score
	LEA	$FFFFB2A6.w, A0
	CMP.l	(A0), D0 ; Compare score with next extend
	BCS.b	loc_000023A2
	CLR.w	D0
	MOVE.b	$FFFFFFDC.w, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	CMPI.l	#$00008000, (A0)
	BCC.b	loc_00002384
	LEA	loc_000023EA, A1
	MOVE.l	(A1,D0.w), (A0)
	BRA.b	loc_0000239E
loc_00002384:
	LEA	loc_000023FA, A1
	MOVE.b	(A1,D0.w), D3
	MOVE.b	$1(A1,D0.w), D2
	MOVE.b	$2(A1,D0.w), D1
	MOVE.b	$3(A1,D0.w), D0
	BSR.w	loc_000023C4
loc_0000239E:
	BSR.w	loc_000023A8
loc_000023A2:
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1
	RTS
loc_000023A8:
	MOVEM.l	A0/D1/D0, -(A7)
	LEA	$FFFFB29F.w, A0
	MOVE.b	(A0), D0
	MOVEQ	#1, D1
	ABCD	D1, D0
	MOVE.b	D0, (A0)
	MOVEQ	#$0000000B, D0
	BSR.w	loc_00008428
	MOVEM.l	(A7)+, D0/D1/A0
	RTS
loc_000023C4:
	MOVE.b	(A0), D7
	MOVE.b	$1(A0), D6
	MOVE.b	$2(A0), D5
	MOVE.b	$3(A0), D4
	ABCD	D0, D4
	ABCD	D1, D5
	ABCD	D2, D6
	ABCD	D3, D7
	MOVE.b	D7, (A0)
	MOVE.b	D6, $1(A0)
	MOVE.b	D5, $2(A0)
	MOVE.b	D4, $3(A0)
	RTS
loc_000023EA:
loc_000023FA:
loc_0000240A:
	TST.b	$FFFFF782.w
	BNE.b	loc_00002446
	MOVE.w	#$0090, D4
	MOVE.w	#$0084, D5
	MOVE.l	$FFFFB2A2.w, D0
	BSR.w	loc_00002D64
	MOVEA.l	$FFFF8210, A0
	MOVE.w	$FFFF8214, D6
	MOVE.w	D5, (A0)+
	CLR.b	(A0)+
	MOVE.b	D6, (A0)+
	ADDQ.b	#1, D6
	MOVE.w	#$E623, (A0)+
	MOVE.w	D4, (A0)+
	MOVE.l	A0, $FFFF8210
	MOVE.w	D6, $FFFF8214
loc_00002446:
	RTS
loc_00002448:
	MOVEA.l	$FFFF8210, A0
	MOVE.w	$FFFF8214, D6
	MOVE.w	#$014C, (A0)+
	MOVE.b	#5, (A0)+
	MOVE.b	D6, (A0)+
	ADDQ.b	#1, D6
	MOVE.w	#$E6E4, (A0)+
	MOVE.w	#$0150, (A0)+
	MOVE.w	#$0150, (A0)+
	MOVE.b	#0, (A0)+
	MOVE.b	D6, (A0)+
	ADDQ.b	#1, D6
	CLR.w	D0
	MOVE.b	$FFFFB2B6, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADDI.w	#$E623, D0
	MOVE.w	D0, (A0)+
	MOVE.w	#$0168, (A0)+
	MOVE.l	A0, $FFFF8210
	MOVE.w	D6, $FFFF8214
	RTS
loc_00002498: ; @ Player directional movement
	LEA	$FFFFF602.w, A0 ; @ Read directional movement. bits: 0000RLDU U=1 D=2 L=4 R=8
	MOVE.w	$FFFFB28E.w, D0 ; Player X
	MOVE.w	$FFFFB290.w, D1 ; Player Y
	MOVE.w	$FFFFB28A.w, D2 ; Alternates 0 and 1 every frame
	ANDI.w	#1, D2 ; D2=max(1,D2)
	ADDQ.w	#1, D2 ; Player speed
	BTST.b	#0, (A0) ; Test UP. BTST sets Z flag to inverse of bit value
	BEQ.b	loc_000024BC ; Branch when Z=1 (bit not set)
	CMPI.w	#$0082, D1
	BCS.b	loc_000024BC ; Skip if y<130
	SUB.w	D2, D1 ; Decrease y
loc_000024BC:
	BTST.b	#1, (A0) ; Test DOWN
	BEQ.b	loc_000024CA
	CMPI.w	#$012E, D1 ; Skip if y>=302
	BCC.b	loc_000024CA
	ADD.w	D2, D1 ; Increase y
loc_000024CA:
	LEA	$FFFFB2AE.w, A1 ; Sprite tilting left or right
	LEA	$FFFFB2B0.w, A2
	BTST.b	#2, (A0) ; Test LEFT
	BEQ.b	loc_000024F6
	CMPI.w	#$0082, D0
	BCS.b	loc_0000252A
	SUB.w	D2, D0 ; x-=D2
	TST.b	(A1)
	BNE.b	loc_0000252A
	CMPI.b	#$FF, $1(A2)
	BEQ.b	loc_0000252A
	CLR.b	(A1)
	MOVE.b	#$FF, $1(A2)
	BRA.b	loc_0000252A
loc_000024F6:
	BTST.b	#3, (A0) ; Test RIGHT
	BEQ.w	loc_0000251C
	CMPI.w	#$015E, D0
	BCC.b	loc_0000252A
	ADD.w	D2, D0 ; x+=D2
	TST.b	(A1)
	BNE.b	loc_0000252A
	CMPI.b	#1, $1(A2)
	BEQ.b	loc_0000252A
	CLR.b	(A1)
	MOVE.b	#1, $1(A2)
	BRA.b	loc_0000252A
loc_0000251C:
	TST.b	$1(A2)
	BEQ.b	loc_0000252A
	MOVE.b	#$0C, (A1)
	CLR.b	$FFFFB2B1.w
loc_0000252A:
	MOVE.w	D0, $FFFFB28E.w ; Write X
	MOVE.w	D1, $FFFFB290.w ; Write Y
	MOVE.w	$FFFFB28E.w, D0
	SUBI.w	#$0070, D0
	ASR.w	#1, D0
	MOVE.w	D0, $FFFFF620.w ; Set scrolling offsets
	MOVE.w	D0, $FFFFF622.w
	TST.b	(A1)
	BNE.b	loc_00002566
	MOVE.b	#$0C, (A1)
	TST.b	$1(A2)
	BEQ.b	loc_0000256A
	MOVE.b	(A2), D0
	ADD.b	$1(A2), D0
	CMPI.b	#$FE, D0
	BEQ.b	loc_00002568
	CMPI.b	#2, D0
	BEQ.b	loc_00002568
	MOVE.b	D0, (A2)
loc_00002566:
	SUBQ.b	#1, (A1)
loc_00002568:
	RTS
loc_0000256A:
	CLR.b	$FFFFB2B0.w
	RTS
loc_00002570:
	MOVE.w	$FFFFB292.w, D0
	BEQ.b	loc_0000258A
	CMPI.w	#2, D0
	BEQ.w	loc_00002CD2
	CMPI.w	#3, D0
	BEQ.w	loc_00002618
	BRA.w	loc_00002B3E
loc_0000258A:
	LEA	$FFFFF602.w, A0
	MOVE.b	$FFFFB2B0.w, D0
	CMPI.b	#$FF, D0
	BNE.b	loc_000025A0
	LEA	loc_00002622, A0
	BRA.b	loc_000025B6
loc_000025A0:
	CMPI.b	#1, D0
	BNE.w	loc_000025B0
	LEA	loc_0000262A, A0
	BRA.b	loc_000025B6
loc_000025B0:
	LEA	loc_0000261A, A0
loc_000025B6:
	BTST.b	#1, $FFFFF003.w
	BEQ.b	loc_000025C0
	ADDQ.l	#4, A0
loc_000025C0:
	MOVEA.l	(A0), A0
	MOVE.w	$FFFFB28A.w, D0
	ADDQ.w	#1, D0
	CMPI.w	#2, D0
	BCS.b	loc_000025D0
	CLR.w	D0
loc_000025D0:
	MOVE.w	D0, $FFFFB28A.w
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
	CLR.w	D7
	MOVE.b	(A0)+, D7
loc_000025E4:
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	$FFFFB290.w, D0
	MOVE.w	D0, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	D6, (A1)+
	MOVE.b	(A0)+, (A1)
	MOVE.b	(A0)+, $1(A1)
	ADDI.w	#$0680, (A1)+
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	$FFFFB28E.w, D0
	MOVE.w	D0, (A1)+
	ADDQ.b	#1, D6
	SUBQ.w	#1, D7
	BNE.b	loc_000025E4
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
loc_00002618:
	RTS
loc_0000261A:
loc_00002622:
loc_0000262A:
loc_00002632:
	MOVE.b	$FFFFF603.w, $FFFFB2BA.w
	CMPI.b	#1, $FFFFB2B7.w
	BEQ.b	loc_00002656
	TST.b	$FFFFF782.w
	BNE.b	loc_0000264C
	TST.b	$FFFFFFE5.w
	BNE.b	loc_00002664
loc_0000264C:
	MOVE.b	$FFFFB2BB.w, D0
	ANDI.b	#7, D0
	BNE.b	loc_00002664
loc_00002656:
	MOVE.b	$FFFFF602.w, D0
	ANDI.b	#$50, D0
	BEQ.b	loc_00002664
	MOVE.b	D0, $FFFFB2BA.w
loc_00002664:
	ADDQ.b	#1, $FFFFB2BB.w
	RTS
loc_0000266A:
	TST.b	$FFFFB2B9.w
	BNE.b	loc_0000267A
	BTST.b	#6, $FFFFB2BA.w
	BNE.b	loc_00002680
	RTS
loc_0000267A:
	SUBQ.b	#1, $FFFFB2B9.w
	RTS
loc_00002680:
	BRA.b	loc_00002684loc_00002684:
	LEA	$FFFFB2BC.w, A2
	MOVE.w	$FFFFB28E.w, D2
	MOVE.w	$FFFFB290.w, D3
	MOVEQ	#3, D7
loc_00002692:
	TST.b	(A2)
	BNE.b	loc_000026B4
	TST.b	$18(A2)
	BNE.b	loc_000026B4
	TST.b	$30(A2)
	BNE.b	loc_000026B4
	TST.b	$48(A2)
	BNE.b	loc_000026B4
	TST.b	$60(A2)
	BNE.b	loc_000026B4
	TST.b	$78(A2)
	BEQ.b	loc_000026BE
loc_000026B4:
	ADDA.w	#$0090, A2
	DBF	D7, loc_00002692
	RTS
loc_000026BE:
	MOVE.b	$FFFFB2B7.w, D0	; @ Check weapon type
	BEQ.w	loc_000026F8
	CMPI.b	#1, D0
	BEQ.w	loc_000026E4
	CMPI.b	#2, D0
	BEQ.w	loc_000026DA
	BRA.w	loc_000026EE
loc_000026DA:
	LEA	loc_00020F88, A0 ; 212BC blue
	BRA.w	loc_000026FE
loc_000026E4:
	LEA	loc_00020FB4, A0 ; 2145A green
	BRA.w	loc_000026FE
loc_000026EE:
	LEA	loc_00020F5C, A0 ; 21156 yellow
	BRA.w	loc_000026FE
loc_000026F8:
	LEA	loc_00020F30, A0 ; 20FE0 red
loc_000026FE: ; @ Shooting
	CLR.w	D0
	MOVE.b	$FFFFB2B8.w, D0
	LSL.w	#2, D0	; D0*=4
	MOVEA.l	(A0,D0.w), A0
	MOVE.b	(A0)+, D6
	MOVE.b	(A0)+, $FFFFB2B9.w
loc_00002710:
	MOVE.b	$FFFFB2B7.w, $2(A2)
	MOVE.b	(A0)+, (A2)
	MOVE.w	$FFFFB28E.w, D0
	MOVE.b	(A0)+, D1
	EXT.w	D1
	ADD.w	D1, D0
	MOVE.w	D0, $6(A2)
	MOVE.w	$FFFFB290.w, D0
	MOVE.b	(A0)+, D1
	EXT.w	D1
	ADD.w	D1, D0
	MOVE.w	D0, $8(A2)
	MOVE.b	(A0)+, $A(A2)
	MOVE.b	(A0)+, $B(A2)
	MOVE.b	(A0)+, $C(A2)
	MOVE.b	(A0)+, $D(A2)
	MOVE.b	(A0)+, $3(A2)
	CLR.w	$4(A2)
	ADDA.w	#$0018, A2
	SUBQ.b	#1, D6
	BNE.b	loc_00002710
	RTS
loc_00002756:
	LEA	$FFFFB2BC.w, A2
	MOVEQ	#$0000001F, D7
loc_0000275C:
	TST.b	(A2)
	BEQ.b	loc_000027A8
	TST.b	$3(A2)
	BMI.b	loc_0000276C
	SUBQ.b	#1, $3(A2)
	BRA.b	loc_000027A8
loc_0000276C:
	CLR.w	D0
	MOVE.b	(A2), D0
	TST.w	$4(A2)
	BNE.b	loc_00002778
	ADDQ.b	#1, D0
loc_00002778:
	LSL.b	#2, D0
	LEA	loc_00021628, A0
	MOVEA.l	(A0,D0.w), A0
	MOVE.w	D7, -(A7)
	BSR.w	loc_00002812
	MOVE.w	(A7)+, D7
	MOVE.b	$2(A2), D6
	TST.b	D6
	BEQ.b	loc_000027B2
	BRA.b	loc_000027E4
loc_00002796:
	SUBQ.w	#8, $8(A2)
loc_0000279A:
	CMPI.w	#$0078, $8(A2)
	BCC.b	loc_000027A4
loc_000027A2:
	CLR.b	(A2)
loc_000027A4:
	ADDQ.w	#1, $4(A2)
loc_000027A8:
	ADDA.w	#$0018, A2
	DBF	D7, loc_0000275C
	RTS
loc_000027B2:
	TST.b	$A(A2)
	BMI.b	loc_000027CA
	BEQ.b	loc_000027C4
	SUBQ.w	#4, $6(A2)
	SUBQ.b	#1, $A(A2)
	BRA.b	loc_000027A8
loc_000027C4:
	MOVE.b	#$FF, $A(A2)
loc_000027CA:
	TST.b	$B(A2)
	BMI.b	loc_000027E2
	BEQ.b	loc_000027DC
	ADDQ.w	#4, $6(A2)
	SUBQ.b	#1, $B(A2)
	BRA.b	loc_000027A8
loc_000027DC:
	MOVE.b	#$FF, $B(A2)
loc_000027E2:
	BRA.b	loc_00002796
loc_000027E4:
	MOVE.b	$C(A2), D0
	EXT.w	D0
	ADD.w	D0, $6(A2)
	CMPI.w	#$0070, $6(A2)
	BCS.b	loc_000027A2
	CMPI.w	#$0180, $6(A2)
	BCC.b	loc_000027A2
	MOVE.b	$D(A2), D0
	EXT.w	D0
	ADD.w	D0, $8(A2)
	CMPI.w	#$0160, $8(A2)
	BCC.b	loc_000027A2
	BRA.b	loc_0000279A
loc_00002812:
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
	CLR.w	D7
	MOVE.b	(A0)+, D7
loc_00002822:
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	$8(A2), D0
	MOVE.w	D0, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	D6, (A1)+
	MOVE.b	(A0)+, (A1)
	MOVE.b	(A0)+, $1(A1)
	ADDI.w	#$0780, (A1)+
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	$6(A2), D0
	MOVE.w	D0, (A1)+
	ADDQ.b	#1, D6
	SUBQ.w	#1, D7
	BNE.b	loc_00002822
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
	RTS
loc_00002858:
	TST.b	$FFFFB5C8.w
	BNE.b	loc_000028A4
	BTST.b	#4, $FFFFB2BA.w
	BNE.b	loc_00002868
	RTS
loc_00002868:
	TST.b	$FFFFB2B6.w
	BEQ.b	loc_000028A2
	SUBQ.b	#1, $FFFFB2B6.w
	MOVE.w	$FFFFB28E.w, D0
	ADDI.w	#$FFB0, D0
	ADD.w	$FFFFF622.w, D0
	MOVE.w	D0, $FFFFB5BC.w
	MOVE.w	$FFFFB290.w, D0
	SUBI.w	#$0064, D0
	MOVE.w	D0, $FFFFB5C0.w
	MOVE.l	#$00021762, $FFFFB5C4.w
	MOVE.b	#1, $FFFFB5C8.w
	MOVEQ	#$0000000C, D0
	BSR.w	loc_00008428
loc_000028A2:
	RTS
loc_000028A4:
	MOVEA.l	$FFFFB5C4.w, A0
	MOVE.b	(A0)+, D1
	MOVE.b	(A0)+, $FFFFB5C9.w
	CMPI.b	#$80, D1
	BEQ.w	loc_0000297E
	MOVE.l	A0, $FFFFB5C4.w
	EXT.w	D1
	ADD.w	D1, $FFFFB5C0.w
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $FFFFB5C0.w
	LEA	loc_0002182C, A0
	CLR.w	D0
	MOVE.b	$FFFFB5C9.w, D0
	ADD.b	D0, D0
	ADD.b	D0, D0
	MOVEA.l	(A0,D0.w), A0
	BSR.w	loc_000028E4
	RTS
loc_000028E4:
	LEA	$FFFFB5C9.w, A4
	LEA	$FFFFF620.w, A5
	CMPI.b	#5, (A4)
	BEQ.b	loc_00002900
	CMPI.b	#6, (A4)
	BEQ.b	loc_00002900
	CMPI.b	#7, (A4)
	BEQ.b	loc_00002900
	BRA.b	loc_00002918
loc_00002900:
	MOVEQ	#1, D1
	MOVE.w	$FFFFB5CA.w, D0
	ANDI.b	#3, D0
	CMPI.b	#2, D0
	BCC.b	loc_00002912
	NEG.w	D1
loc_00002912:
	ADD.w	D1, (A5)
	ADD.w	D1, $2(A5)
loc_00002918:
	ADDQ.w	#1, $FFFFB5CA.w
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
	MOVE.w	$FFFFB5BC.w, D4
	MOVE.w	$2(A5), D0
	SUB.w	D0, D4
	CMPI.b	#7, (A4)
	BCS.b	loc_00002946
	MOVE.w	$FFFFB5CA.w, D0
	ANDI.w	#1, D0
	BNE.b	loc_00002944
	NOT.w	D0
loc_00002944:
	ADD.w	D0, D4
loc_00002946:
	MOVE.w	$FFFFB5C0.w, D5
	MOVE.b	(A0)+, D7
loc_0000294C:
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	D5, D0
	MOVE.w	D0, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	D6, (A1)+
	MOVE.b	(A0)+, (A1)
	MOVE.b	(A0)+, $1(A1)
	ADDI.w	#$0230, (A1)+
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	D4, D0
	MOVE.w	D0, (A1)+
	ADDQ.b	#1, D6
	SUBQ.b	#1, D7
	BNE.b	loc_0000294C
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
	RTS
loc_0000297E:
	CLR.b	$FFFFB5C8.w
	CLR.b	$FFFFB5C9.w
	RTS
loc_00002988:
	BSR.w	loc_0000157E
	BRA.w	loc_00002292
loc_00002990:
	BSR.w	loc_00002ADC
	BSR.w	loc_000083B0
	BSR.w	loc_00006E62
	BSR.w	loc_0000317E
	BSR.w	loc_00003186
	BSR.w	loc_0000318E
	MOVE.b	$FFFFFFDF.w, $FFFFB2A0.w
	MOVE.b	#1, $FFFFB2A1.w
	LEA	$FFFFB29F.w, A0
	MOVE.b	(A0), D0
	MOVEQ	#1, D1
	SBCD	D1, D0 ; @ Decrease life
	MOVE.b	D0, (A0)
	TST.b	(A0)
	BNE.b	loc_000029E8
	BSR.w	loc_00007576
	BSR.w	loc_00002ADC
	LEA	$FFFFFFD4.w, A0
	LEA	$FFFFB2A2.w, A1
	MOVE.l	(A0), D0
	CMP.l	(A1), D0
	BCC.b	loc_000029DC
	MOVE.l	(A1), (A0)
loc_000029DC:
	BSR.w	loc_000022A6
	BSR.w	loc_000022FA
	BSR.b	loc_00002988
	BRA.b	loc_000029F8
loc_000029E8:
	BSR.b	loc_00002988
	MOVEQ	#2, D0
	BSR.w	loc_00007BD8
	BSR.w	loc_00002DFA
	CLR.b	$FFFFF004.w
loc_000029F8:
	MOVEQ	#2, D0
	BSR.w	loc_00007BD8
	BSR.w	loc_000015A2
	MOVE.w	$FFFFB29E.w, -(A7)
	BSR.w	loc_000022A6
	MOVE.w	(A7)+, $FFFFB29E.w
	MOVE.w	#$00F0, $FFFFB28E.w
	MOVE.w	#$00E0, $FFFFB290.w
	CMPI.l	#$000001C0, $FFFF8268
	BCC.b	loc_00002A34
	MOVE.l	#$0000E400, $FFFF8268
	BRA.w	loc_00002AA8
loc_00002A34:
	SUBI.l	#$00000080, $FFFF8268
	ANDI.l	#$FFFFFC00, $FFFF8268
	MOVE.l	$FFFF8268, D0
	DIVU.w	#$3000, D0
	CLR.w	D0
	SWAP	D0
	DIVU.w	#$0400, D0
	CMPI.w	#0, D0
	BEQ.b	loc_00002A76
	CMPI.w	#1, D0
	BEQ.b	loc_00002A74
	CMPI.w	#$000B, D0
	BEQ.b	loc_00002A8E
	CMPI.w	#$000C, D0
	BEQ.b	loc_00002A9A
	BRA.b	loc_00002A82
loc_00002A74:
	BRA.b	loc_00002AA8
loc_00002A76:
	ADDI.l	#$00000400, $FFFF8268
	BRA.b	loc_00002AA8
loc_00002A82:
	SUBI.l	#$00000400, $FFFF8268
	BRA.b	loc_00002AA8
loc_00002A8E:
	SUBI.l	#$00000800, $FFFF8268
	BRA.b	loc_00002AA8
loc_00002A9A:
	SUBI.l	#$00000C00, $FFFF8268
	BRA.b	loc_00002AA8loc_00002AA8:
	BSR.w	loc_00001236
	BSR.w	loc_0000317E
	BSR.w	loc_000031A0
	BSR.w	loc_00006E62
	BSR.w	loc_000015BE
	CLR.w	$FFFFB292.w
	MOVE.w	#$FFFF, $FFFFB6EC
	BSR.w	loc_00001FB0
	MOVE.w	#0, $FFFFB6EC
	MOVE.w	#$0168, $FFFFF61A.w
	RTS
loc_00002ADC:
	MOVE.w	#3, $FFFFB292.w
	MOVE.w	#$FFFF, $FFFFB6EC
	CLR.l	$FFFF823E
	BSR.w	loc_0000200A
	CLR.w	$FFFFB6EC
	RTS
loc_00002AFC:
	TST.b	$FFFFCCA2 ; @ Player collision test
	BEQ.b	loc_00002B06
	RTS
loc_00002B06:
	CLR.w	$FFFFB28C.w
	MOVE.w	#1, $FFFFB292.w ; @ Set exploding state
	LEA	loc_00021A20, A0
	LEA	loc_00C00000, A1
	MOVE.l	#$50000003, loc_00C00004
	MOVEQ	#$0000001F, D7
loc_00002B28:
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	DBF	D7, loc_00002B28
	RTS
loc_00002B3E:
	MOVE.w	$FFFFB28C.w, D0
	ADDQ.w	#1, $FFFFB28C.w
	LSR.w	#4, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_0002196A, A0
	MOVE.l	(A0,D0.w), D0
	BEQ.w	loc_00002990 ; @ After player explosion
	MOVE.l	D0, D1
	SUBQ.l	#1, D1
	BEQ.b	loc_00002BBA
	SUBQ.l	#1, D1
	BEQ.b	loc_00002BE0
	SUBQ.l	#1, D1
	BEQ.b	loc_00002BBC
	SUBQ.l	#1, D1
	BEQ.b	loc_00002BD4
	MOVE.w	$FFFFB28E.w, D4
	MOVE.w	$FFFFB290.w, D5
	MOVEA.l	D0, A0
loc_00002B76:
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
	CLR.w	D7
	MOVE.b	(A0)+, D7
loc_00002B86:
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	D5, D0
	SUBQ.w	#8, D0
	MOVE.w	D0, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	D6, (A1)+
	MOVE.b	(A0)+, (A1)
	MOVE.b	(A0)+, $1(A1)
	ADDI.w	#$0680, (A1)+
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	D4, D0
	SUBQ.w	#8, D0
	MOVE.w	D0, (A1)+
	ADDQ.b	#1, D6
	SUBQ.w	#1, D7
	BNE.b	loc_00002B86
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
loc_00002BBA:
	RTS
loc_00002BBC:
	CMPI.b	#1, $FFFFB29F.w
	BNE.b	loc_00002BBA
	MOVE.w	#$00C0, D4
	MOVE.w	#$00C0, D5
	LEA	loc_00021A0A, A0
	BRA.b	loc_00002B76
loc_00002BD4:
	CMPI.b	#1, $FFFFB29F.w
	BEQ.b	loc_00002BBC
	BRA.w	loc_00002990
loc_00002BE0:
	CMPI.b	#1, $FFFFB29F.w
	BNE.b	loc_00002BBA
	MOVE.w	$FFFFB28C.w, D0
	ANDI.b	#$0F, D0
	BNE.b	loc_00002BBA
	MOVE.l	#$50000003, loc_00C00004
	LEA	loc_00021E00, A0
	LEA	loc_00C00000, A1
	MOVEQ	#$0000001F, D7
loc_00002C0A:
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	DBF	D7, loc_00002C0A
	MOVEQ	#8, D0
	BRA.w	loc_000083F4
loc_00002C24:
	MOVE.l	#$7C000000, loc_00C00004
	LEA	loc_000226EC, A0
	BRA.w	loc_00008108
loc_00002C38:
	LEA	loc_0002226B, A0
	MOVE.w	#$00E6, D4
	MOVE.w	#$0098, D5
	BSR.w	loc_00002D22
	MOVE.w	#$00FE, D4
	MOVE.w	#$009E, D5
	MOVEQ	#$0000000D, D0
	BSR.w	loc_00002DC4
	MOVE.w	#$010E, D4
	MOVE.w	#$009E, D5
	MOVE.w	$FFFFB298.w, D0
	BSR.w	loc_00002DAC
	LEA	loc_00022260, A0
	MOVE.w	#$00E6, D4
	MOVE.w	#$00B0, D5
	BSR.w	loc_00002D22
	MOVE.w	#$00F2, D4
	MOVE.w	#$00C8, D5
	CLR.w	D0
	BSR.w	loc_00002DC4
	CLR.w	D0
	BSR.w	loc_00002DC4
	ADDQ.w	#8, D4
	MOVEQ	#$0000000E, D0
	BSR.w	loc_00002DC4
	MOVEQ	#$0000000F, D0
	BSR.w	loc_00002DC4
	MOVEQ	#$00000010, D0
	BSR.w	loc_00002DC4
	MOVEQ	#$00000011, D0
	BSR.w	loc_00002DC4
	MOVE.w	#$00C2, D4
	MOVE.w	#$00C8, D5
	MOVE.l	$FFFFB2AA.w, D0
	BRA.w	loc_00002D64
loc_00002CB8:
	MOVE.w	#2, $FFFFB292.w
	LEA	loc_00022272, A0
	MOVE.l	#$78000000, loc_00C00004
	BRA.w	loc_00008108
loc_00002CD2:
	MOVE.w	$FFFFB294.w, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_00022200, A0
	MOVEA.l	(A0,D0.w), A0
	MOVE.w	$FFFFB28E.w, D4
	MOVE.w	$FFFFB290.w, D5
	BSR.w	loc_00002D22
	MOVE.w	$FFFFB28A.w, D2
	ADDQ.w	#1, D2
	ANDI.w	#1, D2
	MOVE.w	D2, $FFFFB28A.w
	BTST.b	#1, $FFFFF003.w
	BNE.b	loc_00002D20
	LEA	loc_0002225A, A0
	MOVE.w	$FFFFB28E.w, D4
	ADD.w	$FFFFB296.w, D4
	MOVE.w	$FFFFB290.w, D5
	ADD.w	$FFFFB296.w, D5
	BSR.w	loc_00002D22
loc_00002D20:
	RTS
loc_00002D22:
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
	CLR.w	D7
	MOVE.b	(A0)+, D7
loc_00002D32:
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	D5, D0
	MOVE.w	D0, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	D6, (A1)+
	MOVE.b	(A0)+, (A1)
	MOVE.b	(A0)+, $1(A1)
	ADDI.w	#$01C0, (A1)+
	CLR.w	D0
	MOVE.b	(A0)+, D0
	ADD.w	D4, D0
	MOVE.w	D0, (A1)+
	ADDQ.b	#1, D6
	SUBQ.w	#1, D7
	BNE.b	loc_00002D32
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
	RTS
loc_00002D64:
	MOVEQ	#7, D7
loc_00002D66:
	ADD.l	D0, D0
	ROXL.l	#1, D1
	ADD.l	D0, D0
	ROXL.l	#1, D1
	ADD.l	D0, D0
	ROXL.l	#1, D1
	ADD.l	D0, D0
	ROXL.l	#1, D1
	ANDI.w	#$000F, D1
	BNE.b	loc_00002D96
	ADDQ.w	#8, D4
	SUBQ.w	#1, D7
	BNE.b	loc_00002D66
loc_00002D82:
	ADD.l	D0, D0
	ROXL.l	#1, D1
	ADD.l	D0, D0
	ROXL.l	#1, D1
	ADD.l	D0, D0
	ROXL.l	#1, D1
	ADD.l	D0, D0
	ROXL.l	#1, D1
	ANDI.w	#$000F, D1
loc_00002D96:
	BSR.w	loc_00002DA0
	DBF	D7, loc_00002D82
	RTS
loc_00002DA0:
	MOVE.l	D0, -(A7)
	MOVE.w	D1, D0
	BSR.w	loc_00002DC4
	MOVE.l	(A7)+, D0
	RTS
loc_00002DAC:
	MOVE.w	D0, -(A7)
	LSR.b	#4, D0
	ANDI.w	#$000F, D0
	BSR.w	loc_00002DC4
	MOVE.w	(A7)+, D0
	ANDI.w	#$000F, D0
	BSR.w	loc_00002DC4
	RTS
loc_00002DC4:
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
	MOVE.w	D5, (A1)+
	CLR.b	(A1)+
	MOVE.b	D6, (A1)+
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADDI.w	#$E623, D0
	MOVE.w	D0, (A1)+
	MOVE.w	D4, (A1)+
	ADDQ.b	#1, D6
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
	ADDQ.w	#8, D4
	RTS
loc_00002DFA:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.l	#$40000000, loc_00C00004
	LEA	loc_0002A874, A0
	BSR.w	loc_00008108
	LEA	loc_00003154, A1
	LEA	$FFFFFB00.w, A2
	LEA	$FFFFB5CC, A3
	MOVEQ	#$0000000F, D0
loc_00002E24:
	MOVE.w	(A2)+, (A3)+
	DBF	D0, loc_00002E24
	LEA	$FFFFFB00.w, A2
	MOVEQ	#$0000000F, D0
loc_00002E30:
	MOVE.w	(A1)+, (A2)+
	DBF	D0, loc_00002E30
	LEA	$FFFFB2A2.w, A0
	MOVE.l	(A0), D0
	CMP.l	$FFFFFFD4.w, D0
	BLT.b	loc_00002E46
	MOVE.l	D0, $FFFFFFD4.w
loc_00002E46:
	BSR.w	loc_00002EAA
	BSR.w	loc_00002EFE
	BSR.w	loc_00002F12
	BSR.w	loc_00002FF4
	BSR.w	loc_00003018
	MOVEQ	#$00000077, D0
	MOVE.l	#0, $FFFFF61C.w
	MOVE.l	#0, $FFFFF620.w
loc_00002E6C:
	ANDI	#$FAFF, SR
	BSR.w	loc_00007D64
	ORI	#$2700, SR
	BTST.b	#7, $FFFFF604.w
	BNE.b	loc_00002E84
	DBF	D0, loc_00002E6C
loc_00002E84:
	LEA	$FFFFB5CC, A1
	LEA	$FFFFFB00.w, A2
	MOVEQ	#$0000000F, D0
loc_00002E90:
	MOVE.w	(A1)+, (A2)+
	DBF	D0, loc_00002E90
	BSR.w	loc_000030AA
	BSR.w	loc_00007D64
	MOVE.w	#0, $FFFFF602.w
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00002EAA:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVEQ	#0, D0
	MOVEQ	#0, D1
	MOVEQ	#0, D4
	MOVEQ	#0, D5
	MOVEQ	#$0000001B, D3
loc_00002EB8:
	MOVE.l	D4, D0
	MOVE.l	D5, D1
	LSL.l	#7, D0
	LSL.l	#1, D1
	ADD.l	D1, D0
	ADDI.l	#$0000C000, D0
	MOVE.w	D0, D1
	ANDI.w	#$3FFF, D0
	ORI.w	#$4000, D0
	MOVE.w	D0, loc_00C00004
	ANDI.w	#$C000, D1
	ROL.w	#2, D1
	MOVE.w	D1, loc_00C00004
	MOVEQ	#$0000001F, D2
loc_00002EE6:
	MOVE.w	#$8020, loc_00C00000
	DBF	D2, loc_00002EE6
	ADDQ.l	#1, D4
	DBF	D3, loc_00002EB8
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00002EFE:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_00003114, A0
	BSR.w	loc_00000858
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00002F12:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_0000314A, A0
	BSR.w	loc_000030F0
	MOVE.l	$FFFFFFD4.w, D0
	BSR.w	loc_00002F60
	BSR.w	loc_000030F0
	MOVE.l	$FFFFB2A2.w, D0
	BSR.w	loc_00002F60
	BSR.w	loc_000030F0
	MOVE.w	$FFFFF624.w, D0
	BSR.w	loc_00002FA8
	BSR.w	loc_000030F0
	MOVEQ	#0, D0
	MOVE.b	$FFFFB29A.w, D0
	BSR.w	loc_00002FCC
	BSR.w	loc_000030F0
	MOVE.w	$FFFFB29E.w, D0
	BSR.w	loc_00002FCC
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00002F60:
	ANDI.l	#$0FFFFFFF, D0
	ROL.l	#4, D0
	MOVEQ	#6, D2
	MOVEQ	#0, D3
loc_00002F6C:
	ROL.l	#4, D0
	MOVEQ	#0, D1
	MOVE.b	D0, D1
	ANDI.b	#$0F, D1
	CMPI.w	#0, D2
	BEQ.b	loc_00002F88
	CMPI.b	#0, D1
	BNE.b	loc_00002F88
	CMPI.b	#0, D3
	BEQ.b	loc_00002F90
loc_00002F88:
	ORI.w	#$8030, D1
	MOVEQ	#1, D3
	BRA.b	loc_00002F94
loc_00002F90:
	MOVE.w	#$8020, D1
loc_00002F94:
	MOVE.w	D1, loc_00C00000
	DBF	D2, loc_00002F6C
	MOVE.w	#$8030, loc_00C00000
	RTS
loc_00002FA8:
	CMPI.w	#$000A, D0
	BLT.b	loc_00002FC0
	MOVE.w	#$8031, loc_00C00000
	MOVE.w	#$8030, loc_00C00000
	BRA.b	loc_00002FCA
loc_00002FC0:
	ORI.w	#$8030, D0
	MOVE.w	D0, loc_00C00000
loc_00002FCA:
	RTS
loc_00002FCC:
	MOVEQ	#3, D2
loc_00002FCE:
	ROL.w	#4, D0
	MOVEQ	#0, D1
	MOVE.b	D0, D1
	ANDI.b	#$0F, D1
	CMPI.w	#0, D2
	BEQ.b	loc_00002FE4
	CMPI.b	#0, D1
	BEQ.b	loc_00002FEE
loc_00002FE4:
	ORI.w	#$8030, D1
	MOVE.w	D1, loc_00C00000
loc_00002FEE:
	DBF	D2, loc_00002FCE
	RTS
loc_00002FF4:
	LEA	$FFFFE800.w, A0
loc_00002FF8:
	MOVE.l	(A0), D0
	MOVE.l	#0, (A0)+
	MOVE.l	#0, (A0)+
	ANDI.b	#$7F, D0
	CMPI.b	#0, D0
	BNE.b	loc_00002FF8
	RTS
loc_00003018:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.b	$FFFFB29F.w, D1
	MOVE.b	D1, D5
	CMPI.w	#5, D1
	BLT.b	loc_0000302C
	MOVEQ	#5, D1
	MOVE.b	D1, D5
loc_0000302C:
	LEA	$FFFFE800.w, A2
	LEA	loc_00003174, A0
	MOVEQ	#1, D2
loc_00003038:
	CMPI.w	#0, D1
	BEQ.b	loc_00003098
	LEA	loc_00022805, A1
	ADDA.l	#1, A1
	MOVEQ	#1, D3
loc_0000304C:
	MOVEQ	#0, D0
	MOVE.b	(A1)+, D0
	ADDI.w	#$0110, D0
	MOVE.w	D0, (A2)+
	MOVEQ	#0, D0
	MOVE.b	(A1)+, D0
	LSL.w	#8, D0
	OR.w	D2, D0
	MOVE.w	D0, (A2)+
	MOVEQ	#0, D0
	MOVE.b	(A1)+, D0
	LSL.w	#8, D0
	MOVE.b	(A1)+, D0
	ADDI.w	#$0680, D0
	ORI.w	#$8000, D0
	MOVE.w	D0, (A2)+
	MOVEQ	#0, D0
	MOVEQ	#0, D4
	MOVE.w	(A0), D0
	BTST.l	#0, D5
	BNE.b	loc_00003082
	ADDI.w	#$0014, D0
loc_00003082:
	MOVE.b	(A1)+, D4
	ADD.w	D4, D0
	MOVE.w	D0, (A2)+
	ADDQ.l	#1, D2
	DBF	D3, loc_0000304C
	ADDA.l	#2, A0
	SUBQ.w	#1, D1
	BRA.b	loc_00003038
loc_00003098:
	MOVE.l	A2, $FFFF8210
	MOVE.w	D2, $FFFF8214
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_000030AA:
	BSR.w	loc_00002FF4
	LEA	$FFFFE800.w, A0
	MOVE.w	#$0080, D1
	MOVEQ	#6, D4
	MOVEQ	#1, D5
	MOVE.l	#$00000F00, D6
loc_000030C0:
	MOVE.w	#$0080, D2
	MOVEQ	#7, D3
loc_000030C6:
	MOVE.w	D1, (A0)+
	ADD.w	D5, D6
	MOVE.w	D6, (A0)+
	MOVE.w	#$8780, (A0)+
	MOVE.w	D2, (A0)+
	ADDI.w	#$0020, D2
	DBF	D3, loc_000030C6
	ADDI.w	#$0020, D1
	DBF	D4, loc_000030C0
	MOVE.l	A0, $FFFF8210
	MOVE.w	D5, $FFFF8214
	RTS
loc_000030F0:
	MOVE.b	(A0)+, D0
	LSL.w	#8, D0
	MOVE.b	(A0)+, D0
	MOVE.w	D0, D1
	ANDI.w	#$3FFF, D0
	ORI.w	#$4000, D0
	MOVE.w	D0, loc_00C00004
	ANDI.w	#$C000, D1
	ROL.w	#2, D1
	MOVE.w	D1, loc_00C00004
	RTS
loc_00003114:
loc_0000314A:
loc_00003154:
loc_00003174:

loc_0000317E: ; @ Clear array of enemies (flying)
	LEA	$FFFFB6F0.w, A0
	BRA.w	loc_00003192
loc_00003186: ; @ Clear array of enemies (ground)
	LEA	$FFFFBCF0.w, A0
	BRA.w	loc_00003192
loc_0000318E: ; @ Clear array of enemies (craters)
	LEA	$FFFFC2F0.w, A0
loc_00003192: ; $1F entries of $30 size
	MOVEQ	#$0000001F, D7
	MOVEQ	#$00000030, D6
loc_00003196: ; Loop
	CLR.b	(A0)
	ADDA.w	D6, A0
	DBF	D7, loc_00003196
	RTS

loc_000031A0:
	LEA	$FFFFBCF0.w, A0
	BSR.w	loc_000031AC
	LEA	$FFFFC2F0.w, A0
loc_000031AC:
	MOVEQ	#$0000001F, D7
loc_000031AE:
	CMPI.b	#$31, (A0)
	BEQ.b	loc_000031DA
	CMPI.b	#$1B, (A0)
	BEQ.b	loc_000031DA
	CMPI.b	#$17, (A0)
	BEQ.b	loc_000031DA
	CMPI.b	#$12, (A0)
	BEQ.b	loc_000031DA
	CMPI.b	#$11, (A0)
	BEQ.b	loc_000031DA
	CMPI.b	#$0E, (A0)
	BEQ.b	loc_000031DA
	CMPI.b	#$30, (A0)
	BEQ.b	loc_000031DA
	CLR.b	(A0)
loc_000031DA:
	ADDA.w	#$0030, A0
	DBF	D7, loc_000031AE
	RTS

loc_000031E4: ; @ Insert carrier or powerup
	LEA	$FFFFB6F0.w, A2
	MOVEQ	#$0000001F, D7
	MOVEQ	#$00000030, D6
loc_000031EC: ; Look for free slot
	TST.b	(A2)
	BEQ.w	loc_0000324C
	ADDA.w	D6, A2
	DBF	D7, loc_000031EC
	RTS
loc_000031FA: ; @ Insert flying, iterate array backwards
	LEA	$FFFFBCC0.w, A2
	MOVEQ	#$0000001F, D7
	MOVEQ	#$00000030, D6
loc_00003202:
	TST.b	(A2)
	BEQ.w	loc_0000324C
	SUBA.w	D6, A2
	DBF	D7, loc_00003202
	RTS
loc_00003210: ; @ Insert ground enemy
	LEA	$FFFFBCF0.w, A2
	MOVEQ	#$0000001F, D7
	MOVEQ	#$00000030, D6
loc_00003218:
	TST.b	(A2)
	BEQ.b	loc_0000324C
	ADDA.w	D6, A2
	DBF	D7, loc_00003218
	RTS
loc_00003224: ; @ Insert crater
	LEA	$FFFFC8C0.w, A2
	MOVEQ	#$0000001F, D7
	MOVEQ	#$00000030, D6
loc_0000322C:
	TST.b	(A2)
	BEQ.b	loc_0000324C
	SUBA.w	D6, A2
	DBF	D7, loc_0000322C
	LEA	$FFFFC8C0.w, A2
	MOVEQ	#$0000001F, D7
	MOVEQ	#$00000030, D6
loc_0000323E:
	CMPI.b	#$19, (A2)
	BEQ.b	loc_0000324C
	SUBA.w	D6, A2
	DBF	D7, loc_0000323E
	NOP
loc_0000324C:
	; @ Object construction
	; Inputs:
	;	A2=Self array address
	;	A3=$22956 table related entry
	;
	MOVE.w	$8(A3), D1 ; D1=attach
	BEQ.b	loc_00003280 ; Branch if nothing attached
	BSR.w	loc_00003282 ; Instance attachment
	BSET.b	#6, $1(A2) ; If attachment exists set those flags
	BSET.b	#7, $1(A2)
	MOVEA.l	A2, A4
loc_00003264:
	; Insert the attached object if there is room
	TST.b	(A2)
	BEQ.b	loc_00003272
	ADDA.w	#$0030, A2
	DBF	D7, loc_00003264
	RTS
loc_00003272:
	; Attached and base fill their respective attach pointers
	MOVE.l	A2, $10(A4)
	BSR.w	loc_00003280 ; Instance self
	MOVE.l	A4, $10(A2)
	RTS
loc_00003280:
	MOVE.w	(A3), D1 ; D1=id
loc_00003282:
	MOVE.b	D1, (A2)
	MOVE.b	D3, $2(A2)
	MOVE.w	$6(A3), D1
	ANDI.b	#$F0, D1
	MOVE.b	D1, $1(A2)
	CLR.w	$4(A2)
	LEA	$FFFFB6EE.w, A6 ; Counter for ?
	ADDI.b	#$21, (A6) ; Add 33
	ANDI.b	#$7F, (A6) ; Cap to 127
	MOVE.b	(A6), $3(A2)
	MOVE.w	$2(A3), D1 ; Hit points from spawn data
	LSL.w	#5, D1 ; D1*=32
	LEA	loc_00022C86, A6 ; A6=Array of hit point values
	MOVE.b	$17(A6,D1.w), D2 ; D2=A6+D1.w+23
	MOVE.b	D2, $1B(A2) ; (A2+$1B)=D2
	CLR.w	D2
	MOVE.b	$FFFFB2B8, D2 ; D2=Player power
	ADD.w	D2, D1 ; D1+=D2*2 (align to word)
	ADD.w	D2, D1
	MOVE.w	(A6,D1.w), D1 ; Read hit point from table at offset 22C86+player_power*2+D1 and substract 1
	SUBQ.w	#1, D1
	MOVE.w	D1, $E(A2) ; Hit points=D1
	MOVE.w	D1, $16(A2) ; Copy to max hit points. Used as ref for sparks and flashing
	MOVE.w	D4, $6(A2) ; x
	MOVE.w	D5, $A(A2) ; y
	CLR.w	$24(A2) ; Reset sequence timer
	MOVE.w	D0, $26(A2) ; Sequence
	MOVE.w	$4(A3), D1 ; Grounded flag
	MOVE.b	D1, $14(A2)
	CLR.b	$15(A2)
	CLR.b	$18(A2)
	CLR.l	$10(A2)
	CLR.w	$2C(A2)
	CLR.l	$1C(A2)
	RTS

loc_00003304: ; @ Process flying enemies
	LEA	$FFFFB6F0.w, A2
	BRA.b	loc_00003314
loc_0000330A: ; @ Process craters
	LEA	$FFFFC2F0.w, A2
	BRA.b	loc_00003314
loc_00003310: ; @ Process ground enemies
	LEA	$FFFFBCF0.w, A2
loc_00003314: ; @ Enemies subroutine. Loops through A2 array
	MOVEQ	#$0000001F, D7 ; Loop count (31)
loc_00003316: ; Loop start
	TST.b	(A2) ; Check first byte (id)
	BEQ.w	loc_000033BE ; Skip if 0
	TST.w	$FFFFB6EC.w ; Check enemy process flag
	BNE.b	loc_00003340 ; Skip if not zero
	MOVEM.l	A2/D7, -(A7) ; Save A2 and loop counter D7
	CLR.w	D0
	MOVE.b	(A2), D0 ; D0=id
	BSR.w	loc_00003FF0
	MOVEM.l	(A7)+, D7/A2 ; Restore A2 and D7
	TST.b	(A2) ;
	BEQ.w	loc_000033BE ; Skip if A2==0
	ADDQ.w	#1, $4(A2) ; Attack Helicopters AI related
	BSR.w	loc_000034D4
loc_00003340: ; Disable if outside screen
	MOVE.w	$6(A2), D0 ; D0=x
	MOVE.w	$A(A2), D1 ; D1=y
	CMPI.w	#$0040, D0 ; Branch to 3360 if x<64 or x>=576
	BMI.b	loc_00003360
	CMPI.w	#$0240, D0
	BPL.b	loc_00003360
	CMPI.w	#$FF80, D1 ; Branch to 336E if y>-128 or y<=480
	BCC.b	loc_0000336E
	CMPI.w	#$01E0, D1
	BCS.b	loc_0000336E
loc_00003360:
	CLR.b	(A2) ; Delete
	MOVE.l	$10(A2), D0
	BEQ.b	loc_0000336C
	MOVEA.l	D0, A3
	CLR.b	(A3) ; A3 is ?
loc_0000336C:
	BRA.b	loc_000033BE ; Continue loop
loc_0000336E:
	CMPI.b	#$F0, (A2)
	BEQ.b	loc_000033BE
	MOVE.w	D1, -(A7)
	CLR.w	D0
	MOVE.b	(A2), D0
	ADD.b	D0, D0
	ADD.b	D0, D0
	LEA	loc_0002D95E, A0
	MOVEA.l	(A0,D0.w), A0
	CLR.w	D0
	MOVE.b	$2(A2), D0
	LEA	loc_000065F8, A1
	CLR.w	D1
	MOVE.b	(A1,D0.w), D1
	ADD.w	D1, D1
	ADD.w	D1, D1
	ADD.w	D1, D1
	BTST.b	#1, $FFFFF003.w
	BEQ.b	loc_000033AA
	ADDQ.w	#4, D1
loc_000033AA:
	MOVEA.l	(A0,D1.w), A0
	MOVE.w	(A7)+, D1
	BSR.w	loc_000033C8
	TST.b	$15(A2)
	BEQ.b	loc_000033BE
	SUBQ.b	#1, $15(A2)
loc_000033BE:
	ADDA.w	#$0030, A2 ; Move on to the next object
	DBF	D7, loc_00003316 ; Decrement D7 and loop if D7>0
	RTS
loc_000033C8:
	MOVE.l	D7, -(A7)
	LEA	$FFFFB5EC.w, A4
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
loc_000033DA:
	CLR.w	D0
	MOVE.b	(A0)+, D0
	CMPI.b	#$FF, D0
	BEQ.w	loc_0000349E
	MOVE.b	(A0)+, D1
	TST.b	D0
	BEQ.b	loc_00003404
	BPL.b	loc_000033FC
	ANDI.w	#$007F, D0
	CMP.b	(A2,D0.w), D1
	BNE.w	loc_000034C6
	BRA.b	loc_00003404
loc_000033FC:
	CMP.b	(A4,D0.w), D1
	BNE.w	loc_000034C6
loc_00003404:
	MOVE.b	(A0)+, D7
loc_00003406:
	MOVE.b	$1(A0), D0
	MOVE.b	D0, $2(A1)
	ANDI.b	#$0F, $2(A1)
	ANDI.b	#$F0, D0
	BEQ.b	loc_0000342A
	BTST.l	#4, D0
	BNE.w	loc_000034AE
	BTST.l	#5, D0
	BNE.w	loc_000034BA
loc_0000342A:
	CLR.w	D0
	MOVE.b	(A0), D0
	ADD.w	$A(A2), D0
	CMPI.w	#$0060, D0
	BMI.b	loc_00003492
	CMPI.w	#$0160, D0
	BPL.b	loc_00003492
	MOVE.w	D0, (A1)
	CLR.w	D0
	MOVE.b	$4(A0), D0
	ADD.w	$6(A2), D0
	SUB.w	$FFFFF622.w, D0
	CMPI.w	#$0060, D0
	BMI.b	loc_00003492
	CMPI.w	#$0180, D0
	BPL.b	loc_00003492
	MOVE.w	D0, $6(A1)
	MOVE.b	D6, $3(A1)
	MOVE.b	$2(A0), $4(A1)
	MOVE.b	$3(A0), $5(A1)
	BTST.b	#5, $1(A2)
	BEQ.b	loc_0000347C
	ORI.w	#$8000, $4(A1)
loc_0000347C:
	TST.b	$15(A2)
	BEQ.b	loc_0000348E
	ANDI.w	#$9FFF, $4(A1)
	ORI.w	#$4000, $4(A1)
loc_0000348E:
	ADDQ.l	#8, A1
	ADDQ.b	#1, D6
loc_00003492:
	ADDQ.l	#5, A0
	SUBQ.b	#1, D7
	BNE.w	loc_00003406
	BRA.w	loc_000033DA
loc_0000349E:
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
	MOVE.l	(A7)+, D7
	RTS
loc_000034AE:
	BTST.b	#0, $1(A2)
	BNE.w	loc_0000342A
	BRA.b	loc_00003492
loc_000034BA:
	BTST.b	#1, $1(A2)
	BNE.w	loc_0000342A
	BRA.b	loc_00003492
loc_000034C6:
	MOVE.b	(A0)+, D7
	BEQ.b	loc_0000349E
loc_000034CA:
	ADDQ.l	#5, A0
	SUBQ.b	#1, D7
	BNE.b	loc_000034CA
	BRA.w	loc_000033DA
loc_000034D4:
	CLR.w	D4
	MOVE.b	$1B(A2), D4
	BEQ.b	loc_0000354E
	MOVE.w	$16(A2), D0
	LSR.w	#4, D0
	BNE.b	loc_000034E6
	MOVEQ	#1, D0
loc_000034E6:
	CLR.l	D1
	MOVE.w	$E(A2), D1
	DIVU.w	D0, D1
	CMPI.w	#6, D1
	BCC.b	loc_0000350A
	TST.b	$18(A2)
	BNE.b	loc_00003506
	MOVE.b	#3, $15(A2)
	MOVE.b	#9, $18(A2)
loc_00003506:
	SUBQ.b	#1, $18(A2)
loc_0000350A:
	CMPI.w	#7, D1
	BCC.b	loc_0000354A
	MOVE.b	loc_00003550(PC,D1.w), D0
	CMP.b	$19(A2), D0
	BCC.b	loc_0000354A
	LEA	loc_00022856, A3
	LSL.w	#4, D4
	ADDA.w	D4, A3
	CLR.l	D0
	MOVE.b	$1A(A2), D0
	DIVU.w	#5, D0
	SWAP	D0
	ADD.w	D0, D0
	ADDA.w	D0, A3
	CLR.w	D0
	MOVE.b	(A3)+, D0
	CLR.w	D1
	MOVE.b	(A3), D1
	MOVEQ	#9, D2
	BSR.w	loc_0000704A
	CLR.b	$19(A2)
	ADDQ.b	#1, $1A(A2)
loc_0000354A:
	ADDQ.b	#1, $19(A2)
loc_0000354E:
	RTS
loc_00003550:
loc_0000355C:
	; @ Enemy scene spawning
	; Function called every frame
	;
	; Select scene array A0 according to loop we are in
	LEA	loc_00092800, A0 ; A0=Enemy scenes
	CMPI.w	#6, $FFFFF624.w ; Is it second loop? dest-6
	BCS.b	loc_0000356E ; Branch if lower than, <6 (we are in first loop)
	ADDA.w	#$00F4, A0	; Otherwise, add 244, A0=928F4
loc_0000356E:
	; scroll_counter is incremented every frame elsewhere
	MOVE.l	$FFFF8268, D0 ; D0=scroll_counter
	ADDI.l	#$000000D0, D0 ; D0+=208 Some kind of offset
	MOVE.b	D0, D1
	ANDI.b	#$0F, D1 ; D1=D0 & 15
	BNE.b	loc_000035E8 ; Return if Z=0 (D1 is not zero) which is 15/16 of times
	; Continue below every 16 frame
	LSR.l	#4, D0 ; D0/=16
	MOVE.l	D0, D1 ; D1=D0
	LSR.l	#6, D0 ; D0/=64
	ADD.w	D0, D0
	ADD.w	D0, D0 ; D0*=4
	MOVEA.l	(A0,D0.w), A1
	ADDA.l	#$00092800, A1 ; A1 points to scene definition
	; Different scene every 1024 frames
	ANDI.w	#$003F, D1
	; D1 counts from 0 to 63 for the duration of this scene
	; It's used to check what enemy in array to spawn
loc_0000359A: ; @ Read A1 entries
	CMPI.l	#$FFFFFFFF, (A1) ; Is it terminator?
	BEQ.b	loc_000035E8 ; If so, go return
	MOVE.b	(A1), D0 ; Read first byte, which is y
	LSR.b	#2, D0 ; D0/=2
	CMP.b	D1, D0 ;
	BNE.b	loc_000035E4 ; Skip if D1 hasn't reached this y yet
	MOVEM.l	A1/D1, -(A7) ; Push A1 and D1
	BSR.w	loc_000035EA
	CMPI.w	#$03E7, (A3) ; A3 points to the $22956 entry
	BEQ.b	loc_000035E0 ; Skip if A3[0]==999 (?) No entry has this value
	MOVE.w	$6(A3), D7
	ANDI.b	#$0F, D7 ; D7=A3[6] & $F
	BEQ.b	loc_000035DC ; If D7==0 it's ground object
	SUBQ.b	#1, D7
	BEQ.b	loc_000035D6 ; If D7==1 it's carrier
	SUBQ.b	#1, D7
	BEQ.b	loc_000035D0 ; If D7==2 it's crater
	BSR.w	loc_000031FA ; Instance in flyings array
	BRA.b	loc_000035E0 ; Continue loop
loc_000035D0:
	BSR.w	loc_00003224 ; Instance in craters array
	BRA.b	loc_000035E0
loc_000035D6:
	BSR.w	loc_000031E4 ; Instance in carrier array
	BRA.b	loc_000035E0
loc_000035DC:
	BSR.w	loc_00003210 ; Instance in ground array
loc_000035E0:
	MOVEM.l	(A7)+, D1/A1 ; Pop A1 and D1
loc_000035E4:
	ADDQ.l	#4, A1 ; Move to next array value
	BRA.b	loc_0000359A ; Loop
loc_000035E8:
	RTS
loc_000035EA:
; @ Build enemy
; Input:
; 	A1=$92800 entry
;		0(A1).b=y
;		1(A1).b=$22956 idx
;		2(A1).w=param / sequence
; Output:
;	A3=$22956 entry
;	D0=sequence
;	D3=angle
;	D4=x
;	D5=y
;
	MOVE.b	$1(A1), D3 ; D3=A1[1] A1=929E8
	ANDI.w	#$003F, D3 ; D3 is in range (0,63)
	LSL.w	#4, D3 ; D3*=16 (range is 16,1008 | 0)
	LEA	loc_00022956, A3
	ADDA.w	D3, A3
	MOVEA.l	$C(A3), A2 ; A2=22956+A1[1]*16 +12 (last long of item)
	JMP	(A2) ; @ Spawns an enemy
loc_00003602: ; @ 4 Combat helicopter
	MOVE.w	$2(A1), D4 ; D4=x
	LSL.w	#5, D4 ; D4*=32
	ADDI.w	#$0080, D4 ; x+=128
	ADD.w	$FFFFF622.w, D4 ; x+=scroll_offset_x
	BSR.w	loc_00007D88_rand ; D0=rand
	ANDI.w	#$003F, D0 ; D0 is y offset (0,63)
	MOVE.w	D0, D5
	ADDI.w	#$0010, D5 ; D5+=16
	MOVEQ	#$00000010, D3; Affects trajectory x offset to player
	RTS
loc_00003622: ; @ 1
	BSR.w	loc_00007D88_rand
	MOVE.w	D0, D4
	ANDI.w	#$00F0, D4
	ADDI.w	#$00C0, D4
	BSR.w	loc_00007D88_rand
	ANDI.w	#$003F, D0
	MOVE.w	D0, D5
	ADDI.w	#$0010, D5
	MOVEQ	#$00000010, D3
	RTS
loc_00003642: ; @ 3
	MOVE.w	$2(A1), D5
	BTST.l	#2, D5
	BNE.b	loc_00003652
	MOVE.w	#$0210, D4
	BRA.b	loc_00003656
loc_00003652:
	MOVE.w	#$0040, D4
loc_00003656:
	MOVE.w	$2(A1), D5
	ANDI.w	#3, D5
	MULU.w	#$0022, D5
	ADDI.w	#$005E, D5
	MOVEQ	#$00000010, D3
	RTS
loc_0000366A: ; @ 2
	; Position x opposite to player.
	; D4=(player.x<240)?328:136
	CMPI.w	#$00F0, $FFFFB28E ; Player.x
	BCC.b	loc_0000367A
	MOVE.w	#$0148, D4
	BRA.b	loc_0000367E
loc_0000367A:
	MOVE.w	#$0088, D4
loc_0000367E:
	ADD.w	$FFFFF622.w, D4
	BSR.w	loc_00007D88_rand
	ANDI.w	#$003F, D0
	MOVE.w	D0, D5
	ADDI.w	#$0010, D5
	MOVEQ	#$00000010, D3
	RTS
loc_00003694:
	CLR.l	D3
	BRA.b	loc_0000369A
loc_00003698:
	MOVEQ	#$00000010, D3
loc_0000369A:
	CLR.w	D4
	MOVE.b	$2(A1), D4
	ADDI.b	#$40, D4
	ADD.w	D4, D4
	ADDI.w	#$0038, D4
	MOVEQ	#0, D5
	RTS
loc_000036BE:
	CMPI.b	#2, $3(A1)
	BEQ.b	loc_000036DE
	CMPI.b	#3, $3(A1)
	BEQ.b	loc_000036DC
	CMPI.b	#4, $3(A1)
	BEQ.b	loc_000036DE
	LEA	loc_00022C26, A3
loc_000036DC:
	BRA.b	loc_00003698
loc_000036DE:
	LEA	loc_00022C56, A3
	BRA.b	loc_00003698
loc_000036E6:
	CMPI.b	#0, $3(A1)	;Predicted (Offset array entry)
	BEQ.b	loc_000036DC
	LEA	loc_00022C16, A3
	BRA.b	loc_00003698
loc_000036F6: ; @ 7
	BSR.w	loc_0000370E	;Predicted (Offset array entry)
	CMPI.b	#4, D3
	BEQ.b	loc_0000370C
	CMPI.b	#$0C, D3
	BEQ.b	loc_0000370C
	LEA	loc_00022BC6, A3
loc_0000370C:
	RTS
loc_0000370E:
	; 0 Get sequence data for trajectory user
	; Output:
	;	D0=sequence
	;	D3=
	;	D4,D5=starting position
	MOVE.w	$2(A1), D0 ; D0=Sequence...
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_00096800, A2 ; Trajectories
	MOVE.l	(A2,D0.w), D0
	CLR.w	D4
	MOVE.b	(A2,D0.w), D4
	ADDI.b	#$40, D4
	ADD.w	D4, D4
	ADDI.w	#$0038, D4
	CLR.w	D1
	MOVE.b	$2(A2,D0.w), D1
	ADDI.b	#$40, D1
	ADD.w	D1, D1
	MOVE.w	#$01E0, D5
	SUB.w	D1, D5
	MOVE.b	$5(A2,D0.w), D3
	LSR.b	#4, D3
	ADD.b	D3, D3
	ADDQ.w	#6, D0
	RTS
loc_0000388A:
	LEA	$FFFFBCF0.w, A2
	MOVEQ	#$0000001F, D7
loc_00003890:
	CMPI.b	#$35, (A2)
	BNE.b	loc_000038A2
	CMPI.w	#$0078, $A(A2)
	BCS.b	loc_000038AA
	CLR.b	(A2)
	BRA.b	loc_000038DE
loc_000038A2:
	CMPI.b	#$0E, (A2)
	BNE.w	loc_000038DE
loc_000038AA:
	MOVE.w	$A(A2), D0
	CMPI.w	#$0078, D0
	BCC.w	loc_000038DE
	CMPI.w	#$0070, D0
	BCC.w	loc_000038E8
	CMPI.w	#$0068, D0
	BCC.w	loc_00003916
	CMPI.w	#$0060, D0
	BCC.w	loc_00003944
	CMPI.w	#$0058, D0
	BCC.w	loc_00003974
	CMPI.w	#$0050, D0
	BCC.w	loc_000039A4
loc_000038DE:
	ADDA.w	#$0030, A2
	DBF	D7, loc_00003890
	RTS
loc_000038E8:
	MOVE.w	$6(A2), D0
	SUBI.w	#$0080, D0
	ANDI.w	#$FFF0, D0
	LSR.w	#2, D0
	MOVE.w	#0, (A4,D0.w)
	MOVE.w	#1, $2(A4,D0.w)
	MOVE.w	#2, $4(A4,D0.w)
	MOVE.w	#3, $6(A4,D0.w)
	MOVE.w	#4, $8(A4,D0.w)
	BRA.b	loc_000038DE
loc_00003916:
	MOVE.w	$6(A2), D0
	SUBI.w	#$0080, D0
	ANDI.w	#$FFF0, D0
	LSR.w	#2, D0
	MOVE.w	#6, (A4,D0.w)
	MOVE.w	#7, $2(A4,D0.w)
	MOVE.w	#8, $4(A4,D0.w)
	MOVE.w	#9, $6(A4,D0.w)
	MOVE.w	#$000A, $8(A4,D0.w)
	BRA.b	loc_000038DE
loc_00003944:
	MOVE.w	$6(A2), D0
	SUBI.w	#$0080, D0
	ANDI.w	#$FFF0, D0
	LSR.w	#2, D0
	MOVE.w	#$000B, (A4,D0.w)
	MOVE.w	#$000C, $2(A4,D0.w)
	MOVE.w	#$000D, $4(A4,D0.w)
	MOVE.w	#$000E, $6(A4,D0.w)
	MOVE.w	#$000A, $8(A4,D0.w)
	BRA.w	loc_000038DE
loc_00003974:
	MOVE.w	$6(A2), D0
	SUBI.w	#$0080, D0
	ANDI.w	#$FFF0, D0
	LSR.w	#2, D0
	MOVE.w	#$000F, (A4,D0.w)
	MOVE.w	#$0010, $2(A4,D0.w)
	MOVE.w	#$0011, $4(A4,D0.w)
	MOVE.w	#$0012, $6(A4,D0.w)
	MOVE.w	#$000A, $8(A4,D0.w)
	BRA.w	loc_000038DE
loc_000039A4:
	MOVE.w	$6(A2), D0
	SUBI.w	#$0080, D0
	ANDI.w	#$FFF0, D0
	LSR.w	#2, D0
	MOVE.w	#$0013, (A4,D0.w)
	MOVE.w	#$0014, $2(A4,D0.w)
	MOVE.w	#$0014, $4(A4,D0.w)
	MOVE.w	#$0014, $6(A4,D0.w)
	MOVE.w	#$0015, $8(A4,D0.w)
	BRA.w	loc_000038DE
loc_000039D4:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVEQ	#$00000012, D0
	BSR.w	loc_00008428
	MOVEQ	#$0000000C, D0
	BSR.w	loc_00008EA2
	MOVEQ	#1, D1
	BSR.w	loc_00000B08
	BSR.w	loc_00002AFC
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_000039F4:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	CMPI.b	#$36, (A2)
	BEQ.w	loc_00003ADE
loc_00003A00:
	CMPI.b	#$31, (A2)
	BNE.b	loc_00003A12
	TST.w	$16(A2)
	BNE.b	loc_00003A12
	MOVE.w	#$01B8, D2
	BRA.b	loc_00003A1C
loc_00003A12:
	CLR.w	D2
	MOVE.b	(A2), D2
	ADD.w	D2, D2
	ADD.w	D2, D2
	ADD.w	D2, D2
loc_00003A1C:
	LEA	loc_0002329E, A0
	MOVE.b	$7(A0,D2.w), D0
	MOVE.b	$6(A0,D2.w), D1
	BSR.w	loc_0000234C
	MOVE.b	$5(A0,D2.w), D0
	ADD.b	D0, $FFFF823C
	CMPI.b	#$12, (A2)
	BEQ.b	loc_00003A6A
	CMPI.b	#$31, (A2)
	BEQ.b	loc_00003A88
	BSR.b	loc_00003AA6
	CMPI.b	#$0E, (A2)
	BNE.b	loc_00003A58
	MOVE.b	#$35, (A2)
	MOVE.b	#$C0, $1(A2)
	BRA.b	loc_00003A64
loc_00003A58:
	CLR.b	(A2)
	MOVE.l	$10(A2), D0
	BEQ.b	loc_00003A64
	MOVEA.l	D0, A3
	CLR.b	(A3)
loc_00003A64:
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00003A6A:
	CLR.b	$2(A2)
	SUBQ.w	#6, $A(A2)
loc_00003A72:
	BSR.w	loc_00003AA6
	MOVE.b	#$18, (A2)
	BCLR.b	#6, $1(A2)
	BSET.b	#7, $1(A2)
	BRA.b	loc_00003A64
loc_00003A88:
	TST.b	$FFFFB2A1
	BNE.b	loc_00003AA0
	BSR.w	loc_00003FA4
	TST.l	D0
	BMI.b	loc_00003AA0
	MOVE.b	#2, $2(A2)
	BRA.b	loc_00003A72
loc_00003AA0:
	CLR.b	$2(A2)
	BRA.b	loc_00003A72
loc_00003AA6:
	LEA	loc_0002329E, A3
	CLR.w	D0
	MOVE.b	(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADDA.w	D0, A3
	MOVE.w	$6(A2), D0
	MOVE.b	(A3), D3
	EXT.w	D3
	ADD.w	D3, D0
	MOVE.w	$A(A2), D1
	MOVE.b	$1(A3), D3
	EXT.w	D3
	ADD.w	D3, D1
	MOVE.b	$4(A3), D2
	ANDI.b	#$7F, D2
	MOVE.b	$1(A2), D3
	BRA.w	loc_00007080
loc_00003ADE:
	MOVE.b	#$C8, $FFFFC904
	BRA.w	loc_00003A00
loc_00003AEA:
	TST.w	$FFFFB292
	BNE.w	loc_00003D32
	LEA	$FFFFB6F0.w, A2
	BSR.w	loc_00003B00
	LEA	$FFFFBCF0.w, A2
loc_00003B00:
	MOVE.w	$FFFFB28E, D0
	ADD.w	$FFFFF622.w, D0
	MOVEQ	#$00000010, D7
	ADD.w	D7, D0
	MOVE.w	$FFFFB290, D1
	ADD.w	D7, D1
	LEA	loc_000230E6, A4
	MOVEQ	#$0000001F, D7
loc_00003B1E:
	CLR.w	D6
	MOVE.b	(A2), D6
	BEQ.b	loc_00003B72
	BTST.b	#6, $1(A2)
	BNE.b	loc_00003B72
	ADD.w	D6, D6
	ADD.w	D6, D6
	ADD.w	D6, D6
	MOVE.w	$6(A2), D4
	MOVE.w	D4, D5
	ADD.w	(A4,D6.w), D4
	CMP.w	D4, D0
	BCS.b	loc_00003B72
	ADD.w	$4(A4,D6.w), D5
	CMP.w	D5, D0
	BCC.b	loc_00003B72
	MOVE.w	$A(A2), D4
	MOVE.w	D4, D5
	ADD.w	$2(A4,D6.w), D4
	CMP.w	D4, D1
	BCS.b	loc_00003B72
	ADD.w	$6(A4,D6.w), D5
	CMP.w	D5, D1
	BCC.b	loc_00003B72
	CMPI.b	#$1D, (A2)
	BEQ.b	loc_00003BA2
	CMPI.b	#$18, (A2)
	BEQ.b	loc_00003B7C
	BSR.w	loc_000039F4
	BRA.w	loc_000039D4
loc_00003B72:
	ADDA.w	#$0030, A2
	DBF	D7, loc_00003B1E
	RTS
loc_00003B7C:
	CLR.b	(A2)
	TST.b	$2(A2)
	BNE.b	loc_00003B9C
	MOVE.b	$FFFFB299, D0
	MOVEQ	#1, D1
	ABCD	D1, D0
	MOVE.b	D0, $FFFFB299
	MOVEQ	#$0000000D, D0
	BSR.w	loc_00008428
	BRA.b	loc_00003B72
loc_00003B9C:
	BSR.w	loc_000023A8
	BRA.b	loc_00003B72
loc_00003BA2:
	CLR.b	(A2)
	MOVEQ	#$00000030, D0
	MOVEQ	#0, D1
	BSR.w	loc_0000234C
	MOVE.b	$2(A2), D4
	LSR.b	#1, D4
	CMPI.b	#0, D4
	BEQ.b	loc_00003BC6
	CMPI.b	#2, D4
	BEQ.b	loc_00003BDE
	CMPI.b	#4, D4
	BEQ.b	loc_00003BF0
	BRA.b	loc_00003B72
loc_00003BC6:
	CMPI.b	#$0A, $FFFFB2B8
	BCC.b	loc_00003BD6
	ADDQ.b	#1, $FFFFB2B8
loc_00003BD6:
	MOVEQ	#$0000000E, D0
	BSR.w	loc_00008428
	BRA.b	loc_00003B72
loc_00003BDE:
	MOVE.b	$FFFF8217, $FFFFB2B7
	MOVEQ	#$0000000E, D0
	BSR.w	loc_00008428
	BRA.b	loc_00003B72
loc_00003BF0:
	ADDQ.b	#1, $FFFFB2B6
	MOVEQ	#$0000000E, D0
	BSR.w	loc_00008428
	BRA.w	loc_00003B72
loc_00003C00:
	LEA	$FFFFB6F0.w, A2 ; A2=Flying enemies
	BSR.w	loc_00003C0C
	LEA	$FFFFBCF0.w, A2 ; A2=Ground enemies
loc_00003C0C:
	LEA	loc_00021608, A3 ; A3=
	LEA	loc_000230E6, A4
	MOVEQ	#$0000001F, D6 ; D6=Enemy array counter
loc_00003C1A:
	CLR.w	D4
	MOVE.b	(A2), D4
	BEQ.w	loc_00003CC6
	BTST.b	#7, $1(A2)
	BNE.w	loc_00003CC6
	ADD.w	D4, D4
	ADD.w	D4, D4
	ADD.w	D4, D4
	MOVE.w	$6(A2), D0
	SUB.w	$FFFFF622.w, D0
	MOVE.w	D0, D1
	ADD.w	(A4,D4.w), D0
	ADD.w	$4(A4,D4.w), D1
	MOVE.w	$A(A2), D2
	MOVE.w	D2, D3
	ADD.w	$2(A4,D4.w), D2
	ADD.w	$6(A4,D4.w), D3
	LEA	$FFFFB2BC, A1 ; A1=Player bullets array
	MOVEQ	#$0000001F, D7 ; D7=Player bullets array counter
loc_00003C5A:
	TST.b	(A1)
	BEQ.b	loc_00003CBE
	MOVE.w	$6(A1), D4
	ADDQ.w	#8, D4
	CMP.w	D4, D0
	BCC.b	loc_00003CBE
	CMP.w	D4, D1
	BCS.b	loc_00003CBE
	MOVE.w	$8(A1), D4
	ADDQ.w	#8, D4
	CMP.w	D4, D2
	BCC.b	loc_00003CBE
	CMP.w	D4, D3
	BCS.b	loc_00003CBE
	MOVEQ	#3, D0
	MOVEQ	#0, D1
	BSR.w	loc_0000234C
	CLR.w	D0
	MOVE.b	(A1), D0
	CLR.w	D1
	MOVE.b	(A3,D0.w), D1
	SUB.w	D1, $E(A2) ; Decrease enemy health
	BPL.b	loc_00003C98
	BSR.w	loc_000039F4
	BRA.b	loc_00003CBC
loc_00003C98:
	CMPI.b	#$31, (A2)
	BNE.b	loc_00003CB0
	MOVE.w	$6(A1), D0
	ADD.w	$FFFFF622.w, D0
	MOVE.w	$8(A1), D1
	MOVEQ	#7, D2
	BSR.w	loc_0000704A
loc_00003CB0:
	MOVE.b	#2, $15(A2)
	MOVEQ	#4, D1
	BSR.w	loc_00000B08
loc_00003CBC:
	CLR.b	(A1)
loc_00003CBE:
	ADDA.w	#$0018, A1
	DBF	D7, loc_00003C5A
loc_00003CC6:
	ADDA.w	#$0030, A2
	DBF	D6, loc_00003C1A
	RTS
loc_00003CD0:
	TST.w	$FFFFB292
	BNE.w	loc_00003D32
	MOVEQ	#$00000010, D6
	MOVE.w	$FFFFB28E, D0
	ADD.w	$FFFFF622.w, D0
	ADD.w	D6, D0
	MOVE.w	$FFFFB290, D1
	ADD.w	D6, D1
	LEA	$FFFFC93A, A2
	MOVEQ	#$00000018, D6
	MOVEQ	#$00000013, D7
loc_00003CFA:
	TST.b	(A2)
	BEQ.b	loc_00003D2C
	MOVE.w	$4(A2), D4
	MOVE.w	D4, D5
	SUBQ.w	#4, D4
	CMP.w	D4, D0
	BCS.b	loc_00003D2C
	ADDI.w	#$000C, D5
	CMP.w	D5, D0
	BCC.b	loc_00003D2C
	MOVE.w	$8(A2), D4
	MOVE.w	D4, D5
	SUBQ.w	#4, D4
	CMP.w	D4, D1
	BCS.b	loc_00003D2C
	ADDI.w	#$000C, D5
	CMP.w	D5, D1
	BCC.b	loc_00003D2C
	CLR.b	(A2)
	BRA.w	loc_000039D4
loc_00003D2C:
	ADDA.w	D6, A2
	DBF	D7, loc_00003CFA
loc_00003D32:
	RTS
loc_00003D34:
	MOVE.b	$FFFFB5C9, D0
	CMPI.b	#5, D0
	BEQ.w	loc_00003F50
	CMPI.b	#6, D0
	BEQ.w	loc_00003EFC
	CMPI.b	#9, D0
	BEQ.w	loc_00003D68
	CMPI.b	#7, D0
	BCC.w	loc_00003D5C
	RTS
loc_00003D5C:
	LEA	$FFFFB6F0.w, A2
	BSR.b	loc_00003D6C
	LEA	$FFFFBCF0.w, A2
	BSR.b	loc_00003D6C
loc_00003D68:
	BRA.w	loc_00003E5A
loc_00003D6C:
	MOVE.w	$FFFFB5BC, D0
	MOVE.w	D0, D2
	MOVE.w	$FFFFB5C0, D1
	MOVE.w	D1, D3
	MOVEM.w	D3/D2/D1/D0, -(A7)
	ADDI.w	#$0010, D0
	ADDI.w	#$00B0, D2
	ADDI.w	#$0038, D1
	ADDI.w	#$0088, D3
	BSR.b	loc_00003DEE
	MOVEM.w	(A7)+, D0/D1/D2/D3
	MOVEM.w	D3/D2/D1/D0, -(A7)
	ADDI.w	#$0038, D0
	ADDI.w	#$0088, D2
	ADDI.w	#$0010, D1
	ADDI.w	#$00B0, D3
	BSR.b	loc_00003DEE
	MOVEM.w	(A7)+, D0/D1/D2/D3
	MOVEM.w	D3/D2/D1/D0, -(A7)
	ADDI.w	#$0020, D0
	ADDI.w	#$00A0, D2
	ADDI.w	#$0030, D1
	ADDI.w	#$0090, D3
	BSR.b	loc_00003DEE
	MOVEM.w	(A7)+, D0/D1/D2/D3
	ADDI.w	#$0030, D0
	ADDI.w	#$0090, D2
	ADDI.w	#$0020, D1
	ADDI.w	#$00A0, D3
	BSR.b	loc_00003DEE
	MOVEQ	#$0000001F, D7
loc_00003DDE:
	TST.b	(A2)
	BPL.b	loc_00003DE4
	NEG.b	(A2)
loc_00003DE4:
	ADDA.w	#$0030, A2
	DBF	D7, loc_00003DDE
	RTS
loc_00003DEE:
	MOVE.l	A2, -(A7)
	LEA	loc_000230E6, A4
	MOVEQ	#$0000001F, D7
loc_00003DF8:
	CLR.w	D6
	MOVE.b	(A2), D6
	BEQ.b	loc_00003E4E
	BMI.b	loc_00003E4E
	BTST.b	#7, $1(A2)
	BNE.b	loc_00003E4E
	ADD.w	D6, D6
	ADD.w	D6, D6
	ADD.w	D6, D6
	MOVE.w	$A(A2), D4
	MOVE.w	D4, D5
	ADD.w	$2(A4,D6.w), D4
	CMP.w	D4, D3
	BCS.b	loc_00003E4E
	ADD.w	$6(A4,D6.w), D5
	CMP.w	D5, D1
	BCC.b	loc_00003E4E
	MOVE.w	$6(A2), D4
	MOVE.w	D4, D5
	ADD.w	(A4,D6.w), D4
	CMP.w	D4, D2
	BCS.b	loc_00003E4E
	ADD.w	$4(A4,D6.w), D5
	CMP.w	D5, D0
	BCC.b	loc_00003E4E
	SUBQ.w	#1, $E(A2)
	BPL.b	loc_00003E46
	BSR.w	loc_000039F4
	BRA.b	loc_00003E4E
loc_00003E46:
	MOVE.b	#2, $15(A2)
	NEG.b	(A2)
loc_00003E4E:
	ADDA.w	#$0030, A2
	DBF	D7, loc_00003DF8
	MOVEA.l	(A7)+, A2
	RTS
loc_00003E5A:
	MOVE.w	$FFFFB5BC, D0
	MOVE.w	D0, D2
	MOVE.w	$FFFFB5C0, D1
	MOVE.w	D1, D3
	MOVEM.w	D3/D2/D1/D0, -(A7)
	ADDI.w	#$0010, D0
	ADDI.w	#$00B0, D2
	ADDI.w	#$0038, D1
	ADDI.w	#$0088, D3
	BSR.b	loc_00003EC8
	MOVEM.w	(A7)+, D0/D1/D2/D3
	MOVEM.w	D3/D2/D1/D0, -(A7)
	ADDI.w	#$0038, D0
	ADDI.w	#$0088, D2
	ADDI.w	#$0010, D1
	ADDI.w	#$00B0, D3
	BSR.b	loc_00003EC8
	MOVEM.w	(A7)+, D0/D1/D2/D3
	MOVEM.w	D3/D2/D1/D0, -(A7)
	ADDI.w	#$0020, D0
	ADDI.w	#$00A0, D2
	ADDI.w	#$0030, D1
	ADDI.w	#$0090, D3
	BSR.b	loc_00003EC8
	MOVEM.w	(A7)+, D0/D1/D2/D3
	ADDI.w	#$0030, D0
	ADDI.w	#$0090, D2
	ADDI.w	#$0020, D1
	ADDI.w	#$00A0, D3
loc_00003EC8:
	LEA	$FFFFC93A, A2
	MOVEQ	#$00000013, D7
loc_00003ED0:
	TST.b	(A2)
	BEQ.b	loc_00003EF2
	MOVE.w	$4(A2), D4
	ADDQ.w	#4, D4
	CMP.w	D4, D0
	BCC.b	loc_00003EF2
	CMP.w	D4, D2
	BCS.b	loc_00003EF2
	MOVE.w	$8(A2), D4
	ADDQ.w	#4, D4
	CMP.w	D4, D1
	BCC.b	loc_00003EF2
	CMP.w	D4, D3
	BCS.b	loc_00003EF2
	CLR.b	(A2)
loc_00003EF2:
	ADDA.w	#$0018, A2
	DBF	D7, loc_00003ED0
	RTS
loc_00003EFC:
	MOVE.w	$FFFFB5BC, D0
	MOVE.w	D0, D2
	MOVE.w	$FFFFB5C0, D1
	MOVE.w	D1, D3
	ADDI.w	#$0020, D0
	ADDI.w	#$00A0, D2
	ADDI.w	#$0020, D1
	ADDI.w	#$00A0, D3
	LEA	$FFFFC93A, A2
	MOVEQ	#$00000013, D7
loc_00003F24:
	TST.b	(A2)
	BEQ.b	loc_00003F46
	MOVE.w	$4(A2), D4
	ADDQ.w	#4, D4
	CMP.w	D4, D0
	BCC.b	loc_00003F46
	CMP.w	D4, D2
	BCS.b	loc_00003F46
	MOVE.w	$8(A2), D4
	ADDQ.w	#4, D4
	CMP.w	D4, D1
	BCC.b	loc_00003F46
	CMP.w	D4, D3
	BCS.b	loc_00003F46
	CLR.b	(A2)
loc_00003F46:
	ADDA.w	#$0018, A2
	DBF	D7, loc_00003F24
	RTS
loc_00003F50:
	MOVE.w	$FFFFB5BC, D0
	MOVE.w	D0, D2
	MOVE.w	$FFFFB5C0, D1
	MOVE.w	D1, D3
	ADDI.w	#$0040, D0
	ADDI.w	#$0078, D2
	ADDI.w	#$0048, D1
	ADDI.w	#$0078, D3
	LEA	$FFFFC93A, A2
	MOVEQ	#$00000013, D7
loc_00003F78:
	TST.b	(A2)
	BEQ.b	loc_00003F9A
	MOVE.w	$4(A2), D4
	ADDQ.w	#4, D4
	CMP.w	D4, D0
	BCC.b	loc_00003F9A
	CMP.w	D4, D2
	BCS.b	loc_00003F9A
	MOVE.w	$8(A2), D4
	ADDQ.w	#4, D4
	CMP.w	D4, D1
	BCC.b	loc_00003F9A
	CMP.w	D4, D3
	BCS.b	loc_00003F9A
	CLR.b	(A2)
loc_00003F9A:
	ADDA.w	#$0018, A2
	DBF	D7, loc_00003F78
	RTS
loc_00003FA4:
	; @ Spawn 1-up from destructible environment
	MOVEM.l	A0/D3/D2/D1, -(A7)
	MOVEQ	#-1, D0
	MOVE.w	$FFFFF624.w, D1	; D1=Stage number
	ADD.w	D1, D1
	MOVE.w	loc_00003FDA(PC,D1.w), D2
	CMP.w	$FFFFCC9C, D2
	BCC.b	loc_00003FD4
	CMPI.w	#3, $FFFFB29C
	BCC.b	loc_00003FD4 ; Branch if B29C>=3
	ADDQ.w	#1, $FFFFB29C
	MOVEQ	#0, D0
	CLR.w	$FFFFCC9C
loc_00003FD4:
	MOVEM.l	(A7)+, D1/D2/D3/A0
	RTS
loc_00003FDA:
loc_00003FF0:; @ Enemy AI
	LSL.w	#2, D0 ; D0 is an id. D0*=4
	LEA	loc_00003FFE, A0
	MOVEA.l	(A0,D0.w), A0 ; A0=*(loc_00003FFE+D0.w)
	JMP	(A0)
loc_00003FFE:
; @ AI jump table here
; 00000000
; 000040DA
; 0000411E
; ..
loc_000040DA:
	; @ Helicopter 1
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $A(A2) ; y
	CMPI.w	#$0010, $4(A2) ; timer
	BCS.b	loc_000040F8
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
	BSR.w	loc_00005560
loc_000040F8:
	CLR.w	D0
	MOVE.b	$2(A2), D0 ; angle
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000064F8, A0
	MOVE.l	(A0,D0.w), D2
	ADD.l	D2, $6(A2) ; x
	MOVE.l	$4(A0,D0.w), D3
	ADD.l	D3, $A(A2)
	BRA.w	loc_000052E8
loc_0000411E:
	; @ Helicopter 2
	BSR.w	loc_000052E8	;Predicted (Offset array entry)
	TST.b	$24(A2)
	BEQ.b	loc_00004188
	TST.b	$25(A2)
	BNE.b	loc_000041A2
	CMPI.w	#4, $4(A2)
	BCS.b	loc_0000413E
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_0000413E:
	CLR.w	D0
	MOVE.b	$2(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000063F8, A0
	MOVE.l	(A0,D0.w), D2
	ADD.l	D2, $6(A2)
	MOVE.l	$28(A2), D0
	ADD.l	D0, $A(A2)
	TST.w	$26(A2)
	BEQ.b	loc_0000416C
	SUBQ.w	#1, $26(A2)
	BRA.b	loc_00004186
loc_0000416C:
	TST.l	$28(A2)
	BPL.b	loc_0000417E
	MOVEQ	#1, D0
	MOVE.b	D0, $25(A2)
	MOVE.w	D0, $26(A2)
	RTS
loc_0000417E:
	SUBI.l	#$00000E00, $28(A2)
loc_00004186:
	RTS
loc_00004188:
	MOVE.b	#1, $24(A2)
	CLR.b	$25(A2)
	MOVE.w	#$000F, $26(A2)
	MOVE.l	#$0003A000, $28(A2)
	RTS
loc_000041A2:
	CMPI.w	#$0014, $4(A2)
	BCS.b	loc_000041B2
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_000041B2:
	CLR.w	D0
	MOVE.b	$2(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000063F8, A0
	MOVE.l	(A0,D0.w), D2
	ASR.l	#1, D2
	MOVE.l	$4(A0,D0.w), D3
	ASR.l	#1, D3
	MOVE.w	$26(A2), D4
	MOVEQ	#$00000064, D5
	DIVS.w	D5, D2
	MULS.w	D4, D2
	DIVS.w	D5, D3
	MULS.w	D4, D3
	ADD.l	D2, $6(A2)
	ADD.l	D3, $A(A2)
	CMPI.w	#$0500, $26(A2)
	BCC.b	loc_000041F4
	ADDI.w	#$0010, $26(A2)
loc_000041F4:
	RTS
loc_000041FC:
	; @ Helicopter 3
	BSR.w	loc_000052E8	;Predicted (Offset array entry)
	BTST.b	#0, $24(A2)
	BEQ.b	loc_00004264
	BTST.b	#2, $24(A2)
	BNE.b	loc_0000421A
	BTST.b	#1, $24(A2)
	BNE.w	loc_00004280
loc_0000421A:
	CMPI.w	#4, $4(A2)
	BCS.b	loc_0000422A
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_0000422A:
	MOVE.l	$28(A2), D0
	ADD.l	D0, $A(A2)
	TST.b	$25(A2)
	BEQ.b	loc_00004248
	SUBQ.b	#1, $25(A2)
	MOVE.w	$26(A2), D0
	EXT.l	D0
	ADD.l	D0, $28(A2)
	RTS
loc_00004248:
	BSET.b	#1, $24(A2)
	CLR.w	$26(A2)
	MOVE.l	$A(A2), D0
	MOVE.l	D0, $28(A2)
	BSR.w	loc_0000557A
	MOVE.b	D1, $25(A2)
	RTS
loc_00004264:
	MOVE.b	#1, $24(A2)
	MOVE.b	#$3C, $25(A2)
	MOVE.l	#$00028000, $28(A2)
	MOVE.w	#0, $26(A2)
	RTS
loc_00004280:
	BSR.w	loc_000054DA
	MOVE.w	$26(A2), D0
	LSR.w	#2, D0
	BSR.w	loc_00006884
	MOVE.l	D1, D4
	LSL.l	#3, D1
	ADD.l	D4, D1
	TST.b	$25(A2)
	BPL.b	loc_000042A0
	SUB.l	D1, $6(A2)
	BRA.b	loc_000042A4
loc_000042A0:
	ADD.l	D1, $6(A2)
loc_000042A4:
	MOVE.w	$26(A2), D0
	LSR.w	#2, D0
	BSR.w	loc_00006878
	MULS.w	D4, D1
	DIVS.w	#$1000, D1
	EXT.l	D1
	ASL.l	#5, D1
	ADD.l	$28(A2), D1
	MOVE.l	D1, $A(A2)
	ADDQ.w	#8, $26(A2)
	CMPI.w	#$02D0, $26(A2)
	BCS.b	loc_000042E6
	BSET.b	#2, $24(A2)
	MOVE.b	#$64, $25(A2)
	MOVE.l	#$00020000, $28(A2)
	MOVE.w	#$FE0C, $26(A2)
loc_000042E6:
	RTS
loc_000042E8:
	; @ Helicopter 4
	BSR.w	loc_000052E8	;Predicted (Offset array entry)
	TST.b	$24(A2)
	BEQ.w	loc_00004386
	TST.b	$25(A2)
	BNE.w	loc_000043A6
	CMPI.w	#3, $4(A2)
	BCS.b	loc_0000430C
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_0000430C:
	CLR.w	D0
	MOVE.b	$2(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000063F8, A0
	MOVE.l	(A0,D0.w), D2
	ADD.l	D2, $6(A2)
	ADD.l	D2, $6(A2)
	MOVE.l	$28(A2), D0
	ADD.l	D0, $A(A2)
	TST.b	$26(A2)
	BEQ.b	loc_0000433E
	SUBQ.b	#1, $26(A2)
	BRA.b	loc_00004384
loc_0000433E:
	TST.l	$28(A2)
	BPL.b	loc_0000437C
	TST.b	$27(A2)
	BEQ.b	loc_00004350
	SUBQ.b	#1, $27(A2)
	BRA.b	loc_00004384
loc_00004350:
	MOVEQ	#1, D0
	MOVE.b	D0, $25(A2)
	MOVE.w	D0, $26(A2)
	BSR.w	loc_00007D88_rand
	ANDI.w	#$01FF, D0
	MOVE.w	D0, D3
	MOVEQ	#$00000010, D4
	BSR.w	loc_0000551E
	MOVE.b	D2, $28(A2)
	BSR.w	loc_0000557A
	MOVE.b	D1, $29(A2)
	CLR.b	$2A(A2)
	BRA.b	loc_00004384
loc_0000437C:
	SUBI.l	#$00000E00, $28(A2)
loc_00004384:
	RTS
loc_00004386:
	MOVE.b	#1, $24(A2)
	CLR.b	$25(A2)
	MOVE.b	#$0F, $26(A2)
	MOVE.b	#$3C, $27(A2)
	MOVE.l	#$0003A000, $28(A2)
	RTS
loc_000043A6:
	CMPI.w	#2, $4(A2)
	BCS.b	loc_000043D4
	CLR.w	$4(A2)
	MOVE.b	$2(A2), D5
	CMPI.b	#$10, $2A(A2)
	BCS.b	loc_000043C4
	CMP.b	$28(A2), D5
	BEQ.b	loc_000043D4
loc_000043C4:
	ADD.b	$29(A2), D5
	ANDI.b	#$1F, D5
	MOVE.b	D5, $2(A2)
	ADDQ.b	#1, $2A(A2)
loc_000043D4:
	CLR.w	D0
	MOVE.b	$2(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000063F8, A0
	MOVE.l	(A0,D0.w), D2
	ASR.l	#1, D2
	MOVE.l	$4(A0,D0.w), D3
	ASR.l	#1, D3
	MOVE.w	$26(A2), D4
	MOVEQ	#$00000064, D5
	DIVS.w	D5, D2
	MULS.w	D4, D2
	DIVS.w	D5, D3
	MULS.w	D4, D3
	ADD.l	D2, $6(A2)
	ADD.l	D3, $A(A2)
	CMPI.w	#$0500, $26(A2)
	BCC.b	loc_00004416
	ADDI.w	#$0010, $26(A2)
loc_00004416:
	RTS
loc_00004418:
	BSR.w	loc_000052E8	;Predicted (Offset array entry)
	TST.b	$24(A2)
	BEQ.w	loc_000044AA
	CMPI.b	#2, $24(A2)
	BEQ.w	loc_000044C2
	CMPI.b	#3, $24(A2)
	BEQ.w	loc_0000455A
	CMPI.b	#4, $24(A2)
	BEQ.w	loc_000045FA
	MOVE.w	$FFFFB290, D0
	SUBI.w	#$0040, D0
	CMP.w	$A(A2), D0
	BCC.b	loc_0000446C
	MOVE.b	#2, $24(A2)
	CLR.w	$26(A2)
	MOVE.w	$6(A2), $2A(A2)
	MOVE.w	$A(A2), $2C(A2)
	BRA.w	loc_000044C2
loc_0000446C:
	CMPI.w	#$0010, $4(A2)
	BCS.b	loc_0000447C
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_0000447C:
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $A(A2)
	CLR.w	D0
	MOVE.b	$2(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000064F8, A0
	MOVE.l	(A0,D0.w), D2
	ADD.l	D2, $6(A2)
loc_000044A0:
	MOVE.l	$4(A0,D0.w), D3
	ADD.l	D3, $A(A2)
	RTS
loc_000044AA:
	MOVE.b	#1, $24(A2)
	CLR.b	D0
	CMPI.w	#$0140, $6(A2)
	BCS.b	loc_000044BC
	MOVEQ	#1, D0
loc_000044BC:
	MOVE.b	D0, $25(A2)
	RTS
loc_000044C2:
	MOVE.w	$26(A2), D0
	CMPI.w	#$00B4, D0
	BCS.b	loc_000044FE
	MOVE.b	#3, $24(A2)
	MOVE.w	#$00DC, $26(A2)
	MOVE.w	$6(A2), D0
	MOVE.w	#$005E, D1
	TST.b	$25(A2)
	BEQ.b	loc_000044E8
	NEG.w	D1
loc_000044E8:
	ADD.w	D1, D0
	MOVE.w	D0, $2A(A2)
	MOVE.w	$A(A2), D0
	ADDI.w	#$000A, D0
	MOVE.w	D0, $2C(A2)
	BRA.w	loc_0000455A
loc_000044FE:
	BSR.w	loc_00006884
	MOVE.l	D1, $FFFFC8F6.w
	MOVE.w	$26(A2), D0
	BSR.w	loc_00006878
	MOVE.l	D1, $FFFFC8F2.w
	ADDQ.w	#2, $26(A2)
	MOVE.l	$FFFFC8F2.w, D0
	BPL.b	loc_0000451E
	NEG.l	D0
loc_0000451E:
	ADD.l	D0, D0
	ADD.l	D0, D0
	TST.b	$25(A2)
	BEQ.b	loc_0000452A
	NEG.l	D0
loc_0000452A:
	SUB.l	D0, $6(A2)
	MOVE.w	$FFFFC8F8.w, D0
	MOVE.w	$FFFFC8F4.w, D1
	MULS.w	D1, D0
	ASR.l	#7, D0
	MOVE.w	$2C(A2), D1
	SWAP	D1
	CLR.w	D1
	ADD.l	D1, D0
	MOVE.l	D0, $A(A2)
	CMPI.w	#5, $4(A2)
	BCS.b	loc_00004558
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_00004558:
	RTS
loc_0000455A:
	MOVE.w	$26(A2), D0
	CMPI.w	#$0190, D0
	BCS.b	loc_00004584
	MOVE.b	#4, $24(A2)
	MOVE.w	#0, $26(A2)
	MOVE.w	$6(A2), D0
	MOVE.w	D0, $2A(A2)
	MOVE.w	$A(A2), D0
	MOVE.w	D0, $2C(A2)
	BRA.w	loc_000045FA
loc_00004584:
	BSR.w	loc_00006884
	MOVE.l	D1, $FFFFC8F6.w
	MOVE.w	$26(A2), D0
	BSR.w	loc_00006878
	MOVE.l	D1, $FFFFC8F2.w
	ADDQ.w	#2, $26(A2)
	MOVE.l	$FFFFC8F6.w, D0
	ADD.l	$FFFFC8F2.w, D0
	ASL.l	#2, D0
	MOVE.l	D0, D1
	ASL.l	#6, D0
	ADD.l	D1, D0
	ADD.l	D1, D0
	ADD.l	D1, D0
	MOVE.w	$2A(A2), D1
	SWAP	D1
	CLR.w	D1
	TST.b	$25(A2)
	BEQ.b	loc_000045C0
	NEG.l	D0
loc_000045C0:
	ADD.l	D0, D1
	MOVE.l	D1, $6(A2)
	MOVE.l	$FFFFC8F6.w, D0
	SUB.l	$FFFFC8F2.w, D0
	ASL.l	#2, D0
	MOVE.l	D0, D1
	ASL.l	#6, D0
	ADD.l	D1, D0
	ADD.l	D1, D0
	ADD.l	D1, D0
	MOVE.w	$2C(A2), D1
	SWAP	D1
	CLR.w	D1
	SUB.l	D0, D1
	MOVE.l	D1, $A(A2)
	CMPI.w	#3, $4(A2)
	BCS.b	loc_000045F8
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_000045F8:
	RTS
loc_000045FA:
	MOVE.w	$26(A2), D0
	BSR.w	loc_00006884
	MOVE.l	D1, $FFFFC8F6.w
	MOVE.w	$26(A2), D0
	BSR.w	loc_00006878
	MOVE.l	D1, $FFFFC8F2.w
	ADDQ.w	#3, $26(A2)
	MOVE.l	$FFFFC8F2.w, D0
	BPL.b	loc_0000461E
	NEG.l	D0
loc_0000461E:
	ADD.l	D0, D0
	ASL.l	#2, D0
	TST.b	$25(A2)
	BEQ.b	loc_0000462A
	NEG.l	D0
loc_0000462A:
	ADD.l	D0, $6(A2)
	MOVE.l	$FFFFC8F6.w, D0
	ASL.l	#2, D0
	ADD.l	D0, $A(A2)
	CMPI.w	#3, $4(A2)
	BCS.b	loc_00004648
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_00004648:
	RTS
loc_0000464A:
	BSR.w	loc_000052E8	;Predicted (Offset array entry)
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $A(A2)
	TST.b	$24(A2)
	BEQ.b	loc_000046BE
	CMPI.b	#2, $24(A2)
	BEQ.w	loc_000046FC
	CMPI.w	#4, $4(A2)
	BCS.b	loc_00004678
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_00004678:
	MOVE.l	$28(A2), D0
	ADD.l	D0, $6(A2)
	BRA.b	loc_00004690
loc_00004682:
	MOVE.b	#2, $24(A2)
	MOVE.w	#1, $26(A2)
	RTS
loc_00004690:
	MOVE.l	#$00000E00, D0
	TST.l	$28(A2)
	BMI.b	loc_000046AC
	SUB.l	D0, $28(A2)
	BCC.b	loc_000046BC
	MOVE.l	#1, $28(A2)
	BRA.b	loc_00004682
loc_000046AC:
	ADD.l	D0, $28(A2)
	BCC.b	loc_000046BC
	MOVE.l	#$FFFFFFFF, $28(A2)
	BRA.b	loc_00004682
loc_000046BC:
	RTS
loc_000046BE:
	MOVE.b	#1, $24(A2)
	MOVE.w	#$0042, $26(A2)
	BSR.w	loc_00007D88_rand
	ANDI.l	#$0000000C, D0
	SWAP	D0
	LSR.l	#4, D0
	CMPI.w	#$0140, $6(A2)
	BCC.b	loc_000046EE
	MOVE.l	#$00040000, $28(A2)
	ADD.l	D0, $28(A2)
	BRA.b	loc_000046FA
loc_000046EE:
	MOVE.l	#$FFFC0000, $28(A2)
	SUB.l	D0, $28(A2)
loc_000046FA:
	RTS
loc_000046FC:
	CMPI.w	#$0014, $4(A2)
	BCS.b	loc_0000470C
	CLR.w	$4(A2)
	BSR.w	loc_000054DA
loc_0000470C:
	CLR.w	D0
	MOVE.b	$2(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000063F8, A0
	MOVE.l	(A0,D0.w), D2
	ASR.l	#1, D2
	MOVE.l	$4(A0,D0.w), D3
	ASR.l	#1, D3
	MOVE.w	$26(A2), D4
	MOVEQ	#$00000064, D5
	DIVS.w	D5, D2
	MULS.w	D4, D2
	DIVS.w	D5, D3
	MULS.w	D4, D3
	ADD.l	D2, $6(A2)
	ADD.l	D3, $A(A2)
	CMPI.w	#$0500, $26(A2)
	BCC.b	loc_0000474E
	ADDI.w	#$0010, $26(A2)
loc_0000474E:
	RTS
loc_00004750:
	; @ Transport (power-up carrier)
	BSR.w	loc_00004E74
	BSR.w	loc_00004AAA
	BTST.b	#3, $1(A2)
	BNE.b	loc_0000476A
	BSET.b	#3, $1(A2)
	CLR.w	$2C(A2)
loc_0000476A:
	ADDQ.w	#1, $2C(A2)
	MOVE.w	$2C(A2), D0
	CMPI.w	#$0082, D0
	BEQ.b	loc_00004786
	CMPI.w	#$00BE, D0
	BEQ.b	loc_00004786
	CMPI.w	#$00FA, D0
	BEQ.b	loc_00004786
	RTS
loc_00004786:
	MOVE.w	$6(A2), D0
	ADDI.w	#$000C, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$002C, D1
	BRA.w	loc_00005370
loc_0000479A:
	; @ Power-up (donburi pattern)
	BTST.b	#0, $1(A2)
	BNE.w	loc_0000482A
	MOVE.w	#$0130, D0
	MOVE.w	$6(A2), D2
	ADDQ.w	#8, D2
	SUB.w	D2, D0
	MOVE.w	$A(A2), D1
	ADDQ.w	#8, D1
	SUBI.w	#$00E0, D1
	MOVE.w	D0, D4
	MOVE.w	D1, D5
	TST.w	D4
	BPL.b	loc_000047C4
	NEG.w	D4
loc_000047C4:
	TST.w	D5
	BPL.b	loc_000047CA
	NEG.w	D5
loc_000047CA:
	CMPI.w	#3, D4
	BCC.b	loc_000047D8
	CMPI.w	#3, D5
	BCC.b	loc_000047D8
	BRA.b	loc_00004804
loc_000047D8:
	BSR.w	loc_0000632E
	MOVE.w	D2, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000063F8, A0
	MOVE.l	(A0,D0.w), D2
	ADD.l	D2, D2
	ADD.l	D2, D2
	ADD.l	D2, $6(A2)
	MOVE.l	$4(A0,D0.w), D3
	ADD.l	D3, D3
	ADD.l	D3, D3
	ADD.l	D3, $A(A2)
	RTS
loc_00004804:
	BSET.b	#0, $1(A2)
	MOVEQ	#1, D0
	MOVE.w	D0, $24(A2)
	MOVE.w	D0, $26(A2)
	MOVE.b	$FFFFC8F0.w, $28(A2)
	MOVE.b	#$18, $2A(A2)
	MOVE.b	$FFFFC8F0.w, $2B(A2)
	ADDQ.b	#1, $FFFFC8F0.w
loc_0000482A:
	TST.w	$24(A2)
	BPL.b	loc_00004856
	ADDQ.w	#6, $26(A2)
	MOVE.w	$26(A2), $24(A2)
	TST.b	$2A(A2)
	BEQ.b	loc_00004856
	SUBQ.b	#1, $2A(A2)
	BTST.b	#0, $2B(A2)
	BNE.b	loc_00004852
	ADDQ.b	#1, $28(A2)
	BRA.b	loc_00004856
loc_00004852:
	SUBQ.b	#1, $28(A2)
loc_00004856:
	MOVE.b	$28(A2), D0
	ANDI.w	#3, D0
	LSL.w	#3, D0
	LEA	loc_0000487C, A3
	MOVE.l	(A3,D0.w), D1
	ADD.l	D1, $6(A2)
	MOVE.l	$4(A3,D0.w), D1
	ADD.l	D1, $A(A2)
	SUBQ.w	#1, $24(A2)
	RTS
loc_0000487C:
loc_0000489C:
	; @ Turret
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $A(A2) ; Increase y with scroll
	BSR.w	loc_00004AAA ; Static behavior
	MOVE.b	$5(A2), D0 ; D0=self.timer
	ANDI.b	#$0F, D0
	BNE.b	loc_000048C6
	MOVE.b	$2(A2), D0
	MOVE.w	D0, -(A7)
	BSR.w	loc_000054DA ; Rotate when timer%$F==0
	MOVE.w	(A7)+, D0
	CMP.b	$2(A2), D0
	BEQ.b	loc_000048D4
loc_000048C6:
	CMPI.b	#$F0, $3(A2) ; Fire rate
	BCC.b	loc_000048D2 ; Branch if $3(A2)>=#$F0
	ADDQ.b	#1, $3(A2)
loc_000048D2:
	RTS
loc_000048D4:
	BSR.w	loc_000052DC
	CMPI.b	#$F0, $3(A2)
	BCS.b	loc_000048C6
	MOVE.b	#$80, $3(A2)
	MOVE.w	$6(A2), D0
	ADDI.w	#$000C, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$000C, D1
	BRA.w	loc_000053E0
loc_000048FA:
	; @ Tank
	BSR.w	loc_00004E74
	CMPI.b	#$10, $2(A2)
	BEQ.w	loc_00004AAA
	CMPI.b	#8, $2(A2)
	BEQ.w	loc_00004AAA
	CMPI.b	#$18, $2(A2)
	BEQ.w	loc_00004AAA
	RTS
loc_0000491E:
	; @ Turret attachment
	MOVEA.l	$10(A2), A3
	MOVE.w	$6(A3), $6(A2)
	MOVE.w	$A(A3), $A(A2)
	MOVE.b	$5(A2), D0
	ANDI.b	#$0F, D0
	BNE.b	loc_0000494E
	MOVE.b	$2(A2), D0
	MOVE.w	D0, -(A7)
	BSR.w	loc_000054DA
	MOVE.w	(A7)+, D0
	CMP.b	$2(A2), D0
	BEQ.b	loc_000048D4
	BSR.w	loc_000054DA
loc_0000494E:
	CMPI.b	#$F0, $3(A2)
	BCC.b	loc_0000495A
	ADDQ.b	#1, $3(A2)
loc_0000495A:
	RTS
loc_0000495C:
	; @ Artillery
	MOVE.l	$FFFF823E, D0	;Predicted (Offset array entry)
	ADD.l	D0, $A(A2)
	TST.w	$FFFFB292
	BNE.w	loc_000049A8
	TST.w	$FFFFF61A.w
	BNE.w	loc_000049A8
	BSR.w	loc_00004AAA
	ADDQ.b	#1, $3(A2)
	CMPI.b	#$DC, $3(A2)
	BEQ.b	loc_0000499A
	CMPI.b	#$EB, $3(A2)
	BEQ.b	loc_000049BA
	CMPI.b	#$F5, $3(A2)
	BEQ.b	loc_000049A8
	RTS
loc_0000499A:
	BCLR.b	#7, $1(A2)
	MOVE.b	#2, $2(A2)
	RTS
loc_000049A8:
	BSET.b	#7, $1(A2)
	MOVE.b	#0, $2(A2)
	CLR.b	$3(A2)
	RTS
loc_000049BA:
	MOVE.w	$6(A2), D0
	ADDI.w	#$000C, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$000C, D1
	BRA.w	loc_0000534A
loc_000049CE:
	; @ Torpedo boat
	LEA	loc_00004FDC, A5	;Predicted (Offset array entry)
	BSR.w	loc_00004E7A
	BSR.w	loc_00004AAA
	BTST.b	#3, $1(A2)
	BNE.b	loc_000049EE
	BSET.b	#3, $1(A2)
	CLR.w	$2C(A2)
loc_000049EE:
	ADDQ.w	#1, $2C(A2)
	MOVE.w	$2C(A2), D0
	CMPI.w	#$0078, D0
	BEQ.b	loc_00004A66
	CMPI.w	#$0082, D0
	BEQ.b	loc_00004A76
	CMPI.w	#$008C, D0
	BEQ.b	loc_00004A6E
	CMPI.w	#$00B4, D0
	BEQ.b	loc_00004A66
	CMPI.w	#$00BE, D0
	BEQ.b	loc_00004A76
	CMPI.w	#$00C8, D0
	BEQ.b	loc_00004A6E
	CMPI.w	#$00F0, D0
	BEQ.b	loc_00004A66
	CMPI.w	#$00FA, D0
	BEQ.b	loc_00004A76
	CMPI.w	#$0104, D0
	BEQ.b	loc_00004A6E
loc_00004A2C:
	MOVE.w	$2C(A2), D0
	CMPI.w	#$0078, D0
	BEQ.b	loc_00004A56
	CMPI.w	#$0082, D0
	BEQ.b	loc_00004A8C
	CMPI.w	#$008C, D0
	BEQ.b	loc_00004A5E
	CMPI.w	#$00BE, D0
	BEQ.b	loc_00004A56
	CMPI.w	#$00C8, D0
	BEQ.b	loc_00004A8C
	CMPI.w	#$00D2, D0
	BEQ.b	loc_00004A5E
	RTS
loc_00004A56:
	BSET.b	#0, $1(A2)
	RTS
loc_00004A5E:
	BCLR.b	#0, $1(A2)
	RTS
loc_00004A66:
	BSET.b	#1, $1(A2)
	BRA.b	loc_00004A2C
loc_00004A6E:
	BCLR.b	#1, $1(A2)
	BRA.b	loc_00004A2C
loc_00004A76:
	MOVE.w	$6(A2), D0
	ADDI.w	#9, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0034, D1
	BSR.w	loc_0000534A
	BRA.b	loc_00004A2C
loc_00004A8C:
	MOVE.w	$6(A2), D0
	ADDI.w	#9, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0024, D1
	BRA.w	loc_00005370
loc_00004AA0:
	; @ Static object
	; It does nothing besides scroll down and check for culling
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $A(A2) ; Make y position advance with scrolling
loc_00004AAA:
	; @ Y cull
	; Delete object and attachment if y out of bounds
	; Objects calling this routine (besides Static):
	; Transport, Turret, Tank, Artillery, Torpedo boat, Boat, Otakebi.
	TST.w	$A(A2)
	BMI.b	loc_00004ACC ; Branch if y<0
	CMPI.w	#$0160, $A(A2)
	BMI.b	loc_00004ACC ; Branch if y<352
	CLR.b	(A2) ; Disable the object
	MOVEM.l	A3/D0, -(A7)
	MOVE.l	$10(A2), D0
	BEQ.b	loc_00004AC8
	MOVEA.l	D0, A3
	CLR.b	(A3) ; Also delete attachment if it exists
loc_00004AC8:
	MOVEM.l	(A7)+, D0/A3
loc_00004ACC:
	RTS

loc_00004ACE:
	; @ Boat
	; Displace x,y based on sprite rotation
	LEA	loc_0000515C, A3 ; A3=Angles table (fast)
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $A(A2)
	CLR.w	D1
	MOVE.b	$2(A2), D1
	LSR.b	#1, D1
	ADD.b	D1, D1
	ADD.b	D1, D1
	ADD.b	D1, D1 ; Multiply by 8
	MOVE.l	(A3,D1.w), D4
	ADD.l	D4, $6(A2)	; x+=515C[angle*8]
	MOVE.l	$4(A3,D1.w), D4
	ADD.l	D4, $A(A2)	; y+=515C[angle*8+4]
	CMPI.b	#$10, $2(A2)
	BEQ.b	loc_00004AAA	; If angle==16, check bounds.
	RTS
loc_00004B06:
	; @ Hovercraft Ablage
	LEA	loc_000050DC, A5	;Predicted (Offset array entry)
	CMPI.w	#9, $FFFFF624.w
	BNE.b	loc_00004B1C
	LEA	loc_0000525C, A5
	BRA.b	loc_00004B2A
loc_00004B1C:
	CMPI.w	#2, $FFFFF624.w
	BNE.b	loc_00004B2A
	LEA	loc_000051DC, A5
loc_00004B2A:
	BSR.w	loc_00004E7A
	BTST.b	#3, $1(A2)
	BNE.b	loc_00004B40
	BSET.b	#3, $1(A2)
	CLR.w	$2C(A2)
loc_00004B40:
	ADDI.w	#$0101, $2C(A2)
	MOVE.b	$2C(A2), D0
	CMPI.b	#$6E, D0
	BEQ.b	loc_00004B98
	CMPI.b	#$78, D0
	BEQ.b	loc_00004BBC
	CMPI.b	#$82, D0
	BEQ.b	loc_00004BA0
	CMPI.b	#$A0, D0
	BCS.b	loc_00004B66
	CLR.b	$2C(A2)
loc_00004B66:
	MOVE.b	$2D(A2), D0
	CMPI.b	#$6E, D0
	BEQ.b	loc_00004B88
	CMPI.b	#$78, D0
	BEQ.b	loc_00004BA8
	CMPI.b	#$82, D0
	BEQ.b	loc_00004B90
	CMPI.b	#$AA, D0
	BCS.b	loc_00004B86
	CLR.b	$2D(A2)
loc_00004B86:
	RTS
loc_00004B88:
	BSET.b	#0, $1(A2)
	RTS
loc_00004B90:
	BCLR.b	#0, $1(A2)
	RTS
loc_00004B98:
	BSET.b	#1, $1(A2)
	BRA.b	loc_00004B66
loc_00004BA0:
	BCLR.b	#1, $1(A2)
	BRA.b	loc_00004B66
loc_00004BA8:
	MOVE.w	$6(A2), D0
	ADDI.w	#$0010, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0010, D1
	BRA.w	loc_00005370
loc_00004BBC:
	MOVE.w	$6(A2), D0
	ADDI.w	#$0010, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0020, D1
	BSR.w	loc_00005370
	BRA.b	loc_00004B66
loc_00004BD2:
	LEA	loc_0000515C, A5	;Predicted (Offset array entry)
	BRA.w	loc_00004E7A
loc_00004BDC:
	; @ Green launcher (horizontal)
	BSR.w	loc_00004C96	;Predicted (Offset array entry)
	MOVE.b	$2(A2), D0
	MOVE.w	D0, -(A7)
	LEA	loc_0000505C, A5
	BSR.w	loc_00004E7A
	MOVE.w	(A7)+, D0
	MOVE.b	D0, $2(A2)
	BSR.w	loc_000052DC
	ADDQ.b	#1, $3(A2)
	MOVE.b	$3(A2), D0
	CMPI.b	#$E8, D0
	BEQ.b	loc_00004C5A
	CMPI.b	#$F0, D0
	BEQ.b	loc_00004C22
	CMPI.b	#$F8, D0
	BEQ.b	loc_00004C78
	CMPI.b	#$FA, D0
	BCS.b	loc_00004C20
	MOVE.b	#$80, $3(A2)
loc_00004C20:
	RTS
loc_00004C22:
	CMPI.b	#2, $2C(A2)
	BEQ.b	loc_00004C3C
	MOVE.w	$6(A2), D0
	ADDQ.w	#4, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$000C, D1
	BSR.w	loc_0000534A
loc_00004C3C:
	CMPI.b	#2, $2D(A2)
	BEQ.b	loc_00004C58
	MOVE.w	$6(A2), D0
	ADDI.w	#$0024, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$000C, D1
	BRA.w	loc_0000534A
loc_00004C58:
	RTS
loc_00004C5A:
	CMPI.b	#2, $2C(A2)
	BEQ.b	loc_00004C68
	MOVE.b	#1, $2C(A2)
loc_00004C68:
	CMPI.b	#2, $2D(A2)
	BEQ.b	loc_00004C76
	MOVE.b	#1, $2D(A2)
loc_00004C76:
	RTS
loc_00004C78:
	CMPI.b	#2, $2C(A2)
	BEQ.b	loc_00004C86
	MOVE.b	#0, $2C(A2)
loc_00004C86:
	CMPI.b	#2, $2D(A2)
	BEQ.b	loc_00004C94
	MOVE.b	#0, $2D(A2)
loc_00004C94:
	RTS
loc_00004C96:
	CLR.l	D0
	MOVE.w	$16(A2), D0
	ADDQ.l	#1, D0
	DIVU.w	#3, D0
	MOVE.w	$E(A2), D1
	ADDQ.w	#1, D1
	CMP.w	D1, D0
	BPL.b	loc_00004CB4
	ADD.w	D0, D0
	CMP.w	D1, D0
	BPL.b	loc_00004CBA
	RTS
loc_00004CB4:
	MOVE.b	#2, $2D(A2)
loc_00004CBA:
	MOVE.b	#2, $2C(A2)
	RTS
loc_00004CC2:
	; @ Green launcher (vertical)
	BSR.b	loc_00004C96	;Predicted (Offset array entry)
	MOVE.b	$2(A2), D0
	MOVE.w	D0, -(A7)
	LEA	loc_0000505C, A5
	BSR.w	loc_00004E7A
	MOVE.w	(A7)+, D0
	MOVE.b	D0, $2(A2)
	BSR.w	loc_000052DC
	ADDQ.b	#1, $3(A2)
	MOVE.b	$3(A2), D0
	CMPI.b	#$E8, D0
	BEQ.w	loc_00004C5A
	CMPI.b	#$F0, D0
	BEQ.b	loc_00004D0A
	CMPI.b	#$F8, D0
	BEQ.w	loc_00004C78
	CMPI.b	#$FA, D0
	BCS.b	loc_00004D08
	MOVE.b	#$78, $3(A2)
loc_00004D08:
	RTS
loc_00004D0A:
	CMPI.b	#2, $2C(A2)
	BEQ.b	loc_00004D24
	MOVE.w	$6(A2), D0
	ADDI.w	#$000C, D0
	MOVE.w	$A(A2), D1
	ADDQ.w	#4, D1
	BSR.w	loc_0000534A
loc_00004D24:
	CMPI.b	#2, $2D(A2)
	BEQ.b	loc_00004D40
	MOVE.w	$6(A2), D0
	ADDI.w	#$000C, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0024, D1
	BRA.w	loc_0000534A
loc_00004D40:
	RTS
loc_00004D42:
	; @ Long range bomber
	LEA	loc_000050DC, A5	;Predicted (Offset array entry)
	BSR.w	loc_00004E7A
	ADDQ.b	#1, $3(A2)
	CMPI.b	#$78, $3(A2)
	BEQ.b	loc_00004D7E
	CMPI.b	#$82, $3(A2)
	BEQ.b	loc_00004D7E
	CMPI.b	#$8C, $3(A2)
	BEQ.b	loc_00004D7E
	CMPI.b	#$96, $3(A2)
	BEQ.b	loc_00004D7E
	CMPI.b	#$97, $3(A2)
	BCS.b	loc_00004D7C
	CLR.b	$3(A2)
loc_00004D7C:
	RTS
loc_00004D7E:
	ADDQ.b	#1, $2B(A2)
	BTST.b	#0, $2B(A2)
	BEQ.b	loc_00004D8C
	BRA.b	loc_00004DBC
loc_00004D8C:
	MOVE.w	$6(A2), D0
	ADDI.w	#$0010, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	CLR.l	D2
	MOVE.l	#$00028000, D3
	BSR.w	loc_00006EF0
	MOVE.w	$6(A2), D0
	ADDI.w	#$0048, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	BRA.w	loc_00006EF0
loc_00004DBC:
	MOVE.w	$6(A2), D0
	ADDI.w	#$0018, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	CLR.l	D2
	MOVE.l	#$00028000, D3
	BSR.w	loc_00006EF0
	MOVE.w	$6(A2), D0
	ADDI.w	#$0040, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	BRA.w	loc_00006EF0
loc_00004DEC:
	; @ Otakebi
	LEA	loc_000050DC, A5	;Predicted (Offset array entry)
	BSR.w	loc_00004E7A
	BSR.w	loc_00004AAA	;Check y out of bounds
	ADDQ.b	#1, $3(A2)
	CMPI.b	#$78, $3(A2)
	BEQ.b	loc_00004E24
	CMPI.b	#$82, $3(A2)
	BEQ.b	loc_00004E24
	CMPI.b	#$8C, $3(A2)
	BEQ.b	loc_00004E24
	CMPI.b	#$8D, $3(A2)
	BCS.b	loc_00004E22
	CLR.b	$3(A2)
loc_00004E22:
	RTS
loc_00004E24:
	MOVE.w	$6(A2), D0
	ADDI.w	#$0013, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$002C, D1
	BSR.w	loc_0000534A
	MOVE.w	$6(A2), D0
	ADDI.w	#$002B, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$003C, D1
	BSR.w	loc_0000534A
	MOVE.w	$6(A2), D0
	ADDI.w	#$0045, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$002C, D1
	BRA.w	loc_0000534A
loc_00004E60:
	LEA	loc_0000505C, A5
	BRA.w	loc_00004E7A
loc_00004E6A:
	LEA	loc_0000515C, A5
	BRA.w	loc_00004E7A
loc_00004E74:
	LEA	loc_000050DC, A5
loc_00004E7A: ; @ Movement of ground enemies and carrier
	TST.b	$14(A2) ; Check if camera scroll should affect Y
	BEQ.b	loc_00004E8A
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $A(A2) ; Write Y
loc_00004E8A:
	TST.b	$24(A2) ; Test sequence counter
	BEQ.b	loc_00004EC4 ; If zero read next
loc_00004E90: ; @ Displace towards angle
	SUBQ.b	#1, $24(A2); ; Decrease sequence timer
	CLR.w	D1
	MOVE.b	$25(A2), D1 ; D1=Direction angle
	CMPI.b	#$10, D1
	BEQ.b	loc_00004EC2 ; Skip if angle==16 (not moving)
	MOVE.b	D1, D0
	ADD.b	D0, D0
	MOVE.b	D0, $2(A2) ; Sprite rotation=D1*2
	ADD.w	D1, D1 ; D1*=8
	ADD.w	D1, D1
	ADD.w	D1, D1
	MOVE.l	(A5,D1.w), D4 ; D4=(A5+angle*8)
	ADD.l	D4, $6(A2) ; x+=vx
	MOVE.l	$4(A5,D1.w), D4 ; D4=(A5+angle*8+4)
	ADD.l	D4, $A(A2) ; y+=vy
	ADD.l	D4, $20(A2) ; ?
loc_00004EC2:
	RTS
loc_00004EC4:
	LEA	loc_00096800, A3
	MOVE.w	$26(A2), D0
loc_00004ECE:
	TST.w	D0
	BMI.b	loc_00004EF8 ; Return if N=1 (D0<0)
	MOVE.w	(A3,D0.w), D1
	; D1 word encodes action|angle and counter
	; Upper byte is split in two nibbles:
	; action 4 bits, angle 4 bits
	; Lower byte is duration 8 bits
	CMPI.w	#$FFFF, D1
	BEQ.b	loc_00004F3A
	MOVE.w	D1, D2
	MOVE.w	D1, D3
	LSR.w	#8, D3 ; Upper byte is angle
	ROL.w	#6, D1 ; Move last 6 bits to front
	; The idea is to get upper nibble to bottom (ROL 4)
	; and then multiply by 4 (ROL 2), hence 6
	; The AND gets rid of the angle bits
	ANDI.w	#$003C, D1 ; Make D1 aligned to long and <64
	LEA	loc_00004EFA, A4
	MOVEA.l	(A4,D1.w), A4
	JMP	(A4) ; Execute action
loc_00004EF4:
	ADDQ.w	#2, $26(A2) ; Advance seq
loc_00004EF8:
	RTS
loc_00004EFA:
	; Jump table, 16 entries (64 bytes)
	dc.l $00004F3E ; 0: Move
	dc.l $00004F4C ; 1: Set angle to stop (coincides with angle of $10)
	dc.l $00004F54 ; 2: Toggle invincible (XOR $80)
	dc.l $00004F5C ; 3: Toggle ? (XOR $8)
	dc.l $00004F88 ; 4: Skip
	dc.l $00004F72 ; 5: Toggle ?? (XOR $20)
	dc.l $00004F94 ; 6: Goto seq pointed by next word
	dc.l $00004FA0 ; 7: what is 28(a2)
	dc.l $00004FAA ; 8: also
	dc.l $00004F88 ; 9: Ignore
	dc.l $00004F88 ; A: Ignore
	dc.l $00004FB0 ; B: Decrease x
	dc.l $00004F8C ; C: Ignore
	dc.l $00004F8C ; D: Ignore
	dc.l $00004FC0 ; E: Stop object movement and end sequence
	dc.l $00004FD4 ; F: Just end sequence
loc_00004F3A:
	BRA.w	loc_00004F8C
loc_00004F3E:
	MOVE.b	D3, $25(A2) ; Write angle
loc_00004F42:
	MOVE.b	D2, $24(A2)
	BSR.w	loc_00004E90 ; Move object
	BRA.b	loc_00004EF4 ; Advance and return
loc_00004F4C:
	MOVE.b	#$10, $25(A2) ; Stop
	BRA.b	loc_00004F42
loc_00004F54:
	EORI.b	#$80, $1(A2) ; XOR layer bit $80 (shootable bit)
	BRA.b	loc_00004F8C
loc_00004F5C:
	EORI.b	#8, $1(A2) ; XOR layer bit 8
	MOVE.l	$10(A2), D0 ; Do the same with attachment
	BEQ.b	loc_00004F8C
	MOVEA.l	D0, A4
	EORI.b	#8, $1(A4)
	BRA.b	loc_00004F8C
loc_00004F72:
	EORI.b	#$20, $1(A2) ; XOR $20 and do same for attachment
	MOVE.l	$10(A2), D0
	BEQ.b	loc_00004F8C
	MOVEA.l	D0, A4
	EORI.b	#$20, $1(A4)
	BRA.b	loc_00004F8C
loc_00004F88:
	BRA.b	loc_00004F8C
loc_00004F8C: ; Process next sequence element right now
	ADDQ.w	#2, $26(A2)
	BRA.w	loc_00004EC4
loc_00004F94:
	MOVE.l	$2(A3,D0.w), D0
loc_00004F98:
	MOVE.w	D0, $26(A2)
	BRA.w	loc_00004ECE
loc_00004FA0:
	MOVE.w	D0, D1	;Predicted (Offset array entry)
	ADDQ.w	#6, D1
	MOVE.w	D1, $28(A2)
	BRA.b	loc_00004F94
loc_00004FAA:
	MOVE.w	$28(A2), D0	;Predicted (Offset array entry)
	BRA.b	loc_00004F98
loc_00004FB0:
	CMPI.w	#6, $FFFFF624.w ; Check stage number
	BCS.b	loc_00004F8C ; Skip if C==1 (stage<6)
	SUBI.w	#$0080, $6(A2) ; x-=128 Something to do with loop 2 mirroring?
	BRA.b	loc_00004F8C
loc_00004FC0:
	MOVE.w	#$FFF0, $26(A2)	;Predicted (Offset array entry)
	CLR.b	(A2)
	MOVE.l	$10(A2), D0
	BEQ.b	loc_00004FD2
	MOVEA.l	D0, A3
	CLR.b	(A3)
loc_00004FD2:
	RTS
loc_00004FD4:
	MOVE.w	#$FFF0, $26(A2) ; @ Done
	RTS
loc_00004FDC:
loc_0000505C:
loc_000050DC:
loc_0000515C:
loc_000051DC:
loc_0000525C:
loc_000052DC:
	BTST.b	#3, $1(A2)
	BEQ.b	loc_000052E6
	ADDQ.l	#4, A7
loc_000052E6:
	RTS
loc_000052E8:
	TST.b	$3(A2)
	BEQ.b	loc_000052F4
	SUBQ.b	#1, $3(A2)
	RTS
loc_000052F4:
	MOVEQ	#$00000014, D4
	MOVE.w	$6(A2), D0
	ADD.w	D4, D0
	MOVE.w	$A(A2), D1
	ADD.w	D4, D1
	BSR.w	loc_000054C4
	CMP.b	$2(A2), D2
	BNE.b	loc_00005342
	CLR.w	D0
	MOVE.b	$2(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000064F8, A0
	MOVE.l	(A0,D0.w), D2
	MOVE.l	$4(A0,D0.w), D3
	MOVEQ	#$00000014, D4
	MOVE.w	$6(A2), D0
	ADD.w	D4, D0
	MOVE.w	$A(A2), D1
	ADD.w	D4, D1
	BSR.w	loc_00006EF0
	BCS.b	loc_00005342
	MOVE.b	#$F0, $3(A2)
	RTS
loc_00005342:
	MOVE.b	#$78, $3(A2)
	RTS
loc_0000534A:
	BSR.w	loc_000054C4
loc_0000534E:
	MOVEM.w	D1/D0, -(A7)
	MOVE.w	D2, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000064F8, A0
	MOVE.l	(A0,D0.w), D2
	MOVE.l	$4(A0,D0.w), D3
	MOVEM.w	(A7)+, D0/D1
	BRA.w	loc_00006EF0
loc_00005370:
	MOVEM.w	D1/D0, -(A7)
	BSR.w	loc_0000549C
	MOVE.w	D2, -(A7)
	BSR.w	loc_000053BC
	MOVEM.w	$2(A7), D0/D1
	BSR.w	loc_00006EF0
	MOVE.w	(A7), D2
	SUBQ.w	#2, D2
	ANDI.w	#$000F, D2
	BSR.w	loc_000053BC
	MOVEM.w	$2(A7), D0/D1
	BSR.w	loc_00006EF0
	MOVE.w	(A7), D2
	ADDQ.w	#2, D2
	ANDI.w	#$000F, D2
	BSR.w	loc_000053BC
	MOVEM.w	$2(A7), D0/D1
	BSR.w	loc_00006EF0
	MOVE.w	(A7)+, D2
	MOVEM.w	(A7)+, D0/D1
	RTS
loc_000053BC:
	MOVE.w	D2, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_000066BE, A0
	MOVE.l	(A0,D0.w), D2
	MOVE.l	D2, D4
	ASL.l	#2, D2
	ADD.l	D4, D2
	MOVE.l	$4(A0,D0.w), D3
	MOVE.l	D3, D4
	ASL.l	#2, D3
	ADD.l	D4, D3
	RTS
loc_000053E0:
	MOVEM.l	D1/D0, -(A7)
	CLR.w	D2
	MOVE.b	$2(A2), D2
	LEA	loc_000065F8, A0
	MOVE.b	(A0,D2.w), D2
	MOVE.w	D2, D5
	LSL.w	#3, D5
	LEA	loc_0000673E, A0
	MOVE.l	(A0,D5.w), D2
	MOVE.l	D2, D4
	ASL.l	#2, D2
	ADD.l	D4, D2
	MOVE.l	$4(A0,D5.w), D3
	MOVE.l	D3, D4
	ASL.l	#2, D3
	ADD.l	D4, D3
	MOVEM.l	(A7)+, D0/D1
	LEA	loc_00005428, A0
	ADD.w	$2(A0,D5.w), D0
	ADD.w	$6(A0,D5.w), D1
	BRA.w	loc_00006EF0
loc_00005428:
loc_00005468:
	MOVEM.w	D2/D1/D0, -(A7)
	MOVE.w	D2, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_00006818, A0
	MOVE.l	(A0,D0.w), D2
	MOVE.l	D2, D4
	ASL.l	#2, D2
	ADD.l	D4, D2
	MOVE.l	$4(A0,D0.w), D3
	MOVE.l	D3, D4
	ASL.l	#2, D3
	ADD.l	D4, D3
	MOVEM.w	(A7), D0/D1
	BSR.w	loc_00006EF0
	MOVEM.w	(A7)+, D0/D1/D2
	RTS
loc_0000549C:
	BSR.w	loc_000054A4
	BRA.w	loc_00006618
loc_000054A4:
	MOVE.w	$FFFFB28E, D2
	ADDI.w	#$000C, D2
	ADD.w	$FFFFF622.w, D2
	SUB.w	D0, D2
	MOVE.w	D2, D0
	MOVE.w	$FFFFB290, D2
	ADDI.w	#$000C, D2
	SUB.w	D2, D1
	RTS
loc_000054C4:
	MOVEM.l	D1/D0, -(A7)
	BSR.b	loc_000054A4
	BSR.w	loc_0000632E
	MOVEM.l	(A7)+, D0/D1
	RTS
loc_000054D4:
	BSR.b	loc_000054A4
	BRA.w	loc_0000677E
loc_000054DA:
	; @ Rotate towards player
	; > A2: self
	MOVE.w	$FFFFB28E, D0 ; D0=player.x
	ADDI.w	#$0010, D0
	ADD.w	$FFFFF622.w, D0 ; D0+=scroll_offset_x
	MOVE.w	$6(A2), D2 ; D2=self.x
	ADDI.w	#$0010, D2
	SUB.w	D2, D0 ; D0=dx=player.x+16+scroll_x-(self.x+16)
	MOVE.w	$A(A2), D1
	ADDI.w	#$0010, D1
	MOVE.w	$FFFFB290, D2 ; D2=player.x
	ADDI.w	#$0010, D2
	SUB.w	D2, D1 ; D1=dy=self.y+16-(player.y+16)
	BSR.w	loc_0000632E
	MOVE.b	$2(A2), D5
	BSR.w	loc_00005540
	ADD.b	D1, D5
	ANDI.b	#$1F, D5
	MOVE.b	D5, $2(A2)
	RTS

loc_0000551E:
	MOVE.w	D3, D0
	ADDI.w	#$0010, D0
	ADD.w	$FFFFF622.w, D0
	MOVE.w	$6(A2), D2
	ADDI.w	#$0010, D2
	SUB.w	D2, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0010, D1
	SUB.w	D4, D1
	BRA.w	loc_0000632E

loc_00005540:
	CLR.b	D1
	MOVE.b	D5, D0
	SUB.b	D2, D0
	BEQ.b	loc_0000555E
	BPL.b	loc_0000554E
	MOVEQ	#1, D1
	BRA.b	loc_00005550
loc_0000554E:
	MOVEQ	#-1, D1
loc_00005550:
	TST.b	D0
	BPL.b	loc_00005556
	NEG.b	D0
loc_00005556:
	CMPI.b	#$10, D0
	BCS.b	loc_0000555E
	NEG.b	D1
loc_0000555E:
	RTS

loc_00005560:
	CMPI.b	#8, D5
	BCC.b	loc_0000556C
	MOVEQ	#8, D5
	BRA.w	loc_00005574
loc_0000556C:
	CMPI.b	#$19, D5
	BCS.b	loc_00005574
	MOVEQ	#$00000018, D5
loc_00005574:
	MOVE.b	D5, $2(A2)
	RTS
loc_0000557A:
	MOVE.w	$FFFFB28E, D0
	ADDI.w	#$0010, D0
	ADD.w	$FFFFF622.w, D0
	MOVE.w	$6(A2), D2
	ADDI.w	#$0018, D2
	SUB.w	D2, D0
	MOVEQ	#1, D1
	TST.w	D0
	BPL.b	loc_0000559A
	MOVEQ	#-1, D1
loc_0000559A:
	RTS
loc_0000559C:
	LEA	$FFFFC8FA.w, A0
	MOVE.w	#$003D, D0
loc_000055A4:
	CLR.b	(A0)+
	DBF	D0, loc_000055A4
	RTS
loc_000055AC:
	BSR.w	loc_00005970	;Predicted (Offset array entry)
	BSR.w	loc_00005918
	LEA	$FFFFB5ED, A1
	BSR.w	loc_0000563E
	BSR.b	loc_000055C4
	BRA.w	loc_00004E60
loc_000055C4:
	TST.l	$FFFF823E
	BNE.b	loc_000055FE
	LEA	$FFFFC8FA.w, A0
	ADDQ.w	#1, (A0)
	CMPI.w	#$0100, (A0)
	BEQ.b	loc_00005600
	CMPI.w	#$0150, (A0)
	BEQ.b	loc_00005600
	CMPI.w	#$01A0, (A0)
	BEQ.b	loc_00005600
	CMPI.w	#$02A0, (A0)
	BEQ.b	loc_00005622
	CMPI.w	#$02F0, (A0)
	BEQ.b	loc_00005622
	CMPI.w	#$0340, (A0)
	BEQ.b	loc_00005622
	CMPI.w	#$0340, (A0)
	BCS.b	loc_000055FE
	CLR.w	(A0)
loc_000055FE:
	RTS
loc_00005600:
	MOVE.l	loc_00096BC8, D0
	MOVEQ	#$00000058, D4
	MOVEQ	#$00000078, D5
loc_0000560A:
	ADDQ.l	#6, D0
	LEA	loc_00022956, A3
	MOVEQ	#8, D3
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	BSR.w	loc_00003210
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00005622:
	MOVE.l	loc_00096BCC, D0
	MOVE.w	#$0228, D4
	MOVEQ	#$00000070, D5
	BRA.b	loc_0000560A
loc_00005630:
	MOVE.w	$6(A2), D0
	LSR.w	#1, D0
	ANDI.w	#1, D0
	MOVE.b	D0, (A1)
	RTS
loc_0000563E:
	MOVE.w	$20(A2), D0
	LSR.w	#1, D0
	ANDI.w	#1, D0
	MOVE.b	D0, (A1)
	RTS
loc_0000564C:
	LEA	$FFFFC926.w, A0
loc_00005650:
	ADDQ.b	#1, (A0)
	CMPI.b	#$0F, (A0)
	BCC.b	loc_0000565C
	CLR.b	(A1)
	BRA.b	loc_00005660
loc_0000565C:
	MOVE.b	#1, (A1)
loc_00005660:
	CMPI.b	#$1E, (A0)
	BCS.b	loc_00005668
	CLR.b	(A0)
loc_00005668:
	RTS
loc_0000566A:
	LEA	$FFFFC927.w, A0
	BRA.b	loc_00005650
loc_00005670:
	BSR.w	loc_00005A1C	;Predicted (Offset array entry)
	BSR.w	loc_00005918
	BSR.b	loc_0000567E
	BRA.w	loc_00004E6A
loc_0000567E:
	TST.l	$FFFF823E
	BNE.b	loc_00005692
	LEA	$FFFFC8FA.w, A0
	ADDQ.w	#1, (A0)
	CMPI.w	#$00C0, (A0)
	BEQ.b	loc_00005694
loc_00005692:
	RTS
loc_00005694:
	CLR.w	(A0)
	MOVE.w	#$0090, D4
	BSR.b	loc_000056A0
	MOVE.w	#$0140, D4
loc_000056A0:
	ADD.w	$FFFFF622.w, D4
	MOVEQ	#$00000050, D5
	CLR.l	D0
	LEA	loc_000229B6, A3
	MOVEQ	#$00000010, D3
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	BSR.w	loc_000031E4
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_000056BE:
	BSR.w	loc_00005A78	;Predicted (Offset array entry)
	BSR.w	loc_00005918
	LEA	$FFFFB5ED, A1
loc_000056CC:
	BSR.w	loc_00005630
	BRA.w	loc_00004E6A
loc_000056D4:
	BSR.w	loc_00005AFA	;Predicted (Offset array entry)
	BSR.w	loc_00005918
	LEA	$FFFFB5F2, A1
	BRA.b	loc_000056CC
loc_000056E4:
	BSR.w	loc_00005B4A	;Predicted (Offset array entry)
	BRA.w	loc_00004E6A
loc_000056EC:
	BSR.w	loc_00005BD4	;Predicted (Offset array entry)
	BRA.w	loc_00004E6A
loc_000056F4:
	BSR.w	loc_00005C12	;Predicted (Offset array entry)
	BSR.b	loc_000056FE
	BRA.w	loc_00004E6A
loc_000056FE:
	TST.l	$FFFF823E
	BNE.b	loc_0000572C
	LEA	$FFFFC8FA.w, A0
	ADDQ.w	#1, (A0)
	CMPI.w	#$0180, (A0)
	BEQ.b	loc_0000572E
	CMPI.w	#$01F0, (A0)
	BEQ.b	loc_0000572E
	CMPI.w	#$05F0, (A0)
	BEQ.b	loc_00005752
	CMPI.w	#$0660, (A0)
	BEQ.b	loc_00005752
	CMPI.w	#$07E0, (A0)
	BCS.b	loc_0000572C
	CLR.w	(A0)
loc_0000572C:
	RTS
loc_0000572E:
	MOVE.l	loc_00096A9C, D0
	MOVEQ	#$00000040, D4
loc_00005736:
	MOVE.w	#$0084, D5
	ADDQ.l	#6, D0
	LEA	loc_000229C6, A3
	MOVEQ	#8, D3
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	BSR.w	loc_00003210
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00005752:
	MOVE.l	loc_00096D74, D0
	MOVE.w	#$0200, D4
	BRA.b	loc_00005736
loc_0000575E:
	BSR.w	loc_00005D42	;Predicted (Offset array entry)
	LEA	$FFFFB5ED, A1
	BSR.w	loc_0000563E
	BRA.w	loc_00004E6A
loc_00005770:
	BSR.w	loc_00005E4C	;Predicted (Offset array entry)
	LEA	$FFFFB5F1, A1
	BSR.w	loc_00005630
	BRA.w	loc_00004E6A
loc_00005782:
	BSR.w	loc_00005E94	;Predicted (Offset array entry)
	LEA	$FFFFB5ED, A1
	BSR.w	loc_0000563E
	TST.b	$FFFFC904.w
	BNE.b	loc_0000579A
	BRA.w	loc_00004E6A
loc_0000579A:
	SUBQ.b	#1, $FFFFC904.w
	TST.b	$14(A2)
	BEQ.b	loc_000057AE
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $A(A2)
loc_000057AE:
	RTS
loc_000057B0:
	BSR.w	loc_00005F26	;Predicted (Offset array entry)
	LEA	$FFFFB5F0, A1
	BSR.w	loc_0000563E
	BRA.w	loc_00004E6A
loc_000057C2:
	MOVE.w	$16(A2), D0	;Predicted (Offset array entry)
	LSR.w	#1, D0
	CMP.w	$E(A2), D0
	BCS.b	loc_000057D6
	MOVE.b	#1, $FFFFB5F5
loc_000057D6:
	BRA.w	loc_00004E6A
loc_000057DA:
	BSR.w	loc_00005F34	;Predicted (Offset array entry)
	BRA.w	loc_00004E6A
loc_000057E2:
	BSR.w	loc_00005A1C	;Predicted (Offset array entry)
	BSR.w	loc_00005918
	BRA.w	loc_00004E6A
loc_000057EE:
	BSR.w	loc_00005F92	;Predicted (Offset array entry)
	BRA.w	loc_00004E6A
loc_000057F6:
	BSR.w	loc_0000600E	;Predicted (Offset array entry)
	BRA.w	loc_00004E6A
loc_000057FE:
	BSR.w	loc_000060A8	;Predicted (Offset array entry)
	BSR.b	loc_00005808
	BRA.w	loc_00004E6A
loc_00005808:
	TST.l	$FFFF823E
	BNE.b	loc_00005824
	LEA	$FFFFC8FE.w, A0
	ADDQ.w	#1, (A0)
	CMPI.w	#$0300, (A0)
	BCC.w	loc_0000589A
	CMPI.w	#$0100, (A0)
	BEQ.b	loc_00005826
loc_00005824:
	RTS
loc_00005826:
	BSR.b	loc_0000582E
	BSR.b	loc_00005852
	BSR.b	loc_0000585E
	BRA.b	loc_0000586C
loc_0000582E:
	MOVE.l	loc_00096EA0, D0
	MOVEQ	#$00000058, D4
loc_00005836:
	MOVE.w	#$00D8, D5
loc_0000583A:
	ADDQ.l	#6, D0
	LEA	loc_00022956, A3
	MOVEQ	#8, D3
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	BSR.w	loc_00003210
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00005852:
	MOVE.l	loc_00096EA4, D0
	MOVE.w	#$0208, D4
	BRA.b	loc_00005836
loc_0000585E:
	MOVE.l	loc_00096EA8, D0
	MOVEQ	#$00000058, D4
	MOVE.w	#$0098, D5
	BRA.b	loc_0000583A
loc_0000586C:
	MOVE.l	loc_00096EAC, D0
	MOVE.w	#$0208, D4
	BRA.b	loc_0000583A
loc_00005878:
	BSR.w	loc_00006196	;Predicted (Offset array entry)
	BSR.b	loc_00005882
	BRA.w	loc_00004E6A
loc_00005882:
	TST.l	$FFFF823E
	BNE.b	loc_00005898
	LEA	$FFFFC900.w, A0
	ADDQ.w	#1, (A0)
	CMPI.w	#$0300, (A0)
	BCC.w	loc_0000589A
loc_00005898:
	RTS
loc_0000589A:
	TST.l	$FFFF823E
	BNE.b	loc_000058DA
	TST.b	$FFFF823C
	BEQ.b	loc_000058BA
	TST.b	$FFFFC902.w
	BNE.b	loc_000058BA
	MOVE.b	#1, $FFFFC902.w
	BSR.w	loc_00005826
loc_000058BA:
	LEA	$FFFFFB78.w, A0
	MOVE.w	#$0260, (A0)
	MOVE.w	#$0020, $2(A0)
	LEA	$FFFFC8FA.w, A0
	ADDQ.w	#1, (A0)
	CMPI.w	#$00A0, (A0)
	BEQ.b	loc_000058DC
	CMPI.w	#$0140, (A0)
	BEQ.b	loc_00005904
loc_000058DA:
	RTS
loc_000058DC:
	LEA	loc_000229B6, A3
loc_000058E2:
	MOVE.w	#$0090, D4
	BSR.b	loc_000058EC
	MOVE.w	#$0140, D4
loc_000058EC:
	ADD.w	$FFFFF622.w, D4
	MOVEQ	#$00000050, D5
	CLR.l	D0
	MOVEQ	#$00000010, D3
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	BSR.w	loc_000031E4
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00005904:
	CLR.w	(A0)
	TST.b	$FFFF823C
	BEQ.b	loc_00005916
	LEA	loc_00022966, A3
	BRA.b	loc_000058E2
loc_00005916:
	RTS
loc_00005918:
	TST.b	$1E(A2)
	BEQ.b	loc_00005924
	SUBQ.b	#1, $1E(A2)
	RTS
loc_00005924:
	LEA	loc_0002345E, A0
	MOVE.b	(A2), D0
loc_0000592C:
	CMP.b	(A0), D0
	BEQ.b	loc_00005934
	ADDQ.l	#6, A0
	BRA.b	loc_0000592C
loc_00005934:
	MOVEA.l	$2(A0), A0
	MOVE.w	$1C(A2), D0
loc_0000593C:
	MOVE.w	(A0,D0.w), D1
	ADDQ.w	#2, D0
	BTST.l	#$0F, D1
	BNE.b	loc_00005958
	BTST.l	#$0E, D1
	BNE.b	loc_00005968
	MOVE.w	D0, $1C(A2)
	MOVE.b	D1, $1E(A2)
	RTS
loc_00005958:
	ANDI.w	#$000F, D1
	LEA	$FFFFC928.w, A1
	MOVE.b	#1, (A1,D1.w)
	BRA.b	loc_0000593C
loc_00005968:
	ANDI.w	#$0FFF, D1
	MOVE.w	D1, D0
	BRA.b	loc_0000593C
loc_00005970:
	LEA	$FFFFB5EE, A5
	LEA	$FFFFC928.w, A4
	MOVEA.l	#$000059E2, A6
	BSR.w	loc_000059B6
	LEA	$FFFFC92A.w, A4
	MOVEA.l	#$000059E8, A6
	BSR.w	loc_000059B6
	LEA	$FFFFB5EF, A5
	LEA	$FFFFC929.w, A4
	MOVEA.l	#$000059FE, A6
	BSR.w	loc_000059B6
	LEA	$FFFFC92B.w, A4
	MOVEA.l	#$00005A04, A6
	BSR.w	loc_000059B6
	RTS
loc_000059B6:
	MOVE.b	(A4), D0
	ANDI.b	#$0F, D0
	BEQ.b	loc_000059D2
	ADDQ.b	#1, (A4)
	CMPI.b	#2, D0
	BEQ.b	loc_000059D4
	CMPI.b	#6, D0
	BEQ.b	loc_000059E0
	CMPI.b	#$0C, D0
	BEQ.b	loc_000059DA
loc_000059D2:
	RTS
loc_000059D4:
	MOVE.b	#1, (A5)
	RTS
loc_000059DA:
	CLR.b	(A5)
	CLR.b	(A4)
	RTS
loc_000059E0:
	JMP	(A6)
	; A6=59E2, 59E8, 59FE
loc_00005A1C:
	LEA	$FFFFB5ED, A5
	LEA	$FFFFC928.w, A4
	MOVEA.l	#$00005A2E, A6
	BRA.b	loc_000059B6
loc_00005A78:
	LEA	$FFFFB5EE, A5
	LEA	$FFFFC928.w, A4
	MOVEA.l	#$00005AC8, A6
	BSR.w	loc_000059B6
	LEA	$FFFFB5EF, A5
	LEA	$FFFFC929.w, A4
	MOVEA.l	#$00005ADC, A6
	BSR.w	loc_000059B6
	LEA	$FFFFB5F0, A5
	LEA	$FFFFC92A.w, A4
	MOVEA.l	#$00005AE6, A6
	BSR.w	loc_000059B6
	LEA	$FFFFB5F1, A5
	LEA	$FFFFC92B.w, A4
	MOVEA.l	#$00005AF0, A6
	BRA.w	loc_000059B6
loc_00005AFA:
	LEA	$FFFFB5F3, A5
	LEA	$FFFFC92C.w, A4
	MOVEA.l	#$00005AC8, A6
	BSR.w	loc_000059B6
	LEA	$FFFFB5F4, A5
	LEA	$FFFFC92D.w, A4
	MOVEA.l	#$00005ADC, A6
	BSR.w	loc_000059B6
	LEA	$FFFFB5F5, A5
	LEA	$FFFFC92E.w, A4
	MOVEA.l	#$00005AE6, A6
	BSR.w	loc_000059B6
	LEA	$FFFFB5F6, A5
	LEA	$FFFFC92F.w, A4
	MOVEA.l	#$00005AF0, A6
	BRA.w	loc_000059B6
loc_00005B4A:
	LEA	$FFFFB5ED, A1
	LEA	$FFFFC906.w, A3
	BSR.w	loc_0000564C
	MOVE.b	(A1), D0
	EORI.w	#1, D0
	MOVE.b	D0, $1(A1)
	ADDQ.w	#1, (A3)
	CMPI.w	#$01C0, (A3)
	BCS.b	loc_00005B6C
	CLR.w	(A3)
loc_00005B6C:
	MOVE.w	(A3), D4
	CMPI.w	#$00A0, D4
	BCS.b	loc_00005B88
	CMPI.w	#$0160, D4
	BCC.b	loc_00005B7C
	RTS
loc_00005B7C:
	ADDQ.b	#1, $2(A1)
	ANDI.b	#7, $2(A1)
	RTS
loc_00005B88:
	ADDQ.b	#1, $2(A1)
	ANDI.b	#1, $2(A1)
	ANDI.w	#$001F, D4
	CMPI.w	#1, D4
	BEQ.b	loc_00005BAA
	CMPI.w	#$000B, D4
	BEQ.b	loc_00005BB4
	CMPI.w	#$0015, D4
	BEQ.b	loc_00005BBA
	RTS
loc_00005BAA:
	BSR.b	loc_00005BC0
loc_00005BAC:
	ANDI.w	#$001F, D2
	BRA.w	loc_0000534E
loc_00005BB4:
	BSR.b	loc_00005BC0
	SUBQ.w	#1, D2
	BRA.b	loc_00005BAC
loc_00005BBA:
	BSR.b	loc_00005BC0
	ADDQ.w	#1, D2
	BRA.b	loc_00005BAC
loc_00005BC0:
	MOVE.w	$6(A2), D0
	ADDI.w	#$0014, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	BRA.w	loc_000054C4
loc_00005BD4:
	LEA	$FFFFB5F0, A1
	LEA	$FFFFC916.w, A3
	BSR.w	loc_0000566A
	MOVE.b	(A1), D0
	EORI.w	#1, D0
	MOVE.b	D0, $1(A1)
	ADDQ.w	#1, (A3)
	CMPI.w	#$01C0, (A3)
	BCS.b	loc_00005BF8
	CLR.w	(A3)
	RTS
loc_00005BF8:
	MOVE.w	(A3), D4
	CMPI.w	#$00E0, D4
	BCS.b	loc_00005C08
	CMPI.w	#$0180, D4
	BCS.b	loc_00005B88
	RTS
loc_00005C08:
	CMPI.w	#$0080, D4
	BCC.w	loc_00005B7C
	RTS
loc_00005C12:
	LEA	$FFFFC906.w, A3
	BSR.w	loc_00005CEC
	ADDQ.b	#1, $4(A3)
	MOVE.b	$4(A3), D4
	CMPI.b	#$B4, D4
	BCC.b	loc_00005C30
	CMPI.b	#$64, D4
	BCC.b	loc_00005C36
	RTS
loc_00005C30:
	CLR.b	$4(A3)
	RTS
loc_00005C36:
	CMPI.b	#$77, D4
	BEQ.b	loc_00005C3E
	BRA.b	loc_00005C7E
loc_00005C3E:
	MOVE.w	$FFFFB28E, D4
	CMPI.w	#$00C0, D4
	BCS.b	loc_00005C76
	CMPI.w	#$0110, D4
	BCC.b	loc_00005C76
	SUBI.w	#$00C0, D4
	LSR.w	#4, D4
	MOVE.b	D4, $5(A3)
	CLR.b	$6(A3)
	CLR.b	$7(A3)
	MOVEQ	#1, D0
	CMPI.w	#$00F4, $FFFFB28E
	BCC.b	loc_00005C70
	MOVEQ	#-1, D0
loc_00005C70:
	MOVE.b	D0, $8(A3)
	RTS
loc_00005C76:
	MOVE.b	#$FF, $5(A3)
	RTS
loc_00005C7E:
	CMPI.b	#6, $6(A3)
	BEQ.b	loc_00005C90
	TST.b	$7(A3)
	BEQ.b	loc_00005C92
	SUBQ.b	#1, $7(A3)
loc_00005C90:
	RTS
loc_00005C92:
	MOVE.b	$5(A3), D4
	BMI.b	loc_00005CA0
	CMPI.b	#6, D4
	BCC.b	loc_00005CA8
	BRA.b	loc_00005CAA
loc_00005CA0:
	MOVE.b	D4, D0
	MOVEQ	#6, D4
	ADD.b	D0, D4
	BRA.b	loc_00005CAA
loc_00005CA8:
	SUBQ.b	#6, D4
loc_00005CAA:
	EXT.w	D4
	ADD.w	D4, D4
	BSR.b	loc_00005CC4
	MOVE.b	$8(A3), D0
	ADD.b	D0, $5(A3)
	ADDQ.b	#1, $6(A3)
	MOVE.b	#$0A, $7(A3)
	RTS
loc_00005CC4:
	MOVE.w	$6(A2), D0
	ADD.w	loc_00005CE0(PC,D4.w), D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0038, D1
	CLR.l	D2
	MOVE.l	#$00028000, D3
	BRA.w	loc_00006EF0
loc_00005CE0:
loc_00005CEC:
	ADDQ.b	#1, (A3)
	CMPI.b	#$40, (A3)
	BCS.b	loc_00005CF8
	CLR.b	(A3)
	BRA.b	loc_00005CFA
loc_00005CF8:
	RTS
loc_00005CFA:
	MOVE.b	$1(A3), D0
	ADDQ.b	#1, D0
	ANDI.b	#3, D0
	MOVE.b	D0, $1(A3)
	CMPI.b	#0, D0
	BEQ.b	loc_00005D1E
	CMPI.b	#1, D0
	BEQ.b	loc_00005D30
	CMPI.b	#2, D0
	BEQ.b	loc_00005D30
	BRA.b	loc_00005D1Eloc_00005D1E:
	MOVE.w	$6(A2), D0
	ADDI.w	#$000C, D0
	MOVE.w	$A(A2), D1
	ADDQ.w	#4, D1
	BRA.w	loc_0000628A
loc_00005D30:
	MOVE.w	$6(A2), D0
	ADDI.w	#$005C, D0
	MOVE.w	$A(A2), D1
	ADDQ.w	#4, D1
	BRA.w	loc_0000628A
loc_00005D42:
	LEA	$FFFFC906.w, A3
	LEA	$FFFFB5EE, A1
	ADDQ.w	#1, (A3)
	CMPI.w	#$00B4, (A3)
	BCS.b	loc_00005D7E
	CLR.w	(A3)
	RTS
loc_00005D58:
	MOVE.b	#1, (A1)
	RTS
loc_00005D5E:
	CLR.b	(A1)
	RTS
loc_00005D62:
	MOVE.b	#1, $1(A1)
	RTS
loc_00005D6A:
	CLR.b	$1(A1)
	RTS
loc_00005D70:
	MOVE.b	#1, $2(A1)
	RTS
loc_00005D78:
	CLR.b	$2(A1)
	RTS
loc_00005D7E:
	CMPI.w	#5, (A3)
	BEQ.b	loc_00005D58
	CMPI.w	#$000A, (A3)
	BEQ.w	loc_00005DF4
	CMPI.w	#$000D, (A3)
	BEQ.w	loc_00005DFE
	CMPI.w	#$0010, (A3)
	BEQ.w	loc_00005DFE
	CMPI.w	#$0013, (A3)
	BEQ.w	loc_00005DFE
	CMPI.w	#$0018, (A3)
	BEQ.b	loc_00005D5E
	CMPI.w	#$0031, (A3)
	BEQ.b	loc_00005D62
	CMPI.w	#$0036, (A3)
	BEQ.b	loc_00005E0C
	CMPI.w	#$0039, (A3)
	BEQ.b	loc_00005E16
	CMPI.w	#$003C, (A3)
	BEQ.b	loc_00005E16
	CMPI.w	#$003F, (A3)
	BEQ.b	loc_00005E16
	CMPI.w	#$0044, (A3)
	BEQ.b	loc_00005D6A
	CMPI.w	#$005D, (A3)
	BEQ.b	loc_00005D70
	CMPI.w	#$0062, (A3)
	BEQ.b	loc_00005E24
	CMPI.w	#$0065, (A3)
	BEQ.b	loc_00005E2E
	CMPI.w	#$0068, (A3)
	BEQ.b	loc_00005E2E
	CMPI.w	#$006B, (A3)
	BEQ.b	loc_00005E2E
	CMPI.w	#$0070, (A3)
	BEQ.b	loc_00005D78
	RTS
loc_00005DF4:
	BSR.b	loc_00005E04
	BSR.w	loc_000054C4
	MOVE.w	D2, $4(A3)
loc_00005DFE:
	BSR.b	loc_00005E04
	BRA.w	loc_0000534E
loc_00005E04:
	MOVEQ	#4, D2
	MOVEQ	#$00000024, D3
	MOVEQ	#4, D4
	BRA.b	loc_00005E3A
loc_00005E0C:
	BSR.b	loc_00005E1C
	BSR.w	loc_000054C4
	MOVE.w	D2, $6(A3)
loc_00005E16:
	BSR.b	loc_00005E1C
	BRA.w	loc_0000534E
loc_00005E1C:
	MOVEQ	#4, D2
	MOVEQ	#4, D3
	MOVEQ	#6, D4
	BRA.b	loc_00005E3A
loc_00005E24:
	BSR.b	loc_00005E34
	BSR.w	loc_000054C4
	MOVE.w	D2, $8(A3)
loc_00005E2E:
	BSR.b	loc_00005E34
	BRA.w	loc_0000534E
loc_00005E34:
	MOVEQ	#$00000024, D2
	MOVEQ	#$00000014, D3
	MOVEQ	#8, D4
loc_00005E3A:
	MOVE.w	$6(A2), D0
	ADD.w	D2, D0
	MOVE.w	$A(A2), D1
	ADD.w	D3, D1
	MOVE.w	(A3,D4.w), D2
	RTS
loc_00005E4C:
	LEA	$FFFFC916.w, A3
	LEA	$FFFFB5F2, A1
	ADDQ.w	#1, (A3)
	CMPI.w	#$0046, (A3)
	BCS.b	loc_00005E62
	CLR.w	(A3)
	RTS
loc_00005E62:
	CMPI.w	#$001E, (A3)
	BEQ.b	loc_00005E76
	CMPI.w	#$0023, (A3)
	BEQ.b	loc_00005E80
	CMPI.w	#$0028, (A3)
	BEQ.b	loc_00005E7C
	RTS
loc_00005E76:
	MOVE.b	#1, (A1)
	RTS
loc_00005E7C:
	CLR.b	(A1)
	RTS
loc_00005E80:
	MOVE.w	$6(A2), D0
	ADDI.w	#$001C, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	BRA.w	loc_000062B8
loc_00005E94:
	LEA	$FFFFB5ED, A1
	LEA	$FFFFC906.w, A3
loc_00005E9E:
	MOVEQ	#1, D0
	BSR.w	loc_00005EC4
	MOVEQ	#2, D0
	BSR.w	loc_00005EC4
	ADDQ.w	#1, (A3)
	CMPI.w	#$0041, (A3)
	BCS.b	loc_00005EB4
	CLR.w	(A3)
loc_00005EB4:
	MOVE.w	(A3), D4
	CMPI.w	#1, D4
	BEQ.b	loc_00005ED6
	CMPI.w	#$0021, D4
	BEQ.b	loc_00005ED6
	RTS
loc_00005EC4:
	ADDQ.b	#1, (A1,D0.w)
	CMPI.b	#3, (A1,D0.w)
	BCS.b	loc_00005ED4
	CLR.b	(A1,D0.w)
loc_00005ED4:
	RTS
loc_00005ED6:
	MOVE.w	$6(A2), D0
	ADDI.w	#$0010, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	BSR.w	loc_0000534A
	MOVE.w	$6(A2), D0
	ADDI.w	#$0018, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	BSR.w	loc_0000534A
	MOVE.w	$6(A2), D0
	ADDI.w	#$0010, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0024, D1
	BSR.w	loc_0000534A
	MOVE.w	$6(A2), D0
	ADDI.w	#$0018, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0024, D1
	BRA.w	loc_0000534A
loc_00005F26:
	LEA	$FFFFB5F0, A1
	LEA	$FFFFC916.w, A3
	BRA.w	loc_00005E9E
loc_00005F34:
	LEA	$FFFFC906.w, A3
	LEA	$FFFFB5ED, A1
	ADDQ.w	#1, (A3)
	CMPI.w	#$0046, (A3)
	BCS.b	loc_00005F4A
	CLR.w	(A3)
	RTS
loc_00005F4A:
	CMPI.w	#$001E, (A3)
	BEQ.b	loc_00005F5E
	CMPI.w	#$0023, (A3)
	BEQ.b	loc_00005F6C
	CMPI.w	#$0028, (A3)
	BEQ.b	loc_00005F66
	RTS
loc_00005F5E:
	MOVE.b	#1, $1(A1)
	RTS
loc_00005F66:
	CLR.b	$1(A1)
	RTS
loc_00005F6C:
	MOVE.w	$6(A2), D0
	ADDQ.w	#4, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	BSR.w	loc_00006258
	MOVE.w	$6(A2), D0
	ADDI.w	#$0034, D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0014, D1
	BRA.w	loc_00006258
loc_00005F92:
	LEA	$FFFFC906.w, A3
	LEA	$FFFFB5ED, A1
	ADDQ.w	#1, (A3)
	CMPI.w	#$01CC, (A3)
	BCS.b	loc_00005FA8
	CLR.w	(A3)
	RTS
loc_00005FA8:
	CMPI.w	#$0082, (A3)
	BCS.b	loc_00005FC6
	CMPI.w	#$0118, (A3)
	BCC.b	loc_00005FC6
	ADDQ.b	#1, (A1)
	CMPI.w	#$00B4, (A3)
	BCC.b	loc_00005FC2
	ANDI.b	#7, (A1)
	BRA.b	loc_00005FC6
loc_00005FC2:
	ANDI.b	#1, (A1)
loc_00005FC6:
	MOVEQ	#9, D5
	MOVE.w	#$00B4, D4
loc_00005FCC:
	CMP.w	(A3), D4
	BEQ.b	loc_00005FDA
	ADDI.w	#$000A, D4
	DBF	D5, loc_00005FCC
loc_00005FD8:
	RTS
loc_00005FDA:
	LEA	loc_00006008(PC), A4
	MOVEQ	#5, D6
loc_00005FE0:
	ADDQ.b	#1, (A1)
	ANDI.b	#1, (A1)
	ADDQ.w	#1, $2(A3)
	MOVE.w	$2(A3), D0
	CMP.w	D6, D0
	BCS.b	loc_00005FF8
	CLR.w	D0
	MOVE.w	D0, $2(A3)
loc_00005FF8:
	MOVE.b	(A4,D0.w), D4
	CMPI.b	#$81, D4
	BEQ.b	loc_00005FD8
	EXT.w	D4
	BRA.w	loc_00006064
loc_00006008:
loc_0000600E:
	LEA	$FFFFC916.w, A3
	LEA	$FFFFB5EE, A1
	ADDQ.w	#1, (A3)
	MOVE.w	(A3), D3
	CMPI.w	#$01CC, D3
	BCS.b	loc_00006026
	CLR.w	(A3)
	RTS
loc_00006026:
	CMPI.w	#$012C, D3
	BCS.b	loc_00006044
	CMPI.w	#$01AE, D3
	BCC.b	loc_00006044
	ADDQ.b	#1, (A1)
	CMPI.w	#$015E, D3
	BCC.b	loc_00006040
	ANDI.b	#7, (A1)
	BRA.b	loc_00006044
loc_00006040:
	ANDI.b	#1, (A1)
loc_00006044:
	MOVEQ	#7, D5
	MOVE.w	#$015E, D4
loc_0000604A:
	CMP.w	D3, D4
	BEQ.b	loc_00006058
	ADDI.w	#$000A, D4
	DBF	D5, loc_0000604A
	RTS
loc_00006058:
	LEA	loc_00006060(PC), A4
	MOVEQ	#4, D6
	BRA.b	loc_00005FE0
loc_00006060:
loc_00006064:
	MOVE.w	D4, -(A7)
	MOVE.w	$6(A2), D0
	MOVEQ	#$00000018, D4
	ADD.w	D4, D0
	MOVE.w	$A(A2), D1
	ADD.w	D4, D1
	BSR.w	loc_000054D4
	MOVE.w	(A7)+, D4
	BSR.w	loc_000061A4
	MOVE.w	$6(A2), D0
	MOVEQ	#4, D4
	ADD.w	D4, D0
	MOVE.w	$A(A2), D1
	ADD.w	D4, D1
	BSR.w	loc_00005468
	ADDI.w	#$0020, D0
	BSR.w	loc_00005468
	ADDI.w	#$0020, D1
	BSR.w	loc_00005468
	SUBI.w	#$0020, D0
	BRA.w	loc_00005468
loc_000060A8:
	LEA	$FFFFC906.w, A3
	MOVE.w	#$000C, $4(A3)
loc_000060B2:
	ADDQ.w	#1, (A3)
	CMPI.w	#$00CB, (A3)
	BCS.b	loc_000060BE
	CLR.w	(A3)
	RTS
loc_000060BE:
	BSR.w	loc_00006134
	CMPI.w	#9, (A3)
	BEQ.b	loc_000060E8
	CMPI.w	#$000A, (A3)
	BEQ.b	loc_000060F4
	CMPI.w	#$0014, (A3)
	BEQ.b	loc_000060F8
	CMPI.w	#$001E, (A3)
	BEQ.b	loc_000060FC
	CMPI.w	#$0028, (A3)
	BEQ.b	loc_00006100
	CMPI.w	#$0032, (A3)
	BEQ.b	loc_00006104
	RTS
loc_000060E8:
	BSR.b	loc_00006122
	BSR.w	loc_000054C4
	MOVE.w	D2, $2(A3)
	RTS
loc_000060F4:
	MOVEQ	#6, D4
	BRA.b	loc_0000610A
loc_000060F8:
	MOVEQ	#3, D4
	BRA.b	loc_0000610A
loc_000060FC:
	MOVEQ	#0, D4
	BRA.b	loc_0000610A
loc_00006100:
	MOVEQ	#-3, D4
	BRA.b	loc_0000610A
loc_00006104:
	MOVEQ	#-6, D4
	BRA.b	loc_0000610Aloc_0000610A:
	CMPI.b	#$2E, (A2)
	BEQ.b	loc_00006112
	NEG.w	D4
loc_00006112:
	MOVE.w	$2(A3), D2
	BSR.b	loc_00006122
	ADD.w	D4, D2
	ANDI.w	#$001F, D2
	BRA.w	loc_0000534E
loc_00006122:
	MOVE.w	$6(A2), D0
	ADD.w	$4(A3), D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$000C, D1
	RTS
loc_00006134:
	CMPI.w	#$000A, (A3)
	BEQ.b	loc_00006154
	CMPI.w	#$001A, (A3)
	BEQ.b	loc_00006164
	CMPI.w	#$006A, (A3)
	BEQ.b	loc_00006154
	CMPI.w	#$0072, (A3)
	BEQ.b	loc_0000615C
	CMPI.w	#$007A, (A3)
	BEQ.b	loc_00006164
	RTS
loc_00006154:
	MOVEQ	#4, D4
	BSR.b	loc_0000616E
	MOVEQ	#6, D4
	BRA.b	loc_0000616E
loc_0000615C:
	MOVEQ	#2, D4
	BSR.b	loc_0000616E
	MOVEQ	#8, D4
	BRA.b	loc_0000616E
loc_00006164:
	MOVEQ	#0, D4
	BSR.b	loc_0000616E
	MOVEQ	#$0000000A, D4
	BRA.b	loc_0000616Eloc_0000616E:
	MOVE.w	$6(A2), D0
	ADD.w	loc_0000618A(PC,D4.w), D0
	MOVE.w	$A(A2), D1
	ADDI.w	#$0038, D1
	CLR.l	D2
	MOVE.l	#$00028000, D3
	BRA.w	loc_00006EF0
loc_0000618A:
loc_00006196:
	LEA	$FFFFC916.w, A3
	MOVE.w	#$001C, $4(A3)
	BRA.w	loc_000060B2
loc_000061A4:
	MOVEQ	#$0000000C, D3
	ADD.w	D4, D2
	BPL.b	loc_000061B0
	EXG	D2, D3
	SUB.w	D3, D2
	BRA.b	loc_000061B6
loc_000061B0:
	CMP.w	D3, D2
	BCS.b	loc_000061B6
	SUB.w	D3, D2
loc_000061B6:
	RTS
loc_00006258:
	MOVEM.w	D1/D0, -(A7)
	BSR.w	loc_000054D4
loc_00006260:
	MOVEM.w	(A7), D0/D1
	BSR.w	loc_00005468
	MOVEQ	#1, D0
	BSR.w	loc_00006322
	MOVEM.w	(A7), D0/D1
	BSR.w	loc_00005468
	MOVEQ	#2, D0
	BSR.w	loc_00006314
	MOVEM.w	(A7), D0/D1
	BSR.w	loc_00005468
	MOVEM.w	(A7)+, D0/D1
	RTS
loc_0000628A:
	MOVEM.w	D1/D0, -(A7)
	BSR.w	loc_000054D4
loc_00006292:
	MOVE.w	D2, -(A7)
	MOVEQ	#2, D0
	BSR.w	loc_00006322
	MOVEM.w	$2(A7), D0/D1
	BSR.w	loc_00005468
	MOVEQ	#4, D0
	BSR.w	loc_00006314
	MOVEM.w	$2(A7), D0/D1
	BSR.w	loc_00005468
	MOVE.w	(A7)+, D2
	BRA.b	loc_00006260
loc_000062B8:
	MOVEM.w	D1/D0, -(A7)
	BSR.w	loc_000054D4
	MOVE.w	D2, -(A7)
	MOVEQ	#3, D0
	BSR.w	loc_00006322
	MOVEM.w	$2(A7), D0/D1
	BSR.w	loc_00005468
	MOVEQ	#6, D0
	BSR.w	loc_00006314
	MOVEM.w	$2(A7), D0/D1
	BSR.w	loc_00005468
	MOVE.w	(A7)+, D2
	BRA.b	loc_00006292
loc_00006314:
	ADD.w	D0, D2
	CMPI.w	#$000C, D2
	BCS.b	loc_00006320
	SUBI.w	#$000C, D2
loc_00006320:
	RTS
loc_00006322:
	SUB.w	D0, D2
	BPL.b	loc_0000632C
	MOVE.w	D2, D0
	MOVEQ	#$0000000C, D2
	ADD.w	D0, D2
loc_0000632C:
	RTS
loc_0000632E:
	; @ called by rot
	; > D0,D1=dx,dy
	MOVEM.l	A1/A0, -(A7)
	TST.w	D0
	BMI.b	loc_00006342
	TST.w	D1
	BMI.b	loc_00006350
	LEA	loc_000063D4, A0
	BRA.b	loc_00006364
loc_00006342:
	TST.w	D1
	BMI.b	loc_0000635A
	NEG.w	D0
	LEA	loc_000063EF, A0
	BRA.b	loc_00006364
loc_00006350:
	NEG.w	D1
	LEA	loc_000063DD, A0
	BRA.b	loc_00006364
loc_0000635A:
	NEG.w	D0
	NEG.w	D1
	LEA	loc_000063E6, A0
loc_00006364:
	ANDI.l	#$0000FFFF, D1
	LSL.l	#8, D1
	LSL.l	#5, D1
	TST.w	D0
	BNE.b	loc_00006374
	MOVEQ	#1, D0
loc_00006374:
	DIVU.w	D0, D1
	BVC.w	loc_0000637E
	MOVE.w	#$FFFE, D1
loc_0000637E:
	LEA	loc_000063C4, A1
	CLR.w	D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000063B6
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000063B6
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000063B6
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000063B6
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000063B6
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000063B6
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000063B6
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000063B6
	ADDQ.w	#1, D2
loc_000063B6:
	MOVE.b	(A0,D2.w), D2
	ANDI.w	#$001F, D2
	MOVEM.l	(A7)+, A0/A1
	RTS
loc_000063C4:
loc_000063D4:
loc_000063DD:
loc_000063E6:
loc_000063EF:
loc_000063F8:
loc_000064F8:
loc_000065F8:
loc_00006618:
	MOVEM.l	A1/A0, -(A7)
	TST.w	D0
	BMI.w	loc_00006632
	TST.w	D1
	BMI.w	loc_00006644
	LEA	loc_000066AA, A0
	BRA.w	loc_0000665A
loc_00006632:
	TST.w	D1
	BMI.w	loc_00006650
	NEG.w	D0
	LEA	loc_000066B9, A0
	BRA.w	loc_0000665A
loc_00006644:
	NEG.w	D1
	LEA	loc_000066AF, A0
	BRA.w	loc_0000665A
loc_00006650:
	NEG.w	D0
	NEG.w	D1
	LEA	loc_000066B4, A0
loc_0000665A:
	ANDI.l	#$0000FFFF, D1
	LSL.l	#8, D1
	LSL.l	#5, D1
	TST.w	D0
	BNE.b	loc_0000666A
	MOVEQ	#1, D0
loc_0000666A:
	DIVU.w	D0, D1
	BVC.w	loc_00006674
	MOVE.w	#$FFFE, D1
loc_00006674:
	LEA	loc_000066A2, A1
	CLR.w	D2
	CMP.w	(A1)+, D1
	BCS.b	loc_00006694
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_00006694
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_00006694
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_00006694
	ADDQ.w	#1, D2
loc_00006694:
	MOVE.b	(A0,D2.w), D2
	ANDI.w	#$000F, D2
	MOVEM.l	(A7)+, A0/A1
	RTS
loc_000066A2:
loc_000066AA:
loc_000066AF:
loc_000066B4:
loc_000066B9:
loc_000066BE:
loc_0000673E:
loc_0000677E:
	MOVEM.l	A1/A0, -(A7)
	TST.w	D0
	BMI.w	loc_00006798
	TST.w	D1
	BMI.w	loc_000067AA
	LEA	loc_00006808, A0
	BRA.w	loc_000067C0
loc_00006798:
	TST.w	D1
	BMI.w	loc_000067B6
	NEG.w	D0
	LEA	loc_00006814, A0
	BRA.w	loc_000067C0
loc_000067AA:
	NEG.w	D1
	LEA	loc_0000680C, A0
	BRA.w	loc_000067C0
loc_000067B6:
	NEG.w	D0
	NEG.w	D1
	LEA	loc_00006810, A0
loc_000067C0:
	ANDI.l	#$0000FFFF, D1
	LSL.l	#8, D1
	LSL.l	#5, D1
	TST.w	D0
	BNE.b	loc_000067D0
	MOVEQ	#1, D0
loc_000067D0:
	DIVU.w	D0, D1
	BVC.w	loc_000067DA
	MOVE.w	#$FFFE, D1
loc_000067DA:
	LEA	loc_00006802, A1
	CLR.w	D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000067F4
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000067F4
	ADDQ.w	#1, D2
	CMP.w	(A1)+, D1
	BCS.b	loc_000067F4
	ADDQ.w	#1, D2
loc_000067F4:
	MOVE.b	(A0,D2.w), D2
	ANDI.w	#$000F, D2
	MOVEM.l	(A7)+, A0/A1
	RTS
loc_00006802:
loc_00006808:
loc_0000680C:
loc_00006810:
loc_00006814:
loc_00006818:
loc_00006878:
	MOVE.l	A0, -(A7)
	LEA	loc_000068C2, A0
	BRA.w	loc_0000688C
loc_00006884:
	MOVE.l	A0, -(A7)
	LEA	loc_000068C4, A0
loc_0000688C:
	EXT.l	D0
	DIVS.w	#$0168, D0
	SWAP	D0
	MOVE.w	D0, D2
	TST.w	D0
	BPL.b	loc_0000689C
	NEG.w	D2
loc_0000689C:
	MOVE.w	D2, D3
	CMPI.w	#$00B4, D2
	BCS.b	loc_000068A8
	SUBI.w	#$00B4, D2
loc_000068A8:
	LSL.w	#2, D2
	MOVE.w	(A0,D2.w), D1
	TST.w	D0
	BPL.b	loc_000068B4
	NEG.w	D1
loc_000068B4:
	CMPI.w	#$00B4, D3
	BCS.b	loc_000068BC
	NEG.w	D1
loc_000068BC:
	EXT.l	D1
	MOVEA.l	(A7)+, A0
	RTS
loc_000068C2:
loc_000068C4:
loc_00006E62:
	LEA	$FFFFC93A.w, A0
	MOVEQ	#$00000014, D7
loc_00006E68:
	CLR.b	(A0)
	ADDA.w	#$0018, A0
	DBF	D7, loc_00006E68
	RTS
loc_00006E74:
	MOVEM.w	D7/D6/D5/D4/D1/D0, -(A7)
	TST.w	$FFFFF61A.w
	BNE.b	loc_00006EC0
	CMPI.w	#1, $FFFFB292
	BEQ.b	loc_00006EC0
	ADDQ.w	#4, D0
	ADDQ.w	#4, D1
	MOVE.w	$FFFFF622.w, D5
	MOVE.w	$FFFFB28E, D6
	ADD.w	D5, D6
	MOVE.w	$FFFFB290, D7
	MOVE.w	D6, D4
	SUBQ.w	#8, D4
	CMP.w	D0, D4
	BCC.b	loc_00006ECC
	MOVE.w	D6, D4
	ADDI.w	#$0028, D4
	CMP.w	D0, D4
	BCS.b	loc_00006ECC
	MOVE.w	D7, D4
	CMP.w	D1, D4
	BCC.b	loc_00006ECC
	MOVE.w	D7, D4
	ADDI.w	#$0030, D4
	CMP.w	D1, D4
	BCS.b	loc_00006ECC
loc_00006EC0:
	MOVEM.w	(A7)+, D0/D1/D4/D5/D6/D7
	ADDQ.l	#4, A7
	ORI	#1, CCR
	RTS
loc_00006ECC:
	MOVE.w	D0, D4
	SUB.w	D5, D4
	CMPI.w	#$0090, D4
	BCS.b	loc_00006EC0
	CMPI.w	#$0170, D4
	BCC.b	loc_00006EC0
	MOVE.w	D1, D4
	CMPI.w	#$0080, D4
	BCS.b	loc_00006EC0
	CMPI.w	#$0150, D4
	BCC.b	loc_00006EC0
	MOVEM.w	(A7)+, D0/D1/D4/D5/D6/D7
	RTS
loc_00006EF0:
	BSR.b	loc_00006E74
	MOVEM.l	A3/D7/D4/D3/D2, -(A7)
	LEA	$FFFFC93A.w, A3
	MOVEQ	#$00000018, D4
	MOVEQ	#$00000013, D7
loc_00006EFE:; @ Loop though bullets array
	TST.b	(A3)
	BEQ.b	loc_00006F12
	ADDA.w	D4, A3
	DBF	D7, loc_00006EFE
loc_00006F08:
	MOVEM.l	(A7)+, D2/D3/D4/D7/A3
	ANDI	#$FE, CCR
	RTS
loc_00006F12: ; @ Enemy bullet shoot
	CLR.w	D5
	MOVE.b	$FFFFB2A0, D5 ; D5=Difficulty level (0,7)
	ADD.w	D5, D5 ; D5*=2
	MOVE.w	loc_00006F6A(PC,D5.w), D5 ; D5=bullet speed from table
	MOVE.l	D2, D4
	DIVS.w	#$0064, D4
	MULS.w	D5, D4
	ADD.l	D4, D2
	MOVE.l	D3, D4
	DIVS.w	#$0064, D4
	MULS.w	D5, D4
	ADD.l	D4, D3
	MOVE.b	#1, (A3)
	MOVE.w	D0, $4(A3)
	MOVE.w	D1, $8(A3)
	MOVE.l	D2, $C(A3)
	MOVE.l	D3, $10(A3)
	CLR.w	$2(A3)
	CLR.w	D7
	MOVE.b	(A2), D7
	ADD.w	D7, D7
	ADD.w	D7, D7
	ADD.w	D7, D7
	LEA	loc_0002329E, A3
	TST.b	(A3,D7.w)
	BPL.b	loc_00006F68
	MOVEQ	#2, D1
	BSR.w	loc_00000B08
loc_00006F68:
	BRA.b	loc_00006F08
loc_00006F6A:
loc_00006F7A: ; @ Enemy bullets subroutine
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
	MOVE.l	$FFFF823E, D3
	MOVE.w	$FFFFF622.w, D4
	LEA	$FFFFC93A.w, A2
	MOVEQ	#$00000013, D7
loc_00006F96:
	TST.b	(A2)
	BEQ.w	loc_00007034
	BTST.b	#0, $3(A2)
	BEQ.b	loc_00006FCC
	MOVE.w	$4(A2), D0
	SUB.w	D4, D0
	CMPI.w	#$0078, D0
	BCS.b	loc_00006FC6
	CMPI.w	#$0180, D0
	BCC.b	loc_00006FC6
	CMPI.w	#$0078, $8(A2)
	BCS.b	loc_00006FC6
	CMPI.w	#$0160, $8(A2)
	BCS.b	loc_00006FCC
loc_00006FC6:
	CLR.b	(A2)
	BRA.w	loc_00007034
loc_00006FCC: ; @ Enemy bullets
	TST.w	$FFFFB6EC
	BNE.b	loc_00006FE6
	MOVE.l	$C(A2), D0 ; A2=C93A
	ADD.l	D0, $4(A2)
	MOVE.l	$10(A2), D0
	ADD.l	D3, D0
	ADD.l	D0, $8(A2)
loc_00006FE6:
	MOVE.w	#$A64F, D5
	MOVE.w	$2(A2), D0
	CMPI.w	#2, D0
	BCS.b	loc_0000701C
	LSR.b	#3, D0
	ANDI.b	#3, D0
	BEQ.b	loc_00007006
	SUBQ.b	#1, D0
	BEQ.b	loc_0000700C
	SUBQ.b	#1, D0
	BEQ.b	loc_00007012
	BRA.b	loc_00007018
loc_00007006:
	MOVE.w	#$A653, D5
	BRA.b	loc_0000701C
loc_0000700C:
	MOVE.w	#$AE53, D5
	BRA.b	loc_0000701C
loc_00007012:
	MOVE.w	#$BE53, D5
	BRA.b	loc_0000701C
loc_00007018:
	MOVE.w	#$B653, D5
loc_0000701C:
	MOVE.w	$8(A2), (A1)+
	CLR.b	(A1)+
	MOVE.b	D6, (A1)+
	MOVE.w	D5, (A1)+
	MOVE.w	$4(A2), D0
	SUB.w	D4, D0
	MOVE.w	D0, (A1)+
	ADDQ.b	#1, D6
	ADDQ.w	#1, $2(A2)
loc_00007034:
	ADDA.w	#$0018, A2
	DBF	D7, loc_00006F96
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
	RTS
loc_0000704A:
	MOVEM.l	A3/D7/D6, -(A7)
	MOVEQ	#$00000018, D6
	LEA	$FFFFCB1C.w, A3
	MOVEQ	#$0000000F, D7
loc_00007056:
	TST.b	(A3)
	BEQ.b	loc_00007066
	ADDA.w	D6, A3
	DBF	D7, loc_00007056
loc_00007060:
	MOVEM.l	(A7)+, D6/D7/A3
	RTS
loc_00007066:
	MOVE.b	D2, (A3)
	MOVE.b	#$20, $1(A3)
	MOVE.w	D0, $4(A3)
	MOVE.w	D1, $8(A3)
	CLR.w	$2(A3)
	MOVE.l	A2, $C(A3)
	BRA.b	loc_00007060
loc_00007080:
	MOVEM.l	A2/D7, -(A7)
	MOVE.l	A2, $FFFFCC9E.w
	LEA	$FFFFCB1C.w, A2
	MOVEQ	#$0000000F, D7
loc_0000708E:
	TST.b	(A2)
	BEQ.b	loc_000070A6
	CMPI.b	#9, (A2)
	BEQ.b	loc_000070A6
	ADDA.w	#$0018, A2
	DBF	D7, loc_0000708E
loc_000070A0:
	MOVEM.l	(A7)+, D7/A2
	RTS
loc_000070A6:
	CMPI.b	#$0B, D2
	BNE.b	loc_000070B6
	BTST.b	#0, $FFFFCC9D.w
	BEQ.b	loc_000070B6
	MOVEQ	#$0000000C, D2
loc_000070B6:
	MOVE.b	D2, (A2)
	MOVE.b	D3, $1(A2)
	MOVE.w	D0, $4(A2)
	MOVE.w	D1, $8(A2)
	CLR.w	$2(A2)
	ADDQ.w	#1, $FFFFCC9C.w
	CMPI.b	#3, D2
	BEQ.w	loc_00007178
	CMPI.b	#4, D2
	BEQ.b	loc_00007120
	CMPI.b	#5, D2
	BEQ.b	loc_0000714E
	CMPI.b	#6, D2
	BEQ.b	loc_0000715C
	CMPI.b	#8, D2
	BEQ.w	loc_0000722A
	CMPI.b	#$0A, D2
	BEQ.w	loc_0000722A
loc_000070F6:
	MOVEQ	#$0000000F, D0
	BSR.w	loc_00008428
	MOVEQ	#1, D1
	BSR.w	loc_00000B08
	BRA.b	loc_000070A0
loc_00007104:
	MOVEQ	#$00000012, D0
	BSR.w	loc_00008428
	MOVEQ	#1, D1
	BSR.w	loc_00000B08
	BRA.b	loc_000070A0
loc_00007112:
	MOVEQ	#$00000012, D0
	BSR.w	loc_00008428
	MOVEQ	#1, D1
	BSR.w	loc_00000B08
	BRA.b	loc_000070A0
loc_00007120:
	MOVEM.l	A3/A1/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_00022BD6, A3
	BSR.w	loc_00007D88_rand
	ANDI.w	#$000F, D0
	MOVE.w	D0, D3
loc_00007134:
	MOVE.w	$4(A2), D4
	MOVE.w	$8(A2), D5
loc_0000713C:
	BSR.w	loc_00003224
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/A1/A3
	ANDI.b	#$20, D3
	OR.b	D3, $1(A2)
	BRA.b	loc_000070F6
loc_0000714E:
	MOVEM.l	A3/A1/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_00022BE6, A3
	CLR.w	D3
	BRA.b	loc_00007134
loc_0000715C:
	MOVEM.l	A3/A1/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_00022BF6, A3
	CLR.w	D3
	MOVE.w	$4(A2), D4
	MOVE.w	$8(A2), D5
	MOVEQ	#$00000010, D7
	ADD.w	D7, D4
	ADD.w	D7, D5
	BRA.b	loc_0000713C
loc_00007178:
	MOVEM.l	A3/A1/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFB6F0, A3
	MOVEQ	#$0000001F, D7
	CLR.b	D3
loc_00007186:
	TST.b	(A3)
	BEQ.b	loc_00007198
	CMPI.b	#$1D, (A3)
	BNE.b	loc_00007198
	ADDQ.b	#1, D3
	CMPI.b	#2, D3
	BEQ.b	loc_000071FC
loc_00007198:
	ADDA.w	#$0030, A3
	DBF	D7, loc_00007186
	CLR.w	$FFFF8218
	LEA	loc_00007204, A3
	MOVE.w	$FFFFCB1A.w, D0
loc_000071B0:
	MOVE.b	(A3,D0.w), D3
	BPL.b	loc_000071BE
	ANDI.w	#$007F, D3
	MOVE.w	D3, D0
	BRA.b	loc_000071B0
loc_000071BE:
	ADDQ.w	#1, D0
	MOVE.w	D0, $FFFFCB1A.w
	TST.b	D3
	BNE.b	loc_000071D2
	CMPI.b	#$0A, $FFFFB2B8
	BEQ.b	loc_000071E2
loc_000071D2:
	CMPI.b	#8, D3
	BNE.b	loc_000071E4
	CMPI.b	#7, $FFFFB2B6
	BCS.b	loc_000071E4
loc_000071E2:
	MOVEQ	#4, D3
loc_000071E4:
	MOVEQ	#$00000010, D1
	MOVE.w	$4(A2), D4
	ADD.w	D1, D4
	MOVE.w	$8(A2), D5
	ADD.w	D1, D5
	LEA	loc_00022C46, A3
	BSR.w	loc_000031E4
loc_000071FC:
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/A1/A3
	BRA.w	loc_00007104
loc_00007204:
loc_0000722A: ; @ Called when destroyed a boss
	CMPI.w	#$000A, $FFFFF624.w
	BEQ.w	loc_0000729E
	MOVEM.l	A4/A3/A1/A0/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVEA.l	$FFFFCC9E.w, A4
	BSR.w	loc_000072F0
	CLR.w	D6
	MOVE.b	(A4), D6
	ADD.w	D6, D6
	ADD.w	D6, D6
	ADD.w	D6, D6
	LEA	loc_0002329E, A3
	ADDA.w	D6, A3
	MOVE.w	$6(A4), D4
	MOVE.b	$2(A3), D6
	EXT.w	D6
	ADD.w	D6, D4
	MOVE.w	$A(A4), D5
	MOVE.b	$3(A3), D6
	EXT.w	D6
	ADD.w	D6, D5
	LEA	loc_00022C06, A3
	BSR.w	loc_00003224
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/A0/A1/A3/A4
	ANDI.b	#$20, D3
	OR.b	D3, $1(A2)
	MOVEM.l	A0/D3/D1/D0, -(A7)
	BSR.w	loc_000072F0
	MOVE.l	#$78000000, loc_00C00004
	BSR.w	loc_00008108
	MOVEM.l	(A7)+, D0/D1/D3/A0
	BRA.w	loc_00007112
loc_0000729E:
	MOVEM.l	A4/A3/A1/A0/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVEA.l	$FFFFCC9E.w, A4
	CMPI.b	#$2E, (A4)
	BEQ.b	loc_000072C2
	LEA	loc_000073A8, A1
	MOVE.l	#$46B40003, D0
	MOVEQ	#5, D1
	MOVEQ	#7, D2
	BSR.w	loc_000080A0
	BRA.b	loc_000072D6
loc_000072C2:
	LEA	loc_00007348, A1
	MOVE.l	#$46A00003, D0
	MOVEQ	#5, D1
	MOVEQ	#7, D2
	BSR.w	loc_000080A0
loc_000072D6:
	BSR.w	loc_000072F0
	MOVE.l	#$78000000, loc_00C00004
	BSR.w	loc_00008108
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/A0/A1/A3/A4
	BRA.w	loc_00007112
loc_000072F0:
	MOVE.w	$FFFFF624.w, D0
	ADD.w	D0, D0
	MOVE.w	D0, D1
	ADD.w	D0, D0
	ADD.w	D1, D0
	MOVEA.l	loc_00007306(PC,D0.w), A0
	MOVE.w	loc_0000730A(PC,D0.w), D3
	RTS
loc_00007306:
loc_0000730A:
loc_00007348:
loc_000073A8:
loc_00007408:
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D6
	LEA	$FFFFF003.w, A4
	MOVEQ	#$00000018, D5
	LEA	$FFFFCB1C.w, A2
	MOVEQ	#$0000000F, D7
loc_00007420:
	TST.b	(A2)
	BEQ.w	loc_00007444
	CMPI.b	#8, (A2)
	BEQ.w	loc_000074B0
	CMPI.b	#$0A, (A2)
	BEQ.w	loc_0000748E
	BSR.w	loc_00007458
	BTST.b	#0, (A4)
	BNE.b	loc_00007444
	ADDQ.w	#1, $2(A2)
loc_00007444:
	ADDA.w	D5, A2
	DBF	D7, loc_00007420
	MOVE.l	A1, $FFFF8210
	MOVE.w	D6, $FFFF8214
	RTS
loc_00007458:
	CLR.w	D0
	MOVE.b	(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_00023666, A0
	MOVEA.l	(A0,D0.w), A0
	MOVE.w	$2(A2), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	MOVE.l	(A0,D0.w), D0
	BNE.b	loc_0000747C
	CLR.b	(A2)
	BRA.b	loc_0000748C
loc_0000747C:
	MOVEA.l	D0, A0
	BSR.w	loc_00007512
	MOVE.l	$FFFF823E, D0
	ADD.l	D0, $8(A2)
loc_0000748C:
	RTS
loc_0000748E:
	MOVEM.l	A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.l	#$6AE00002, loc_00C00004
	BSR.b	loc_000074D4
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1
	BSR.b	loc_00007458
	BTST.b	#0, (A4)
	BNE.b	loc_000074AE
	ADDQ.w	#1, $2(A2)
loc_000074AE:
	BRA.b	loc_00007444
loc_000074B0:
	MOVEM.l	A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.l	#$5E600002, loc_00C00004
	BSR.b	loc_000074D4
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1
	BSR.b	loc_00007458
	BTST.b	#0, (A4)
	BEQ.b	loc_000074D0
	ADDQ.w	#1, $2(A2)
loc_000074D0:
	BRA.w	loc_00007444
loc_000074D4:
	MOVE.w	$2(A2), D0
	ADD.w	D0, D0
	LEA	loc_0002392E, A0
	MOVE.w	(A0,D0.w), D7
	SUBQ.w	#1, D7
	ADD.w	D0, D0
	LEA	loc_000238AA, A0
	MOVE.l	(A0,D0.w), D0
	BEQ.b	loc_00007510
	MOVEA.l	D0, A0
	LEA	loc_00C00000, A1
loc_000074FC:
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	MOVE.l	(A0)+, (A1)
	DBF	D7, loc_000074FC
loc_00007510:
	RTS
loc_00007512:
	MOVE.l	D7, -(A7)
	CLR.w	D7
	MOVE.b	(A0)+, D7
loc_00007518:
	MOVE.b	(A0)+, D0
	EXT.w	D0
	ADD.w	$8(A2), D0
	MOVE.w	D0, (A1)
	MOVE.b	(A0)+, $2(A1)
	MOVE.b	D6, $3(A1)
	MOVE.b	(A0)+, $4(A1)
	MOVE.b	(A0)+, $5(A1)
	BTST.b	#5, $1(A2)
	BEQ.b	loc_00007540
	ORI.w	#$8000, $4(A1)
loc_00007540:
	MOVE.b	(A0)+, D0
	EXT.w	D0
	ADD.w	$4(A2), D0
	SUB.w	$FFFFF622.w, D0
	MOVE.w	D0, $6(A1)
	ADDQ.b	#1, D6
	ADDQ.l	#8, A1
	SUBQ.w	#1, D7
	BNE.b	loc_00007518
	CMPI.b	#9, (A2)
	BNE.b	loc_00007572
	MOVEA.l	$C(A2), A3
	MOVE.w	$6(A3), D0
	ADD.w	D0, -$2(A1)
	MOVE.w	$A(A3), D0
	ADD.w	D0, -$8(A1)
loc_00007572:
	MOVE.l	(A7)+, D7
	RTS
loc_00007576:
	TST.b	$FFFFF782.w
	BNE.w	loc_00007658
	TST.b	$FFFFB29A
	BEQ.w	loc_00007658
	BSR.w	loc_000077B4
	LEA	loc_00028264, A1
	MOVE.l	#$470C0003, D0
	MOVEQ	#$00000013, D1
	MOVEQ	#2, D2
	BSR.w	loc_000080A0
	LEA	loc_00028128, A1
	MOVE.l	#$4D2A0003, D0
	MOVEQ	#6, D1
	MOVEQ	#0, D2
	BSR.w	loc_000080A0
	LEA	loc_0002838C, A1
	MOVE.l	#$6A120003, D0
	MOVEQ	#1, D1
	MOVEQ	#1, D2
	BSR.w	loc_000080A0
	MOVE.w	#4, $FFFFF622.w
	MOVE.w	#$0400, $FFFFFB14.w
	CLR.w	$FFFFCCA8.w
	BSR.w	loc_000076EC
	MOVE.w	#$0294, $FFFFCCAA.w
	BSR.w	loc_000076B6
	BSR.w	loc_00007A14
	MOVEQ	#9, D0
	BSR.w	loc_000083F4
	MOVE.w	$FFFFF610.w, D0
	ORI.b	#$40, D0
	MOVE.w	D0, loc_00C00004
loc_000075FE:
	BSR.w	loc_00007D64
	BSR.w	loc_000076EC
	BSR.w	loc_000076B6
	BSR.w	loc_0000765C
	BSR.w	loc_00007A14
	MOVE.b	$FFFFF605.w, D0
	MOVE.b	D0, D1
	ANDI.b	#$0C, D1
	BEQ.b	loc_00007628
	ADDQ.b	#1, $FFFFCCA8.w
	ANDI.w	#$00FF, $FFFFF622.w
loc_00007628:
	ANDI.b	#$F0, D0
	BNE.b	loc_00007636
	TST.w	$FFFFCCAA.w
	BEQ.b	loc_00007658
	BRA.b	loc_000075FE
loc_00007636:
	ORI.w	#$0100, $FFFFF622.w
	BSR.w	loc_00007D64
	BTST.b	#0, $FFFFCCA8.w
	BNE.w	loc_00000CB0
	BSR.w	loc_00007996
	CLR.b	$FFFFF603.w
	CLR.b	$FFFFF605.w
	RTS
loc_00007658:
	BRA.w	loc_00000CB0
loc_0000765C:
	TST.b	$FFFFB29A
	BEQ.b	loc_0000767A
	LEA	loc_00028136, A1
	MOVE.l	#$4B860003, D0
	MOVEQ	#$00000019, D1
	MOVEQ	#1, D2
	BSR.w	loc_000080A0
	BRA.b	loc_0000768E
loc_0000767A:
	LEA	loc_0002819E, A1
	MOVE.l	#$4B8E0003, D0
	MOVEQ	#$00000011, D1
	MOVEQ	#1, D2
	BSR.w	loc_000080A0
loc_0000768E:
	BTST.b	#0, $FFFFCCA8.w
	BNE.b	loc_000076A0
	MOVE.w	$FFFFCCAA.w, D0
	BTST.l	#4, D0
	BEQ.b	loc_000076B4
loc_000076A0:
	LEA	loc_000281E6, A1
	MOVE.l	#$4B860003, D0
	MOVEQ	#$00000019, D1
	MOVEQ	#1, D2
	BSR.w	loc_000080A0
loc_000076B4:
	RTS
loc_000076B6:
	CLR.l	D0
	MOVE.w	$FFFFCCAA.w, D0
	DIVU.w	#$003C, D0
	CMPI.w	#$000A, D0
	BCS.b	loc_000076C8
	MOVEQ	#$0000000A, D0
loc_000076C8:
	LSL.w	#4, D0
	LEA	loc_000282DC, A1
	ADDA.w	D0, A1
	MOVE.l	#$4A1C0003, D0
	MOVEQ	#3, D1
	MOVEQ	#1, D2
	BSR.w	loc_000080A0
	TST.w	$FFFFCCAA.w
	BEQ.b	loc_000076EA
	SUBQ.w	#1, $FFFFCCAA.w
loc_000076EA:
	RTS
loc_000076EC:
	LEA	$FFFFF622.w, A1
	BTST.b	#0, $FFFFCCA8.w
	BNE.b	loc_000076FC
	MOVEQ	#-4, D0
	BRA.b	loc_000076FE
loc_000076FC:
	MOVEQ	#-$0000005C, D0
loc_000076FE:
	MOVE.w	D0, (A1)
	MOVE.w	$FFFFCCAA.w, D0
	BTST.l	#3, D0
	BEQ.b	loc_0000770E
	EORI.w	#$0100, (A1)
loc_0000770E:
	LEA	loc_000281EC, A1
	BTST.b	#0, $FFFFCCA8.w
	BEQ.b	loc_00007722
	LEA	loc_00028228, A1
loc_00007722:
	MOVE.l	#$48900003, D0
	MOVEQ	#4, D1
	MOVEQ	#2, D2
	BSR.w	loc_000080A0
	LEA	loc_0002820A, A1
	BTST.b	#0, $FFFFCCA8.w
	BNE.b	loc_00007744
	LEA	loc_00028246, A1
loc_00007744:
	MOVE.l	#$48A60003, D0
	MOVEQ	#4, D1
	MOVEQ	#2, D2
	BSR.w	loc_000080A0
	RTS
loc_00007754:
	BSR.w	loc_00000326
	BSR.w	loc_000077B4
	LEA	loc_000280AA, A1
	MOVE.l	#$49100003, D0
	MOVEQ	#$00000011, D1
	MOVEQ	#5, D2
	BSR.w	loc_000080A0
	LEA	loc_0002801E, A1
	MOVE.l	#$4C000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#2, D2
	BSR.w	loc_000080A0
	MOVE.w	#$0080, $FFFFD2DA
	MOVE.w	#$FFC0, $FFFFD2DE
	MOVEQ	#1, D0
	BSR.w	loc_00009036
	CLR.b	$FFFFCCAC.w
	BSR.w	loc_00007946
	MOVE.w	$FFFFF610.w, D0
	ORI.b	#$40, D0
	MOVE.w	D0, loc_00C00004
	BRA.w	loc_00007874
loc_000077B4:
	ORI	#$2700, SR
	MOVE.w	$FFFFF610.w, D0
	ANDI.b	#$BF, D0
	MOVE.w	D0, loc_00C00004
	BSR.w	loc_00007FCE
	MOVE.w	#$0400, $FFFFFB00.w
	BSR.w	loc_00007D64
	MOVEQ	#1, D0
	BSR.w	loc_00007BD8
	MOVE.l	#$40000000, loc_00C00004
	LEA	loc_0002BEDE, A0
	MOVE.w	#$0D7F, D0
	BSR.w	loc_00007AB2
	MOVE.l	#$5AC00000, loc_00C00004
	LEA	loc_00029CF8, A0
	MOVE.w	#$001F, D0
	BSR.w	loc_00007AB2
	MOVE.l	#$60000000, loc_00C00004
	LEA	loc_0002AC1E, A0
	MOVE.w	#$0FFF, D0
	BSR.w	loc_00007AB2
	MOVE.l	#$50000001, loc_00C00004
	LEA	loc_00028394, A0
	BSR.w	loc_00008108
	MOVE.l	#$50000002, loc_00C00004
	LEA	loc_0002A874, A0
	BSR.w	loc_00008108
	LEA	loc_00027D6E, A1
	MOVE.l	#$40880003, D0
	MOVEQ	#$00000017, D1
	MOVEQ	#$0000000B, D2
	BSR.w	loc_000080A0
	LEA	loc_00029CF4, A1
	MOVE.l	#$45B80003, D0
	MOVEQ	#1, D1
	MOVEQ	#0, D2
	BSR.w	loc_000080A0
	RTS
loc_00007874:
	MOVEQ	#$0000003B, D7
loc_00007876:
	BSR.w	loc_00007D7A
	BSR.w	loc_00007946
	BSR.w	loc_00007902
	MOVE.b	$FFFFF605.w, D0
	BTST.l	#7, D0
	BNE.w	loc_00007896
	BNE.w	loc_000078CA
	DBF	D7, loc_00007876
loc_00007896:
	BSR.w	loc_00007D7A
	BSR.w	loc_00007946
	BSR.w	loc_00007902
	BSR.w	loc_00007A88
	BSR.w	loc_00007A46
	MOVE.b	$FFFFF605.w, D0
	BTST.l	#7, D0
	BNE.w	loc_0000791A
	ADDQ.w	#1, $FFFFD2DE
	CMPI.w	#$0060, $FFFFD2DE
	BEQ.w	loc_000078CA
	BRA.b	loc_00007896
loc_000078CA:
	MOVE.w	#$0060, $FFFFD2DE
	MOVEQ	#1, D0
	BSR.w	loc_00007BD8
	MOVE.w	#$0384, D7
loc_000078DC:
	BSR.w	loc_00007D7A
	BSR.w	loc_000021D2
	BSR.w	loc_00007946
	BSR.w	loc_00007902
	MOVE.b	$FFFFF605.w, D0
	BTST.l	#7, D0
	BNE.b	loc_0000791A
	BSR.w	loc_00007A88
	DBF	D7, loc_000078DC
	BRA.w	loc_000079B4
loc_00007902:
	MOVE.b	$FFFFF605.w, D0
	ANDI.b	#3, D0
	BEQ.b	loc_00007910
	ADDQ.b	#1, $FFFFCCAC.w
loc_00007910:
	RTS
loc_00007912:
loc_0000791A:
	CLR.w	D0
	MOVE.b	$FFFFFFDF.w, D0
	CLR.b	$FFFFFFEF.w
	MOVE.b	loc_00007912(PC,D0.w), $FFFFB29A
	MOVEQ	#$0000000B, D0
	BSR.w	loc_000083F4
	BTST.b	#0, $FFFFCCAC.w
	BNE.w	loc_000079A8
	BSR.w	loc_00007996
	CLR.b	$FFFFCCA2.w
	RTS
loc_00007946:
	MOVE.w	#$44DE, D4
	MOVE.w	#$44A0, D5
	BTST.b	#0, $FFFFCCAC.w
	BEQ.b	loc_00007958
	EXG	D4, D5
loc_00007958:
	MOVE.l	#$4A120003, loc_00C00004
	MOVE.w	D4, loc_00C00000
	MOVE.l	#$4B120003, loc_00C00004
	MOVE.w	D5, loc_00C00000
	RTS
loc_00007996:
	MOVE.b	$FFFFB29A, D0
	MOVEQ	#1, D1
	SBCD	D1, D0
	MOVE.b	D0, $FFFFB29A
	RTS
loc_000079A8:
	BSR.w	loc_00000560
	BRA.w	loc_00007754
loc_000079B4:
	BSR.w	loc_00007FCE
	MOVEQ	#2, D0
	BSR.w	loc_00007BD8
	MOVE.w	#$0400, $FFFFFB00.w
	BSR.w	loc_00007D64
	BSR.w	loc_00002022
	MOVE.l	#$0009AC00, $FFFFF784.w
	MOVE.b	#1, $FFFFF782.w
	MOVE.w	#5, $FFFFF624.w
	MOVE.l	#$0000D000, $FFFF8268
	BSR.w	loc_00002988
	BSR.w	loc_000029F8
	CLR.b	$FFFFB2B7
	MOVE.b	#3, $FFFFB2B6
	MOVE.b	#$0A, $FFFFB2B8
	MOVE.b	#6, $FFFFB2A0
	BRA.w	loc_00000D92
loc_00007A14:
	LEA	$FFFFCCA4.w, A1
	MOVE.w	#$44B0, D2
	CLR.w	D0
	MOVE.b	$FFFFB29A, D0
	MOVE.w	D0, D1
	LSR.b	#4, D0
	ADD.w	D2, D0
	MOVE.w	D0, (A1)
	ANDI.b	#$0F, D1
	ADD.w	D2, D1
	MOVE.w	D1, $2(A1)
	MOVE.l	#$4D3A0003, D0
	MOVEQ	#1, D1
	MOVEQ	#0, D2
	BSR.w	loc_000080A0
	RTS
loc_00007A46:
	LEA	loc_00007A68, A1
	MOVE.w	$FFFFF002.w, D0
	ANDI.w	#1, D0
	BEQ.b	loc_00007A5A
	ADDA.w	#$0010, A1
loc_00007A5A:
	LEA	$FFFFFB00.w, A0
	MOVE.l	(A1)+, (A0)+
	MOVE.l	(A1)+, (A0)+
	MOVE.l	(A1)+, (A0)+
	MOVE.l	(A1)+, (A0)+
	RTS
loc_00007A68:
loc_00007A88:
	LEA	$FFFFD2BA, A0
	ADDQ.b	#1, $1(A0)
	CMPI.b	#3, $1(A0)
	BCS.w	loc_00007AA0
	CLR.b	$1(A0)
loc_00007AA0:
	ADDQ.b	#1, $2(A0)
	ANDI.b	#3, $2(A0)
	RTS
loc_00007AB2:
	LEA	loc_00C00000, A3
loc_00007AB8:
	MOVE.w	(A0)+, (A3)
	DBF	D0, loc_00007AB8
	RTS
loc_00007AC0:
	MOVE.l	#$7C000003, loc_00C00004
	LEA	$FFFFCCAE, A0
	LEA	loc_00C00000, A1
	MOVE.w	#$00FF, D1
loc_00007ADA:
	MOVE.l	(A0)+, D0
	NEG.w	D0
	SWAP	D0
	NEG.w	D0
	SWAP	D0
	MOVE.l	D0, (A1)
	DBF	D1, loc_00007ADA
	RTS
loc_00007B0A:
	ORI	#$2700, SR
	CLR.l	$FFFFD0FE
	CLR.w	$FFFFF000.w
	BSR.w	loc_00007B20
	RTS
loc_00007B20:
	CLR.l	$FFFFF620.w
	CLR.l	$FFFFF61C.w
	LEA	$FFFFCCAE, A6
	MOVE.w	#$00FF, D6
loc_00007B32:
	CLR.l	(A6)+
	DBF	D6, loc_00007B32
	RTS
loc_00007B4E:
	SUBQ.w	#1, $FFFFF634.w
	BPL.b	loc_00007B7C
	MOVE.w	#3, $FFFFF634.w
	MOVE.w	$FFFFF632.w, D0
	BMI.b	loc_00007B7C
	SUBQ.w	#2, $FFFFF632.w
	LEA	loc_00007B7E, A0
	LEA	$FFFFFB04.w, A1
	ADDA.w	D0, A0
	MOVE.l	(A0)+, (A1)+
	MOVE.l	(A0)+, (A1)+
	MOVE.l	(A0)+, (A1)+
	MOVE.l	(A0)+, (A1)+
	MOVE.l	(A0)+, (A1)+
	MOVE.w	(A0)+, (A1)+
loc_00007B7C:
	RTS
loc_00007B7E:
loc_00007BD8:
	LEA	loc_00007BF4, A1
	LSL.w	#3, D0
	ADDA.w	D0, A1
	MOVEA.l	(A1)+, A2
	MOVEA.w	(A1)+, A3
	MOVE.w	(A1)+, D7
loc_00007BE8:
	MOVE.l	(A2), $80(A3)
	MOVE.l	(A2)+, (A3)+
	DBF	D7, loc_00007BE8
	RTS
loc_00007BF4:
loc_00007C14:
loc_00007C34:
loc_00007CB4:
loc_00007D34:
loc_00007D54:
	ADDQ.w	#1, $FFFFF002.w
	ANDI	#$FAFF, SR
loc_00007D5C:
	TST.b	$FFFFF62A.w
	BNE.b	loc_00007D5C
	RTS
loc_00007D64:
	ADDQ.w	#1, $FFFFF002.w
	MOVE.b	#$10, $FFFFF62A.w
	ANDI	#$FAFF, SR ; Set interrupt mask to 2
loc_00007D72: ; Busy loop waiting on interrupt
	TST.b	$FFFFF62A.w
	BNE.b	loc_00007D72
	RTS
loc_00007D7A:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	BSR.w	loc_00008FEE
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	BRA.b	loc_00007D64
loc_00007D88_rand:
	; @ Random number generator
	; Result in D0,D1 and RAM:F636
	MOVE.l	$FFFFF636.w, D1
	BNE.b	loc_00007D94
	MOVE.l	#$2A6D365A, D1
loc_00007D94:
	MOVE.l	D1, D0
	ASL.l	#2, D1
	ADD.l	D0, D1
	ASL.l	#3, D1
	ADD.l	D0, D1
	MOVE.w	D1, D0
	SWAP	D1
	ADD.w	D1, D0
	MOVE.w	D0, D1
	SWAP	D1
	MOVE.l	D1, $FFFFF636.w
	RTS

loc_00007DAE:
	BSR.w	loc_00008EB6
	MOVEQ	#$00000040, D0
	MOVE.b	D0, loc_00A1000C-3
	MOVE.b	D0, loc_00A1000C-1
	MOVE.b	D0, loc_00A1000E-1
	RTS

loc_00007DC8: ; @ Read control pad
	LEA	loc_00A10003, A1 ; @ Port 1
	LEA	$FFFFF604.w, A2 ; @ Result
	MOVE.b	#0, (A1)
	NOP	; NOPs are used to wait on controller
	NOP
	MOVE.b	(A1), D0
	ADD.b	D0, D0
	ADD.b	D0, D0
	ANDI.b	#$C0, D0
	MOVE.b	#$40, (A1)
	NOP
	NOP
	MOVE.b	(A1), D1
	ANDI.b	#$3F, D1
	OR.b	D1, D0
	NOT.b	D0
	TST.b	$FFFFF782.w
	BEQ.b	loc_00007E12
	MOVE.b	D0, D2
	ANDI.b	#$F0, D2
	BEQ.b	loc_00007E12
	MOVEA.l	loc_00000000, A7
	JMP	loc_00000CB0
loc_00007E12:
	TST.b	$FFFFF782.w
	BEQ.b	loc_00007E2A
	BSR.w	loc_00007ED4
	MOVE.b	D0, D4
	MOVEQ	#0, D5
	BSR.w	loc_00007E4A
	BSR.b	loc_00007E36
	MOVE.b	D4, D0
	BRA.b	loc_00007E34
loc_00007E2A:
	MOVE.b	D0, D4
	BSR.w	loc_00007E44
	BSR.b	loc_00007E36
loc_00007E32:
	MOVE.b	D4, D0
loc_00007E34:
	MOVEA.l	A2, A0
loc_00007E36:
	MOVE.b	D0, D1
	MOVE.b	(A0), D2
	EOR.b	D2, D0
	AND.b	D1, D0
	MOVE.b	D1, (A0)+
	MOVE.b	D0, (A0)+
	RTS
loc_00007E44:
	MOVE.b	$FFFFFFE2.w, D5
	BNE.b	loc_00007E5A
loc_00007E4A:
	BSR.w	loc_00007E90
loc_00007E4E:
	BTST.l	#5, D0
	BEQ.b	loc_00007E8E
	BSET.l	#4, D0
	BRA.b	loc_00007E8E
loc_00007E5A:
	SUBQ.b	#1, D5
	BNE.b	loc_00007E6A
loc_00007E5E:
	BTST.l	#5, D0
	BEQ.b	loc_00007E8E
	BSET.l	#6, D0
	BRA.b	loc_00007E8E
loc_00007E6A:
	SUBQ.b	#1, D5
	BNE.b	loc_00007E8A
	MOVE.b	D0, D1
	BTST.l	#4, D0
	BEQ.b	loc_00007E7E
	BSET.l	#6, D0
	BCLR.l	#4, D0
loc_00007E7E:
	BTST.l	#5, D1
	BEQ.b	loc_00007E8E
	BSET.l	#4, D0
	BRA.b	loc_00007E8E
loc_00007E8A:
	BSR.b	loc_00007E90
	BRA.b	loc_00007E5E
loc_00007E8E:
	RTS
loc_00007E90:
	MOVE.b	D0, D1
	MOVE.b	D0, D2
	ANDI.b	#$AF, D0
	ANDI.b	#$10, D1
	ADD.b	D1, D1
	ADD.b	D1, D1
	ANDI.b	#$40, D2
	LSR.b	#2, D2
	OR.b	D1, D0
	OR.b	D2, D0
	RTS
loc_00007ED4:
	TST.b	$FFFFF780.w
	BEQ.b	loc_00007EE4
	MOVE.b	$FFFFF781.w, D0
	SUBQ.b	#1, $FFFFF780.w
	RTS
loc_00007EE4:
	MOVEA.l	$FFFFF784.w, A3
	MOVE.b	(A3)+, D0
	CMPI.b	#$FF, D0
	BEQ.b	loc_00007EFE
	MOVE.b	D0, $FFFFF781.w
	MOVE.b	(A3)+, $FFFFF780.w
	MOVE.l	A3, $FFFFF784.w
	BRA.b	loc_00007ED4
loc_00007EFE:
	MOVEA.l	loc_00000000, A7
	MOVEA.l	loc_00000004, A0
	JMP	(A0) ; (Uncertain target!) @ Attract mode related
loc_00007F08:
	LEA	loc_00C00004, A0 ; A0=vdp_control
	LEA	loc_00C00000, A1 ; A1=vdp_data
	LEA	loc_00007FA8, A2
	MOVEQ	#$00000012, D7
loc_00007F1C:
	MOVE.w	(A2)+, (A0)
	DBF	D7, loc_00007F1C
	MOVE.w	loc_00007FAA, D0
	MOVE.w	D0, $FFFFF610.w
	MOVEQ	#0, D0
	MOVE.l	#$40000010, loc_00C00004
	MOVE.w	D0, (A1)
	MOVE.w	D0, (A1)
	MOVE.l	#$C0000000, loc_00C00004
	MOVE.w	#$003F, D7
loc_00007F4A:
	MOVE.w	D0, (A1)
	DBF	D7, loc_00007F4A
	MOVE.l	#0, $FFFFF61C.w
	MOVE.l	#0, $FFFFF620.w
	MOVE	SR, -(A7)
	ORI	#$0700, SR
	LEA	loc_00C00004, A6
	MOVE.w	#$8F01, (A6)
	MOVE.w	#$93FF, (A6)
	MOVE.w	#$94FF, (A6)
	MOVE.w	#$9780, (A6)
	MOVE.w	#$4000, (A6)
	MOVE.w	#$0080, $FFFFF644.w
	MOVE.w	$FFFFF644.w, (A6)
	MOVE.w	#0, $FFFFF644.w
	MOVE.w	$FFFFF644.w, loc_00C00000
loc_00007F98:
	MOVE.w	(A6), D7
	ANDI.w	#2, D7
	BNE.b	loc_00007F98
	MOVE.w	#$8F02, (A6)
	MOVE	(A7)+, SR
	RTS
loc_00007FA8:
loc_00007FAA:
loc_00007FCE:
	MOVE	SR, -(A7)
	ORI	#$0700, SR
	LEA	loc_00C00004, A6
	MOVE.w	#$8F01, (A6)
	MOVE.w	#$93FF, (A6)
	MOVE.w	#$945F, (A6)
	MOVE.w	#$9780, (A6)
	MOVE.w	#$6000, (A6)
	MOVE.w	#$0082, $FFFFF644.w
	MOVE.w	$FFFFF644.w, (A6)
	MOVE.w	#0, $FFFFF644.w
	MOVE.w	$FFFFF644.w, loc_00C00000
loc_00008006:
	MOVE.w	(A6), D7
	ANDI.w	#2, D7
	BNE.b	loc_00008006
	MOVE.w	#$8F02, (A6)
	MOVE	(A7)+, SR
	MOVE.l	#0, $FFFFF61C.w
	MOVE.l	#0, $FFFFF620.w
	LEA	$FFFFE800.w, A6
	MOVEQ	#0, D7
	MOVE.w	#$009F, D6
loc_0000802E:
	MOVE.l	D7, (A6)+
	DBF	D6, loc_0000802E
	RTS
loc_00008036:
	ORI	#$2700, SR
	LEA	loc_00A11100, A5
	LEA	loc_00A11200, A6
	MOVE.w	#$0100, (A5)
	MOVE.w	#$0100, (A6)
loc_0000804E:
	BTST.b	#0, (A5)
	BNE.b	loc_0000804E
	MOVEA.l	#$0009E000, A0
	LEA	loc_00A00000, A1
	MOVE.w	#$1F7F, D0
loc_00008064:
	MOVE.b	(A0)+, D1
loc_00008066:
	MOVE.b	D1, (A1)
	CMP.b	(A1), D1
	BNE.b	loc_00008066
	ADDQ.w	#1, A1
	DBF	D0, loc_00008064
	MOVE.w	#0, (A6)
	MOVE.w	#0, (A5)
	MOVE.w	#$0100, (A6)
	JSR	loc_000083B0
	LEA	loc_00A11100, A5
	LEA	loc_00A11200, A6
	MOVE.w	#$0100, (A5)
	MOVE.w	#$0100, (A6)
loc_00008098:
	BTST.b	#0, (A5)
	BNE.b	loc_00008098
	RTS
loc_000080A0:
	MOVEM.l	D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_00C00004, A2
	LEA	loc_00C00000, A3
	MOVE.l	#$00800000, D7
	CLR.w	D6
loc_000080B8:
	MOVE.l	D0, (A2)
	MOVE.w	D1, D4
loc_000080BC:
	TST.w	D6
	BNE.b	loc_000080DA
	MOVE.w	(A1)+, D3
	CMPI.w	#$FFFF, D3
	BEQ.b	loc_000080DE
loc_000080C8:
	MOVE.w	D3, (A3)
	DBF	D4, loc_000080BC
	ADD.l	D7, D0
	DBF	D2, loc_000080B8
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7
	RTS
loc_000080DA:
	SUBQ.w	#1, D6
	BRA.b	loc_000080C8
loc_000080DE:
	MOVE.w	(A1)+, D6
	MOVE.w	(A1)+, D3
	BRA.b	loc_000080DA
loc_00008108:
	MOVEM.l	A5/A4/A3/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_00008194, A3
	LEA	loc_00C00000, A4
	BRA.b	loc_00008124
loc_0000811A:
	MOVEM.l	A5/A4/A3/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_000081AA, A3
loc_00008124:
	LEA	$FFFFF400.w, A1
	MOVE.w	(A0)+, D2
	LSL.w	#1, D2
	BCC.b	loc_00008132
	ADDA.w	#$000A, A3
loc_00008132:
	LSL.w	#2, D2
	MOVEA.w	D2, A5
	MOVEQ	#8, D3
	MOVEQ	#0, D2
	MOVEQ	#0, D4
	BSR.w	loc_000081C4
	MOVE.b	(A0)+, D5
	ASL.w	#8, D5
	MOVE.b	(A0)+, D5
	MOVE.w	#$0010, D6
loc_0000814A:
	MOVEQ	#8, D0
	BSR.w	loc_00008226
	CMPI.w	#$00FC, D1
	BCC.b	loc_00008186
	ADD.w	D1, D1
	MOVE.b	(A1,D1.w), D0
	EXT.w	D0
	BSR.w	loc_0000823A
	MOVE.b	$1(A1,D1.w), D1
loc_00008166:
	MOVE.w	D1, D0
	ANDI.w	#$000F, D1
	ANDI.w	#$00F0, D0
	LSR.w	#4, D0
loc_00008172:
	LSL.l	#4, D4
	OR.b	D1, D4
	SUBQ.w	#1, D3
	BNE.b	loc_00008180
	JMP	(A3) ; @ Menu
loc_0000817C:
	MOVEQ	#0, D4
	MOVEQ	#8, D3
loc_00008180:
	DBF	D0, loc_00008172
	BRA.b	loc_0000814A
loc_00008186:
	MOVEQ	#6, D0
	BSR.w	loc_0000823A
	MOVEQ	#7, D0
	BSR.w	loc_00008236
	BRA.b	loc_00008166
loc_00008194:
	MOVE.l	D4, (A4)
	SUBQ.w	#1, A5
	MOVE.w	A5, D4
	BNE.b	loc_0000817C
	BRA.b	loc_000081BE
	EOR.l	D4, D2
	MOVE.l	D2, (A4)
	SUBQ.w	#1, A5
	MOVE.w	A5, D4
	BNE.b	loc_0000817C
	BRA.b	loc_000081BE
loc_000081AA:	EOR.l	D4, D2
	MOVE.l	D2, (A4)+
	SUBQ.w	#1, A5
	MOVE.w	A5, D4
	BNE.b	loc_0000817C
loc_000081BE:
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A3/A4/A5
	RTS
loc_000081C4:
	MOVE.b	(A0)+, D0
loc_000081C6:
	CMPI.b	#$FF, D0
	BNE.b	loc_000081CE
	RTS
loc_000081CE:
	MOVE.w	D0, D7
loc_000081D0:
	MOVE.b	(A0)+, D0
	CMPI.b	#$80, D0
	BCC.b	loc_000081C6
	MOVE.b	D0, D1
	ANDI.w	#$000F, D7
	ANDI.w	#$0070, D1
	OR.w	D1, D7
	ANDI.w	#$000F, D0
	MOVE.b	D0, D1
	LSL.w	#8, D1
	OR.w	D1, D7
	MOVEQ	#8, D1
	SUB.w	D0, D1
	BNE.b	loc_000081FE
	MOVE.b	(A0)+, D0
	ADD.w	D0, D0
	MOVE.w	D7, (A1,D0.w)
	BRA.b	loc_000081D0
loc_000081FE:
	MOVE.b	(A0)+, D0
	LSL.w	D1, D0
	ADD.w	D0, D0
	MOVEQ	#1, D5
	LSL.w	D1, D5
	SUBQ.w	#1, D5
loc_0000820A:
	MOVE.w	D7, (A1,D0.w)
	ADDQ.w	#2, D0
	DBF	D5, loc_0000820A
loc_00008214:
	BRA.b	loc_000081D0
loc_00008226:
	MOVE.w	D6, D7
	SUB.w	D0, D7
	MOVE.w	D5, D1
	LSR.w	D7, D1
	ADD.w	D0, D0
	AND.w	loc_00008214(PC,D0.w), D1
	RTS
loc_00008236:
	BSR.b	loc_00008226
	LSR.w	#1, D0
loc_0000823A:
	SUB.w	D0, D6
	CMPI.w	#9, D6
	BCC.b	loc_00008248
	ADDQ.w	#8, D6
	ASL.w	#8, D5
	MOVE.b	(A0)+, D5
loc_00008248:
	RTS
loc_0000824A:
	ORI	#$2700, SR
	MOVE.w	$FFFFF610.w, D0
	ANDI.b	#$BF, D0
	MOVE.w	D0, loc_00C00004
	BSR.w	loc_00007FCE
	MOVE.l	#$40200000, loc_00C00004
	LEA	loc_0002A0EA, A0
	MOVE.w	#$033F, D7
loc_00008274:
	MOVE.w	(A0)+, loc_00C00000
	DBF	D7, loc_00008274
	LEA	loc_0002A70A, A1
	MOVE.l	#$46140003, D0
	MOVEQ	#$0000000B, D1
	MOVEQ	#3, D2
	BSR.w	loc_000080A0
	MOVEQ	#0, D0
	BSR.w	loc_00007BD8
	MOVE.w	#$0028, $FFFFF632.w
	MOVE.w	#$012C, $FFFFF61A.w
	MOVE.w	$FFFFF610.w, D0
	ORI.b	#$40, D0
	MOVE.w	D0, loc_00C00004
	ANDI	#$FAFF, SR
loc_000082B6:
	MOVE.b	#4, $FFFFF62A.w
	BSR.w	loc_00007D54
	BSR.w	loc_00007B4E
	TST.w	$FFFFF61A.w
	BEQ.w	loc_000082D4
	ANDI.b	#$F0, $FFFFF603.w
	BEQ.b	loc_000082B6
loc_000082D4:
	RTS
loc_000082D6:
	; @ Level 6 interrupt autovector VBLANK
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.w	#$0100, loc_00A11100
loc_000082E2:
	BTST.b	#0, loc_00A11100
	BNE.b	loc_000082E2
	TST.b	$FFFFF62A.w
	BEQ.w	loc_00008398
	MOVE.w	loc_00C00004, D0
	BSR.w	loc_00007DC8
	MOVE.w	#$003F, D0
loc_00008302:
	NOP
	DBF	D0, loc_00008302
	LEA	loc_00C00004, A6
	MOVE.l	#$94019340, (A6)
	MOVE.l	#$96F49500, (A6)
	MOVE.w	#$977F, (A6)
	MOVE.w	#$7800, (A6)
	MOVE.w	#$0083, $FFFFF644.w
	MOVE.w	$FFFFF644.w, (A6)
	LEA	loc_00C00004, A6
	MOVE.w	#$9340, (A6)
	MOVE.w	#$9400, (A6)
	MOVE.w	#$9580, (A6)
	MOVE.w	#$96FD, (A6)
	MOVE.w	#$977F, (A6)
	MOVE.w	#$C000, (A6)
	MOVE.w	#$0080, $FFFFF644.w
	MOVE.w	$FFFFF644.w, (A6)
	TST.w	$FFFFF61A.w
	BEQ.b	loc_0000835E
	SUBQ.w	#1, $FFFFF61A.w
loc_0000835E:
	MOVE.l	#$40000010, loc_00C00004
	MOVE.l	$FFFFF61C.w, loc_00C00000
	TST.w	$FFFFF000.w
	BNE.b	loc_00008394
	MOVE.l	#$7C000003, loc_00C00004
	MOVE.l	$FFFFF620.w, D0
	NEG.w	D0
	SWAP	D0
	NEG.w	D0
	SWAP	D0
	MOVE.l	D0, loc_00C00000
	BRA.b	loc_00008398
loc_00008394:
	BSR.w	loc_00007AC0
loc_00008398:
	MOVE.w	#0, loc_00A11100
	BSR.w	loc_0000849E
	CLR.b	$FFFFF62A.w
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTE
loc_000083AE: ; @ HBLANK
	RTE
loc_000083B0:
	BSR.w	loc_000083CC
	MOVEQ	#$0000002B, D1
	MOVEQ	#0, D0
	MOVE.w	D0, $FFFFD108
	CLR.w	$FFFFD10A
	BSR.w	loc_00008A56
	BRA.w	loc_00008512
loc_000083CC:
	LEA	$FFFFD11C, A0
	MOVEQ	#5, D0
loc_000083D4:
	MOVE.l	#$000083E0, (A0)+
	DBF	D0, loc_000083D4
	RTS
loc_000083E2:
	LEA	$FFFFD134, A0
	MOVE.w	#$011F, D7
loc_000083EC:
	CLR.b	(A0)+
	DBF	D7, loc_000083EC
	RTS
loc_000083F4: ; @ Music
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE	SR, -(A7)
	ORI	#$0700, SR
	CLR.w	$FFFFD104
	MOVE.w	D0, $FFFFD102
	TST.w	D0
	BEQ.b	loc_00008420
	BSR.b	loc_000083E2
	BSR.w	loc_00008512
	BSR.w	loc_0000860C
loc_00008418:
	MOVE	(A7)+, SR
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00008420:
	BSR.b	loc_000083E2
	BSR.w	loc_00008512
	BRA.b	loc_00008418
loc_00008428:
	MOVEM.l	A1/A0/D2/D1/D0, -(A7)
	MOVE	SR, -(A7)
	ORI	#$0700, SR
	MOVE.w	$FFFFD104, D1
	MOVE.b	loc_00008474(PC,D0.w), D2
	CMP.b	loc_00008474(PC,D1.w), D2
	BEQ.b	loc_00008444
	BCS.b	loc_0000846C
loc_00008444:
	MOVE.w	D0, $FFFFD104
	BSR.w	loc_00008634
	MOVEQ	#-$00000040, D0
	MOVEQ	#-$0000004A, D1
	BSR.w	loc_00008AC8
	MOVE.w	$FFFFD104, D0
	MOVE.b	loc_00008489(PC,D0.w), D0
	BEQ.w	loc_00008468
	BSR.w	loc_00008EA2
loc_00008468:
	ANDI	#$FAFF, SR
loc_0000846C:
	MOVE	(A7)+, SR
	MOVEM.l	(A7)+, D0/D1/D2/A0/A1
	RTS
loc_00008474:
loc_00008489:
loc_0000849E:
	BSR.w	loc_00008E4C
	TST.w	$FFFFD102
	BEQ.b	loc_000084B0
	BSR.w	loc_000084BA
	BNE.b	loc_000084B8
loc_000084B0:
	BSR.w	loc_0000871C
	BSR.w	loc_00000B40
loc_000084B8:
	RTS
loc_000084BA:
	MOVE.w	$FFFFD10C, D1
	BEQ.b	loc_000084D2
	CMPI.w	#1, D1
	BEQ.b	loc_000084D6
	CMPI.w	#2, D1
	BEQ.b	loc_000084EE
loc_000084CE:
	MOVEQ	#1, D1
	RTS
loc_000084D2:
	CLR.w	D1
	RTS
loc_000084D6:
	BSR.w	loc_00008512
	BSR.w	loc_000084FA
	MOVEQ	#7, D0
	BSR.w	loc_00008EA2
	MOVE.w	#$0010, $FFFFD10C
	BRA.b	loc_000084CE
loc_000084EE:
	BSR.w	loc_00008556
	CLR.w	$FFFFD10C
	BRA.b	loc_000084CE
loc_000084FA:
	LEA	loc_00C00011, A0
	MOVE.b	#$9F, (A0)
	MOVE.b	#$BF, (A0)
	MOVE.b	#$DF, (A0)
	MOVE.b	#$FF, (A0)
	RTS
loc_00008512:
	MOVE.l	D0, -(A7)
	LEA	$FFFFD134, A1
	LEA	loc_00008764, A5
	CLR.w	$FFFFD110
loc_00008526:
	MOVE.b	(A5)+, $FFFFD10E
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	BSR.w	loc_0000893E
	MOVEQ	#$0000007F, D0
	BSR.w	loc_000089A2
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	ADDA.w	#$0030, A1
	ADDQ.w	#1, $FFFFD110
	CMPI.w	#6, $FFFFD110
	BNE.b	loc_00008526
	MOVE.l	(A7)+, D0
	RTS
loc_00008556:
	MOVE.l	D0, -(A7)
	LEA	$FFFFD134, A1
	LEA	loc_00008764, A5
	CLR.w	$FFFFD110
loc_0000856A:
	MOVE.b	(A5)+, $FFFFD10E
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.b	$A(A1), D0
	BSR.w	loc_000089A2
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	ADDA.w	#$0030, A1
	ADDQ.w	#1, $FFFFD110
	CMPI.w	#6, $FFFFD110
	BNE.b	loc_0000856A
	MOVE.l	(A7)+, D0
	RTS
loc_0000860C:
	BSR.b	loc_00008678
	LEA	$FFFFD11C, A1
	MOVEQ	#5, D3
loc_00008616:
	BSR.b	loc_00008690
	DBF	D3, loc_00008616
	CLR.w	$FFFFD118
	CLR.b	$FFFFD11A
	BSR.w	loc_000086A6
	MOVEQ	#$00000022, D1
	CLR.b	D0
	BRA.w	loc_00008A56
loc_00008634:
	BSR.b	loc_00008678
	MOVE.l	A0, -(A7)
	ADDA.w	#9, A0
	TST.b	(A0)
	BEQ.b	loc_00008656
	LEA	$FFFFD128, A1
	BSR.b	loc_00008690
	LEA	$FFFFD1C4, A1
	MOVE.l	#$FFFFD294, D2
	BSR.b	loc_000086C8
loc_00008656:
	MOVEA.l	(A7)+, A0
	ADDA.w	#$000C, A0
	TST.b	(A0)
	BEQ.b	loc_00008676
	LEA	$FFFFD12C, A1
	BSR.b	loc_00008690
	LEA	$FFFFD1F4, A1
	MOVE.l	#$FFFFD2A4, D2
	BSR.b	loc_000086C8
loc_00008676:
	RTS
loc_00008678:
	ANDI.w	#$00FF, D0
	ADD.w	D0, D0
	LEA	loc_0009B200, A0
	MOVE.w	(A0,D0.w), D0
	ROL.w	#8, D0
	LEA	(A0,D0.w), A0
	RTS
loc_00008690:
	MOVE.b	(A0)+, D0
	MOVE.b	(A0)+, D1
	MOVE.b	(A0)+, D2
	ADDI.b	#$B2, D2
	CLR.b	(A1)+
	MOVE.b	#9, (A1)+
	MOVE.b	D2, (A1)+
	MOVE.b	D1, (A1)+
	RTS
loc_000086A6:
	LEA	$FFFFD134, A1
	MOVE.l	#$FFFFD264, D2
	MOVEQ	#5, D3
loc_000086B4:
	BSR.b	loc_000086C8
	ADDA.l	#$00000030, A1
	ADDI.l	#$00000010, D2
	DBF	D3, loc_000086B4
	RTS
loc_000086C8:
	MOVE.b	#$0F, $0(A1)
	CLR.w	$2(A1)
	CLR.w	$4(A1)
	CLR.l	$6(A1)
	CLR.w	$A(A1)
	CLR.b	$A(A1)
	CLR.b	$B(A1)
	MOVE.b	#$D2, $C(A1)
	CLR.b	$E(A1)
	CLR.b	$10(A1)
	CLR.b	$12(A1)
	MOVE.l	D2, $14(A1)
	CLR.b	$1C(A1)
	CLR.b	$21(A1)
	CLR.b	$22(A1)
	CLR.b	$27(A1)
	CLR.w	$18(A1)
	MOVE.b	#$C0, $1A(A1)
	CLR.b	$1B(A1)
	RTS
loc_0000871C:
	BSR.w	loc_0000876A
	BSR.w	loc_000087CC
	LEA	$FFFFD134, A1
	LEA	$FFFFD11C, A2
	LEA	loc_00008764, A0
	CLR.w	$FFFFD110
loc_0000873C:
	MOVE.b	(A0)+, $FFFFD10E
	MOVE.l	A0, -(A7)
	MOVEA.l	(A2), A0
	BSR.w	loc_00008804
loc_0000874A:
	MOVE.l	A0, (A2)+
	MOVEA.l	(A7)+, A0
	ADDA.w	#$0030, A1
	ADDQ.w	#1, $FFFFD110
	CMPI.w	#6, $FFFFD110
	BNE.b	loc_0000873C
	RTS
loc_00008764:
loc_0000876A:
	MOVE.b	$FFFFD11A, D0
	BNE.b	loc_00008774
	RTS
loc_00008774:
	EXT.w	D0
	ADD.w	D0, $FFFFD118
	BPL.b	loc_00008786
	MOVE.w	#$7FFF, $FFFFD118
loc_00008786:
	LEA	$FFFFD134, A1
	LEA	loc_00008764, A5
	CLR.w	$FFFFD110
loc_00008798:
	MOVE.b	(A5)+, $FFFFD10E
	MOVE.b	$FFFFD118, $1B(A1)
	MOVE.b	$A(A1), D0
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	BSR.w	loc_000089A2
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	ADDA.w	#$0030, A1
	ADDQ.w	#1, $FFFFD110
	CMPI.w	#6, $FFFFD110
	BNE.b	loc_00008798
	RTS
loc_000087CC:
	LEA	$FFFFD11C, A2
	MOVEA.l	A2, A3
	CLR.b	D1
loc_000087D6:
	CMPI.b	#4, D1
	BEQ.b	loc_000087E4
	MOVEA.l	(A2), A0
	CMPI.b	#$F4, (A0)
	BNE.b	loc_00008802
loc_000087E4:
	ADDQ.l	#4, A2
	ADDQ.b	#1, D1
	CMPI.b	#6, D1
	BNE.b	loc_000087D6
	CLR.b	D1
loc_000087F0:
	CMPI.b	#4, D1
	BEQ.b	loc_000087F8
	ADDQ.l	#1, (A3)
loc_000087F8:
	ADDQ.l	#4, A3
	ADDQ.b	#1, D1
	CMPI.b	#6, D1
	BNE.b	loc_000087F0
loc_00008802:
	RTS
loc_00008804:
	MOVE.w	$2(A1), D0
	BEQ.b	loc_00008810
	SUBQ.w	#1, $2(A1)
	BNE.b	loc_00008832
loc_00008810:
	CMPI.b	#$F4, (A0)
	BEQ.b	loc_00008822
	CMPI.b	#$26, $6(A1)
	BEQ.b	loc_00008822
	BSR.w	loc_0000893E
loc_00008822:
	CLR.b	$6(A1)
	TST.w	$4(A1)
	BEQ.b	loc_00008838
	SUBQ.w	#1, $4(A1)
	BEQ.b	loc_00008838
loc_00008832:
	BSR.w	loc_00008860
	RTS
loc_00008838:
	BSR.w	loc_00008B90
loc_0000883C:
	MOVE.b	(A1), D0
	CMPI.b	#7, D0
	BEQ.b	loc_0000885E
	CMPI.b	#$0F, D0
	BEQ.b	loc_0000885E
	CMPI.b	#$FF, D0
	BEQ.b	loc_0000885E
	MOVE.l	A0, -(A7)
	MOVE.b	(A1), D4
	BSR.w	loc_0000895A
	BSR.w	loc_000088B8
	MOVEA.l	(A7)+, A0
loc_0000885E:
	RTS
loc_00008860:
	TST.b	$21(A1)
	BEQ.b	loc_00008870
	SUBQ.b	#1, $21(A1)
	MOVE.b	$20(A1), D0
	BRA.b	loc_0000889C
loc_00008870:
	CLR.w	D1
	MOVE.b	$1C(A1), D1
	BEQ.b	loc_000088B6
	ADD.w	D1, D1
	ADD.w	D1, D1
	LEA	loc_00029D38, A4
	MOVEA.l	(A4,D1.w), A4
	MOVE.w	$1E(A1), D1
	MOVE.b	(A4,D1.w), D0
	MOVE.b	D0, $20(A1)
	MOVE.b	$1(A4,D1.w), $21(A1)
	ADDQ.w	#2, $1E(A1)
loc_0000889C:
	EXT.w	D0
	ADD.w	D0, $18(A1)
	MOVE.b	$18(A1), D0
	MOVEQ	#-$0000005C, D1
	BSR.w	loc_00008A32
	MOVE.b	$19(A1), D0
	MOVEQ	#-$00000060, D1
	BSR.w	loc_00008A32
loc_000088B6:
	RTS
loc_000088B8:
	CMPI.b	#$12, $FFFFD10E
	BNE.b	loc_00008916
	TST.w	$FFFFD108
	BEQ.b	loc_00008916
	MOVE.w	$FFFFD104, D0
	CMPI.w	#$000C, D0
	BEQ.w	loc_00008914
	CMPI.w	#$000F, D0
	BEQ.w	loc_00008914
	CMPI.w	#$0012, D0
	BEQ.w	loc_00008914
	CMPI.w	#$0013, D0
	BEQ.w	loc_00008914
	TST.w	$FFFFD106
	BNE.b	loc_00008914
	TST.b	$FFFFD11A
	BNE.b	loc_00008914
	MOVE.b	$1A(A1), D0
	MOVEQ	#-$0000004C, D1
	BSR.w	loc_00008A44
	MOVE.b	$12(A1), D0
	ADDQ.b	#1, D0
	BRA.w	loc_00008EA2
loc_00008914:
	RTS
loc_00008916:
	CLR.b	$21(A1)
	CLR.w	$1E(A1)
	CLR.b	$27(A1)
	CLR.w	$24(A1)
	MOVE.b	$B(A1), $A(A1)
	MOVE.b	$1A(A1), D0
	MOVEQ	#-$0000004C, D1
	BSR.w	loc_00008A44
	MOVEQ	#-$00000010, D0
	MOVEQ	#$00000028, D1
	BRA.w	loc_00008A8A
loc_0000893E:
	CMPI.b	#$12, $FFFFD10E
	BNE.b	loc_00008952
	TST.w	$FFFFD108
	BEQ.b	loc_00008952
	RTS
loc_00008952:
	CLR.b	D0
	MOVEQ	#$00000028, D1
	BRA.w	loc_00008A8A
loc_0000895A:
	CMPI.b	#$12, $FFFFD10E
	BNE.b	loc_0000896E
	TST.w	$FFFFD108
	BEQ.b	loc_0000896E
	RTS
loc_0000896E:
	ADD.b	D4, D4
	EXT.w	D4
	LEA	loc_00008B60, A0
	LEA	(A0,D4.w), A0
	MOVE.w	(A0), D2
	MOVE.b	$E(A1), D0
	EXT.w	D0
	SUBQ.w	#1, D0
	LSL.w	#8, D0
	LSL.w	#3, D0
	OR.w	D0, D2
	MOVE.w	D2, $18(A1)
	MOVE.w	D2, D0
	LSR.w	#8, D0
	MOVEQ	#-$0000005C, D1
	BSR.w	loc_00008A32
	MOVE.b	D2, D0
	MOVEQ	#-$00000060, D1
	BRA.w	loc_00008A32
loc_000089A2:
	CMPI.b	#$12, $FFFFD10E
	BNE.b	loc_000089B6
	TST.w	$FFFFD108
	BEQ.b	loc_000089B6
	RTS
loc_000089B6:
	ADD.b	$1B(A1), D0
	BPL.b	loc_000089BE
	MOVEQ	#$0000007F, D0
loc_000089BE:
	MOVE.b	D0, D5
	LEA	$FFFFD112, A3
	MOVE.w	$FFFFD110, D4
	MOVE.b	(A3,D4.w), D0
	CMPI.b	#7, D0
	BEQ.b	loc_000089E4
	CMPI.b	#5, D0
	BCC.b	loc_000089EC
	CMPI.b	#4, D0
	BEQ.b	loc_00008A04
	BRA.b	loc_000089FC
loc_000089E4:
	MOVEQ	#$00000040, D1
	MOVE.b	D5, D0
	BSR.w	loc_00008A32
loc_000089EC:
	MOVEQ	#$00000048, D1
	MOVE.b	D5, D0
	BSR.w	loc_00008A32
	MOVEQ	#$00000044, D1
	MOVE.b	D5, D0
	BSR.w	loc_00008A32
loc_000089FC:
	MOVEQ	#$0000004C, D1
	MOVE.b	D5, D0
	BRA.w	loc_00008A32
loc_00008A04:
	MOVEQ	#$00000048, D1
	MOVE.b	D5, D0
	BSR.w	loc_00008A32
	MOVEQ	#$0000004C, D1
	MOVE.b	D5, D0
	BRA.w	loc_00008A32
loc_00008A14:
	LEA	loc_00A04000, A4
	CMPI.b	#$30, D1
	BCS.b	loc_00008A30
	BTST.b	#4, $FFFFD10E
	BEQ.b	loc_00008A30
	LEA	loc_00A04002, A4
loc_00008A30:
	RTS
loc_00008A32:
	MOVEM.l	A4/D2/D1/D0, -(A7)
	MOVE.b	$FFFFD10E, D2
	ANDI.b	#$0F, D2
	ADD.b	D2, D1
	BRA.b	loc_00008A5A
loc_00008A44:
	MOVEM.l	A4/D2/D1/D0, -(A7)
	MOVE.b	$FFFFD10E, D2
	ANDI.b	#$0F, D2
	ADD.b	D2, D1
	BRA.b	loc_00008A6C
loc_00008A56:
	MOVEM.l	A4/D2/D1/D0, -(A7)
loc_00008A5A:
	CMPI.b	#$12, $FFFFD10E
	BNE.b	loc_00008A6C
	TST.w	$FFFFD108
	BNE.b	loc_00008A84
loc_00008A6C:
	BSR.b	loc_00008A14
	BSR.w	loc_00008E22
loc_00008A72:
	MOVE.b	D1, (A4)
	NOP
	NOP
	MOVE.b	D0, $1(A4)
	MOVE.w	#0, loc_00A11100
loc_00008A84:
	MOVEM.l	(A7)+, D0/D1/D2/A4
	RTS
loc_00008A8A:
	MOVEM.l	A4/D2/D1/D0, -(A7)
	MOVE.b	$FFFFD10E, D2
	ANDI.b	#$0F, D2
	OR.b	D2, D0
	BTST.b	#4, $FFFFD10E
	BEQ.b	loc_00008AA8
	ORI.b	#4, D0
loc_00008AA8:
	BRA.b	loc_00008A5A
loc_00008AAA:
	BSR.w	loc_00008E22
	MOVE.b	D1, loc_00A04000
	NOP
	NOP
	MOVE.b	D0, loc_00A04001
loc_00008ABE:
	MOVE.w	#0, loc_00A11100
	RTS
loc_00008AC8:
	BSR.w	loc_00008E22
	MOVE.b	D1, loc_00A04002
	NOP
	NOP
	MOVE.b	D0, loc_00A04003
	BRA.b	loc_00008ABE
loc_00008ADE:
	CMPI.b	#$12, $FFFFD10E
	BNE.b	loc_00008AF2
	TST.w	$FFFFD108
	BEQ.b	loc_00008AF2
	RTS
loc_00008AF2:
	MOVE.w	D3, -(A7)
	CLR.w	D0
	MOVEQ	#-$0000004C, D1
	BSR.w	loc_00008A44
	MOVE.w	(A7)+, D3
	ANDI.w	#$00FF, D3
	MULU.w	#$0019, D3
	LEA	loc_00029D66, A3
	LEA	(A3,D3.w), A3
	BSR.w	loc_00008B1A
	MOVEQ	#$0000007F, D0
	BRA.w	loc_000089A2
loc_00008B1A:
	MOVE.b	(A3)+, D0
	ANDI.b	#7, D0
	LEA	$FFFFD112, A4
	MOVE.w	$FFFFD110, D4
	MOVE.b	D0, (A4,D4.w)
	MOVEQ	#-$00000050, D1
	BSR.w	loc_00008A32
	MOVEQ	#$00000030, D1
	MOVEQ	#5, D2
loc_00008B3A:
	MOVE.b	(A3)+, D0
	BSR.w	loc_00008A32
	ADDQ.b	#8, D1
	MOVE.b	(A3)+, D0
	BSR.w	loc_00008A32
	SUBQ.b	#4, D1
	MOVE.b	(A3)+, D0
	BSR.w	loc_00008A32
	ADDQ.b	#8, D1
	MOVE.b	(A3)+, D0
	BSR.w	loc_00008A32
	ADDQ.b	#4, D1
	DBF	D2, loc_00008B3A
	RTS
loc_00008B60:
loc_00008B80:
loc_00008B90:
	MOVE.b	(A0), D0
	CMPI.b	#$FF, D0
	BEQ.b	loc_00008BD6
	CMPI.b	#$F4, D0
	BEQ.b	loc_00008BD6
	BTST.l	#7, D0
	BEQ.b	loc_00008BA8
	BSR.b	loc_00008C14
	BRA.b	loc_00008B90
loc_00008BA8:
	ANDI.b	#$60, D0
	ADD.b	D0, D0
	MOVE.b	$1A(A1), D1
	ANDI.b	#$3F, D1
	OR.b	D1, D0
	MOVE.b	D0, $1A(A1)
	MOVE.b	(A0), D0
	ANDI.b	#$0F, D0
	MOVE.b	D0, (A1)
	BSR.b	loc_00008BDC
	ADDQ.l	#1, A0
	MOVE.b	(A0), D0
	CMPI.b	#$FE, D0
	BNE.b	loc_00008BD4
	BSR.w	loc_00008CE4
loc_00008BD4:
	RTS
loc_00008BD6:
	MOVE.b	#$FF, (A1)
	RTS
loc_00008BDC:
	MOVE.b	(A0), D0
	BTST.l	#4, D0
	BEQ.b	loc_00008BEA
	ADDQ.l	#1, A0
	MOVE.b	(A0), D1
	BRA.b	loc_00008BEE
loc_00008BEA:
	MOVE.b	$10(A1), D1
loc_00008BEE:
	ANDI.b	#7, D0
	CMPI.b	#7, D0
	BEQ.b	loc_00008C06
	CLR.b	$2(A1)
	MOVE.b	D1, $3(A1)
	CLR.w	$4(A1)
	RTS
loc_00008C06:
	CLR.w	$2(A1)
	CLR.b	$4(A1)
	MOVE.b	D1, $5(A1)
	RTS
loc_00008C14:
	MOVE.b	D0, D1
	CMPI.b	#$FE, D0
	BEQ.w	loc_00008CE4
	CMPI.b	#$FD, D0
	BEQ.w	loc_00008D3C
	CMPI.b	#$FC, D0
	BEQ.w	loc_00008CEE
	CMPI.b	#$FB, D0
	BEQ.w	loc_00008D44
	CMPI.b	#$FA, D0
	BEQ.w	loc_00008CB6
	CMPI.b	#$F9, D0
	BEQ.w	loc_00008CC8
	CMPI.b	#$F8, D0
	BEQ.w	loc_00008CAA
	CMPI.b	#$F7, D0
	BEQ.w	loc_00008D5A
	CMPI.b	#$F6, D0
	BEQ.w	loc_00008D64
	CMPI.b	#$F5, D0
	BEQ.w	loc_00008D26
	CMPI.b	#$F3, D0
	BEQ.w	loc_00008CA0
	CMPI.b	#$F2, D0
	BEQ.w	loc_00008D6C
	CMPI.b	#$F1, D0
	BEQ.w	loc_00008D16
	CMPI.b	#$F0, D0
	BEQ.w	loc_00008DA6
	ANDI.b	#$F0, D0
	CMPI.b	#$80, D0
	BEQ.w	loc_00008CFA
	CMPI.b	#$90, D0
	BEQ.w	loc_00008D30
loc_00008C9A:
	JMP	loc_00008C9A
loc_00008CA0:
	ADDQ.l	#1, A0
	MOVE.b	(A0)+, $FFFFD11A
	RTS
loc_00008CAA:
	MOVEA.l	$14(A1), A4
	MOVEA.l	(A4)+, A0
	MOVE.l	A4, $14(A1)
	RTS
loc_00008CB6:
	ADDQ.l	#1, A0
	CLR.w	D0
	MOVE.b	(A0)+, D0
	MOVE.b	(A0)+, D1
	LSL.w	#8, D1
	OR.w	D1, D0
	LEA	-$3(A0,D0.w), A0
	RTS
loc_00008CC8:
	ADDQ.l	#1, A0
	CLR.w	D3
	MOVE.b	(A0)+, D3
	MOVE.b	(A0)+, D4
	LSL.w	#8, D4
	OR.w	D3, D4
	MOVEA.l	$14(A1), A4
	MOVE.l	A0, -(A4)
	MOVE.l	A4, $14(A1)
	LEA	-$3(A0,D4.w), A0
	RTS
loc_00008CE4:
	ADDQ.l	#1, A0
	MOVE.b	#$26, $6(A1)
	RTS
loc_00008CEE:
	ADDQ.l	#1, A0
	MOVE.b	(A0)+, D3
	MOVE.b	D3, $12(A1)
	BRA.w	loc_00008ADE
loc_00008CFA:
	MOVE.b	(A0)+, D0
	ANDI.w	#$000F, D0
	LEA	loc_00008B80, A3
	MOVE.b	(A3,D0.w), D0
	MOVE.b	D0, $A(A1)
	MOVE.b	D0, $B(A1)
	BRA.w	loc_000089A2
loc_00008D16:
	ADDQ.l	#1, A0
	MOVE.b	(A0)+, D0
	MOVE.b	D0, $A(A1)
	MOVE.b	D0, $B(A1)
	BRA.w	loc_000089A2
loc_00008D26:
	ADDQ.l	#1, A0
	MOVE.b	(A0)+, D0
	MOVEQ	#$00000026, D1
	BRA.w	loc_00008A56
loc_00008D30:
	MOVE.b	(A0)+, D0
	ANDI.b	#$0F, D0
	MOVE.b	D0, $E(A1)
	RTS
loc_00008D3C:
	ADDQ.l	#1, A0
	MOVE.b	(A0)+, $10(A1)
	RTS
loc_00008D44:
	ADDQ.l	#1, A0
	MOVE.b	(A0)+, D0
	BMI.b	loc_00008D50
	MOVE.b	D0, $1C(A1)
	RTS
loc_00008D50:
	ANDI.b	#$7F, D0
	MOVE.b	D0, $22(A1)
	RTS
loc_00008D5A:
	ADDQ.l	#1, A0
	MOVE.b	(A0)+, D0
	MOVEQ	#$00000022, D1
	BRA.w	loc_00008A56
loc_00008D64:
	ADDQ.l	#1, A0
	MOVE.b	(A0)+, $1A(A1)
	RTS
loc_00008D6C:
	ADDQ.l	#1, A0
	CLR.w	D0
	TST.b	(A0)+
	BEQ.b	loc_00008D78
	MOVE.w	#$0080, D0
loc_00008D78:
	TST.w	$FFFFD106
	BNE.b	loc_00008D92
	MOVE.w	D0, $FFFFD108
	CLR.w	$FFFFD10A
	MOVEQ	#$0000002B, D1
	BRA.w	loc_00008AAA
loc_00008D92:
	MOVE.w	$FFFFD10A, D1
	ANDI.w	#$FF00, D1
	OR.b	D1, D0
	MOVE.w	D0, $FFFFD10A
	RTS
loc_00008DA6:
	ADDQ.l	#1, A0
	CLR.w	$FFFFD104
	RTS
loc_00008DD6:
	ORI	#$0700, SR
	BSR.w	loc_00008EB6
	BSR.w	loc_00008DEC
	MOVE.w	#0, loc_00A11100
	RTS
loc_00008DEC:
	MOVE.b	(A0)+, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	(A0)+, (A1)+
	MOVE.b	(A0)+, (A1)+
	DBF	D1, loc_00008DEC
	CLR.b	D1
	MOVE.b	D1, loc_00A01FF8
	MOVE.b	D1, loc_00A01FFC
	MOVE.b	D1, loc_00A01FFD
	MOVE.b	D1, loc_00A01FFE
	MOVE.b	D1, loc_00A01FFF
	RTS
loc_00008E22:
	BSR.w	loc_00008EB6
loc_00008E26:
	BTST.b	#7, loc_00A01FFD
	BEQ.b	loc_00008E4A
	MOVE.w	#0, loc_00A11100
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	BRA.b	loc_00008E22
loc_00008E4A:
	RTS
loc_00008E4C:
	BSR.b	loc_00008E22
	MOVE.b	loc_00A01FF8, D0
	CLR.b	loc_00A01FF8
	MOVE.w	#0, loc_00A11100
	CMPI.b	#$45, D0
	BNE.b	loc_00008EA0
	LEA	loc_0009E100, A0
	LEA	loc_00A00100, A1
	MOVE.w	#$03DB, D1
	BSR.w	loc_00008DD6
	MOVE.w	$FFFFD10A, D0
	ANDI.w	#$00FF, D0
	MOVE.w	D0, $FFFFD108
	CLR.w	$FFFFD10A
	MOVEQ	#$0000002B, D1
	BSR.w	loc_00008AAA
	CLR.w	$FFFFD106
	RTS
loc_00008EA0:
	RTS
loc_00008EA2:
	BSR.w	loc_00008EB6
	MOVE.b	D0, loc_00A01FFF
	MOVE.w	#0, loc_00A11100
	RTS

loc_00008EB6:
	MOVE.w	#$0100, loc_00A11100
	MOVE.w	#$0100, loc_00A11200
loc_00008EC6:
	BTST.b	#0, loc_00A11100
	BNE.b	loc_00008EC6
	RTS

loc_00008FDE:
	LSL.w	#2, D0
	MOVEA.l	loc_00008FE6(PC,D0.w), A0
	RTS
loc_00008FE6:
loc_00008FEE:
	MOVE.w	$FFFFD2B8.w, D0
	BMI.b	loc_00009026
	BEQ.b	loc_0000900C
	BSR.w	loc_00008FDE
	CMPI.b	#$10, $4(A0)
	BNE.b	loc_00009006
	ADDA.w	#$0022, A0
loc_00009006:
	ADDA.w	#$0024, A0
	BRA.b	loc_00009048
loc_0000900C:
	LEA	$FFFFE800.w, A1
	MOVE.b	#1, $3(A1)
	ADDQ.w	#8, A1
	MOVE.b	#2, $3(A1)
	ADDQ.w	#8, A1
	CLR.l	(A1)
	CLR.l	$4(A1)
loc_00009026:
	RTS
loc_00009028:
	LEA	$FFFFFBA0.w, A1
	MOVEQ	#$0000000F, D0
loc_0000902E:
	MOVE.w	(A0)+, (A1)+
	DBF	D0, loc_0000902E
	RTS
loc_00009036:
	MOVE.w	D0, $FFFFD2B8.w
	TST.w	D0
	BMI.b	loc_00009026
	BEQ.b	loc_0000900C
	BSR.w	loc_00008FDE
	MOVEA.l	(A0)+, A1
	BSR.b	loc_00009028
loc_00009048:
	BSR.b	loc_0000900C
	MOVEQ	#2, D7
loc_0000904C:
	CMPI.b	#$FF, (A0)
	BEQ.w	loc_000090DA
	CLR.w	D0
	MOVE.b	(A0)+, D0
	MOVE.b	(A0)+, D1
	LEA	$FFFFD2BA.w, A2
	CMP.b	(A2,D0.w), D1
	BNE.w	loc_000090E2
	CMPI.b	#$FF, $1(A0)
	BNE.b	loc_00009078
	MOVEA.l	(A0)+, A3
	MOVE.w	(A3), D0
	MOVE.w	$4(A3), D1
	BRA.b	loc_0000907C
loc_00009078:
	MOVE.w	(A0)+, D0
	MOVE.w	(A0)+, D1
loc_0000907C:
	MOVE.b	(A0)+, D6
	MOVE.b	D6, D5
	ANDI.b	#$7F, D6
loc_00009084:
	CLR.w	D2
	MOVE.b	(A0)+, D2
	ADD.w	D1, D2
	MOVE.w	D2, (A1)+
	MOVE.b	(A0)+, (A1)+
	ADDQ.w	#1, D7
	MOVE.b	D7, (A1)+
	MOVE.b	(A0)+, D2
	LSL.w	#8, D2
	MOVE.b	(A0)+, D2
	ADDI.w	#$2100, D2
	MOVE.w	D2, (A1)+
	CLR.w	D2
	MOVE.b	(A0)+, D2
	ADD.w	D0, D2
	TST.b	D5
	BMI.b	loc_000090B8
	SUB.w	$FFFFF622.w, D2
	CMPI.w	#$0020, D2
	BCS.b	loc_000090CE
	CMPI.w	#$01E0, D2
	BCC.b	loc_000090CE
loc_000090B8:
	MOVE.w	D2, (A1)+
loc_000090BA:
	SUBQ.b	#1, D6
	BNE.b	loc_00009084
loc_000090BE:
	MOVE.l	A0, D0
	ADDQ.l	#1, D0
	ANDI.l	#$00FFFFFE, D0
	MOVEA.l	D0, A0
	BRA.w	loc_0000904C
loc_000090CE:
	SUBQ.w	#1, D7
	SUBQ.w	#6, A1
	CLR.l	(A1)
	CLR.l	$4(A1)
	BRA.b	loc_000090BA
loc_000090DA:
	CLR.l	D7
	MOVE.l	D7, (A1)+
	MOVE.l	D7, (A1)+
	RTS
loc_000090E2:
	ADDA.w	#4, A0
	CLR.w	D6
	MOVE.b	(A0)+, D6
	ANDI.b	#$7F, D6
	MULU.w	#5, D6
	LEA	(A0,D6.w), A0
	BRA.b	loc_000090BE
loc_000090F8:
	MOVE.l	#$70000003, loc_00C00004
	LEA	loc_0002EED2, A0
	BRA.w	loc_00008108
loc_0000910C:
	MOVE.l	#$70000003, loc_00C00004
	LEA	loc_0002EDBC, A0
	BRA.w	loc_00008108
loc_00009120:
	MOVE.l	#$7E000003, loc_00C00004
	LEA	loc_0002EE02, A0
	BRA.w	loc_00008108
loc_000092C6:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.w	#0, $FFFFD31A
	MOVE.l	#0, $FFFFD31C
	MOVE.l	#$FFFFE800, $FFFF8210
	MOVE.w	#0, $FFFF8214
	MOVE.l	#0, $FFFFF61C.w
	MOVE.l	#0, $FFFFF620.w
	BSR.w	loc_0000A380
	BSR.w	loc_00007FCE
	MOVE.w	#$0146, $FFFFD322
	MOVE.w	#1, $FFFFD324
	MOVE.w	#0, $FFFFD320
	MOVE.w	#0, $FFFFD326
	MOVE.w	#0, $FFFFD328
	MOVE.l	#0, $FFFFD32A
	MOVE.w	#0, $FFFFD32E
	LEA	loc_0001F868, A1
	BSR.w	loc_0000A1AA
	BSR.w	loc_00007D64
	BSR.w	loc_0000A180
	MOVE.l	#$65000000, loc_00C00004
	LEA	loc_0001AF20, A0
	BSR.w	loc_00008108
	MOVE.l	#$7D000002, loc_00C00004
	LEA	loc_0001A08A, A0
	BSR.w	loc_00008108
	MOVE.l	#$50000003, loc_00C00004
	LEA	loc_0001503C, A0
	BSR.w	loc_00008108
	MOVE.l	#$70000003, loc_00C00004
	LEA	loc_00015968, A0
	BSR.w	loc_00008108
	MOVEQ	#7, D0
	BSR.w	loc_000083F4
	ANDI	#$FAFF, SR
	LEA	loc_0000A4A8, A1
	MOVE.l	#$40000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	BSR.w	loc_0000A152
	BSR.w	loc_00009F88
	BSR.w	loc_0000A09A
	MOVEQ	#7, D0
loc_000093CE:
	LEA	loc_0001F838, A1
	BSR.w	loc_0000A1C6
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D0, loc_000093CE
	MOVEQ	#$00000077, D7
loc_000093F2:
	LEA	$FFFFD31C, A0
	MOVE.l	(A0), D0
	ANDI.l	#$0000007F, D0
	CMPI.l	#$0000007F, D0
	BNE.b	loc_0000940C
	BSR.w	loc_0000A0BE
loc_0000940C:
	ANDI.l	#7, D0
	CMPI.l	#7, D0
	BNE.b	loc_0000941E
	BSR.w	loc_0000A070
loc_0000941E:
	BSR.w	loc_0000A152
	BSR.w	loc_00009F88
	BSR.w	loc_0000A09A
	BSR.w	loc_00007D64
	ADDQ.l	#1, $FFFFD31C
	DBF	D7, loc_000093F2
	MOVEQ	#$00000043, D7
loc_0000943A:
	LEA	$FFFFD31C, A0
	MOVE.l	(A0), D0
	ANDI.l	#$0000007F, D0
	CMPI.l	#$0000007F, D0
	BNE.b	loc_00009454
	BSR.w	loc_0000A0BE
loc_00009454:
	ANDI.l	#7, D0
	CMPI.l	#7, D0
	BNE.b	loc_00009466
	BSR.w	loc_0000A070
loc_00009466:
	ANDI.l	#1, D0
	CMPI.l	#1, D0
	BNE.b	loc_00009478
	BSR.w	loc_0000A08A
loc_00009478:
	BSR.w	loc_0000A152
	BSR.w	loc_00009F88
	BSR.w	loc_0000A000
	BSR.w	loc_0000A09A
	BSR.w	loc_00007D64
	ADDQ.l	#1, $FFFFD31C
	DBF	D7, loc_0000943A
	MOVEQ	#$0000003B, D7
	LEA	loc_0001F858, A1
	BSR.w	loc_0000A1AA
loc_000094A2:
	LEA	$FFFFD31C, A0
	MOVE.l	(A0), D0
	ANDI.l	#$0000007F, D0
	CMPI.l	#$0000007F, D0
	BNE.b	loc_000094BC
	BSR.w	loc_0000A0BE
loc_000094BC:
	ANDI.l	#7, D0
	CMPI.l	#7, D0
	BNE.b	loc_000094CE
	BSR.w	loc_0000A070
loc_000094CE:
	BSR.w	loc_0000A152
	BSR.w	loc_00009F88
	BSR.w	loc_0000A09A
	BSR.w	loc_00007D64
	ADDQ.l	#1, $FFFFD31C
	DBF	D7, loc_000094A2
	MOVE.l	#$65000000, loc_00C00004
	LEA	loc_0001631C, A0
	BSR.w	loc_00008108
	MOVEQ	#$0000003B, D7
loc_000094FE:
	LEA	$FFFFD31C, A0
	MOVE.l	(A0), D0
	ANDI.l	#$0000007F, D0
	CMPI.l	#$0000007F, D0
	BNE.b	loc_00009518
	BSR.w	loc_0000A0BE
loc_00009518:
	ANDI.l	#7, D0
	CMPI.l	#7, D0
	BNE.b	loc_0000952A
	BSR.w	loc_0000A070
loc_0000952A:
	BSR.w	loc_0000A152
	BSR.w	loc_00009F88
	BSR.w	loc_0000A09A
	BSR.w	loc_00007D64
	ADDQ.l	#1, $FFFFD31C
	DBF	D7, loc_000094FE
	MOVEQ	#4, D7
loc_00009546:
	BSR.w	loc_00007D64
	DBF	D7, loc_00009546
	MOVEQ	#$0000005A, D7
loc_00009550:
	LEA	$FFFFD31C, A0
	MOVE.l	(A0), D0
	ANDI.l	#$0000007F, D0
	CMPI.l	#$0000007F, D0
	BNE.b	loc_0000956A
	BSR.w	loc_0000A0BE
loc_0000956A:
	ANDI.l	#7, D0
	CMPI.l	#7, D0
	BNE.b	loc_0000957C
	BSR.w	loc_0000A070
loc_0000957C:
	ANDI.l	#3, D0
	CMPI.l	#3, D0
	BNE.b	loc_0000958E
	BSR.w	loc_0000A092
loc_0000958E:
	BSR.w	loc_0000A152
	BSR.w	loc_00009F88
	BSR.w	loc_0000A040
	BSR.w	loc_0000A09A
	BSR.w	loc_00007D64
	ADDQ.l	#1, $FFFFD31C
	DBF	D7, loc_00009550
	MOVEQ	#7, D7
loc_000095AE:
	BSR.w	loc_0000A2B4
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_000095AE
	LEA	loc_0001F868, A1
	BSR.w	loc_0000A1AA
	MOVEQ	#$0000000E, D7
loc_000095D2:
	BSR.w	loc_00007D64
	DBF	D7, loc_000095D2
	MOVE.w	#$8218, loc_00C00004
	MOVE.w	#$8404, loc_00C00004
	MOVE.w	#$9010, loc_00C00004
	MOVE.l	#$60000002, loc_00C00004
	LEA	loc_0001A156, A0
	BSR.w	loc_00008108
	LEA	loc_0001FE7E, A1
	MOVE.l	#$40000002, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001F, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001FE7E, A1
	MOVE.l	#$48000002, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001F, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0000A4A8, A1
	MOVE.l	#$60000001, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001FAF0, A0
	MOVE.w	#$E500, D3
	BSR.w	loc_0000A338
	MOVEQ	#7, D0
loc_00009652:
	LEA	loc_0001F878, A1
	BSR.w	loc_0000A1C6
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D0, loc_00009652
	BSR.w	loc_0000A152
	BSR.w	loc_00009F88
	BSR.w	loc_0000A040
	BSR.w	loc_00007D64
	MOVEQ	#0, D0
	MOVE.l	#0, $FFFFF61C.w
loc_0000968E:
	MOVE.w	D0, $FFFFF61E.w
	MOVEQ	#5, D1
loc_00009694:
	BSR.w	loc_00007D64
	DBF	D1, loc_00009694
	ADDQ.l	#1, D0
	CMPI.w	#$0158, D0
	BNE.b	loc_000096AC
	MOVE.b	#$40, $FFFFD11A
loc_000096AC:
	CMPI.w	#$0158, D0
	BCS.b	loc_000096B6
	BSR.w	loc_0000A27A
loc_000096B6:
	CMPI.w	#$0168, D0
	BNE.b	loc_0000968E
	MOVE.l	#0, $FFFFF61C.w
	MOVE.w	#$8230, loc_00C00004
	MOVE.w	#$8407, loc_00C00004
	MOVE.w	#$9000, loc_00C00004
	MOVE.w	#$8730, loc_00C00004
	BSR.w	loc_00007FCE
	MOVE.w	#1, $FFFFD31A
	BSR.w	loc_0000A180
	MOVE.l	#$46000001, loc_00C00004
	LEA	loc_0001CA22, A0
	BSR.w	loc_00008108
	MOVE.l	#$45000002, loc_00C00004
	LEA	loc_0001E442, A0
	BSR.w	loc_00008108
	MOVE.l	#$60000002, loc_00C00004
	LEA	loc_0001A156, A0
	BSR.w	loc_00008108
	BSR.w	loc_0000A152
	LEA	loc_0000ABA8, A1
	MOVE.l	#$40000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001E3E0, A0
	MOVE.w	#$0080, D0
	MOVE.w	#$00C7, D1
	MOVE.w	#$0428, D3
	MOVE.w	#$2000, D5
	BSR.w	loc_0000A0F6
	LEA	loc_0001C948, A0
	MOVE.w	#$00C0, D0
	MOVE.w	#$0080, D1
	MOVE.w	#$0230, D3
	MOVE.w	#0, D5
	BSR.w	loc_0000A0F6
	MOVEQ	#$00000015, D0
	BSR.w	loc_000083F4
	ANDI	#$FAFF, SR
	BSR.w	loc_0000A35C
	MOVEQ	#7, D7
loc_0000978C:
	LEA	loc_0001F888, A1
	BSR.w	loc_0000A220
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_0000978C
	MOVE.l	#$0000012C, D7
loc_000097B0:
	BSR.w	loc_00007D64
	DBF	D7, loc_000097B0
	MOVEQ	#7, D7
loc_000097BA:
	BSR.w	loc_0000A2B4
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_000097BA
	MOVEQ	#7, D7
loc_000097D4:
	LEA	loc_0001F8C8, A1
	BSR.w	loc_0000A1C6
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_000097D4
	LEA	loc_0001FE7E, A1
	MOVE.l	#$60000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001FB8A, A0
	MOVE.w	#$E500, D3
	BSR.w	loc_0000A338
	MOVE.l	#$0000012B, D7
loc_0000981A:
	LEA	loc_0001F8C8, A1
	BSR.w	loc_00007D64
	DBF	D7, loc_0000981A
	LEA	loc_0001FE7E, A1
	MOVE.l	#$60000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001FC32, A0
	MOVE.w	#$E500, D3
	BSR.w	loc_0000A338
	MOVE.l	#$0000012C, D0
loc_00009850:
	BSR.w	loc_00007D64
	DBF	D0, loc_00009850
	MOVEQ	#7, D0
loc_0000985A:
	BSR.w	loc_0000A27A
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D0, loc_0000985A
	BSR.w	loc_00007FCE
	MOVE.w	#4, $FFFFD31A
	BSR.w	loc_0000A180
	MOVE.l	#$70000002, loc_00C00004
	LEA	loc_0001A156, A0
	ANDI	#$FAFF, SR
	BSR.w	loc_00008108
	BSR.w	loc_0000A152
	LEA	loc_0000B2A8, A1
	MOVE.l	#$40000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	MOVEQ	#7, D7
loc_000098B4:
	LEA	loc_0001F898, A1
	BSR.w	loc_0000A220
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_000098B4
	MOVE.l	#$0000012C, D7
loc_000098D8:
	BSR.w	loc_00007D64
	DBF	D7, loc_000098D8
	MOVEQ	#7, D7
loc_000098E2:
	BSR.w	loc_0000A2B4
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_000098E2
	MOVEQ	#7, D7
loc_000098FC:
	LEA	loc_0001F8B8, A1
	BSR.w	loc_0000A1C6
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_000098FC
	LEA	loc_0002067E, A1
	MOVE.l	#$60000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001FCF2, A0
	MOVE.w	#$E580, D3
	BSR.w	loc_0000A338
	MOVE.l	#$0000012B, D7
loc_00009942:
	BSR.w	loc_00007D64
	DBF	D7, loc_00009942
	LEA	loc_0002067E, A1
	MOVE.l	#$60000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001FD60, A0
	MOVE.w	#$E580, D3
	BSR.w	loc_0000A338
	MOVE.l	#$0000012C, D0
loc_00009972:
	BSR.w	loc_00007D64
	DBF	D0, loc_00009972
	MOVEQ	#7, D0
loc_0000997C:
	BSR.w	loc_0000A27A
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D0, loc_0000997C
	BSR.w	loc_00007FCE
	MOVE.w	#$9010, loc_00C00004
	MOVE.w	#$0180, $FFFFD330
	MOVE.w	#5, $FFFFD31A
	BSR.w	loc_0000A180
	MOVE.l	#$70000000, loc_00C00004
	LEA	loc_0001EBCE, A0
	BSR.w	loc_00008108
	MOVE.l	#$60000002, loc_00C00004
	LEA	loc_0001A156, A0
	ANDI	#$FAFF, SR
	BSR.w	loc_00008108
	MOVE.l	#$78000002, loc_00C00004
	LEA	loc_0001AA4E, A0
	BSR.w	loc_00008108
	BSR.w	loc_0000A152
	LEA	loc_0000B9A8, A1
	MOVE.l	#$40000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000003F, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001EAC2, A0
	MOVE.w	#$0180, D0
	MOVE.w	#$0130, D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	BSR.w	loc_0000A0F6
	MOVEQ	#7, D7
loc_00009A28:
	LEA	loc_0001F8A8, A1
	BSR.w	loc_0000A220
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_00009A28
	MOVE.l	#0, $FFFFF61C.w
	MOVE.l	#$000000E0, D7
loc_00009A54:
	ADDQ.w	#1, $FFFFF61C.w
	CMPI.w	#$00A2, $FFFFF61C.w
	BLT.b	loc_00009A86
	BSR.w	loc_0000A152
	LEA	loc_0001EAC2, A0
	SUBQ.w	#2, $FFFFD330
	MOVE.w	$FFFFD330, D0
	MOVE.w	#$0130, D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	BSR.w	loc_0000A0F6
loc_00009A86:
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_00009A54
	NOP
	NOP
	NOP
	LEA	$FFFFD3DA, A6
	MOVE.l	#$0001EAC2, (A6)
	MOVE.w	#0, $FFFFD3D4
	MOVE.w	#0, $FFFFD3D6
	MOVE.w	#0, $FFFFD3D8
	MOVE.l	#0, $FFFFD31C
	MOVEQ	#$0000005A, D7
	LEA	$FFFFD334, A0
	MOVE.l	#$016A0000, (A0)+
	MOVE.l	#$00FD0000, (A0)+
	MOVE.l	#$00008000, (A0)+
	MOVE.l	#$00010000, (A0)+
	MOVE.l	#$0001EAA4, (A0)
	LEA	$FFFFD348, A0
	MOVE.l	#$01650000, (A0)+
	MOVE.l	#$01000000, (A0)+
	MOVE.l	#$00010000, (A0)+
	MOVE.l	#$00008000, (A0)+
	MOVE.l	#$0001EAAA, (A0)
	LEA	$FFFFD35C, A0
	MOVE.l	#$016F0000, (A0)+
	MOVE.l	#$00FF0000, (A0)+
	MOVE.l	#$00018000, (A0)+
	MOVE.l	#$0000C000, (A0)+
	MOVE.l	#$0001EAB0, (A0)
	LEA	$FFFFD370, A0
	MOVE.l	#$01620000, (A0)+
	MOVE.l	#$01050000, (A0)+
	MOVE.l	#$00010000, (A0)+
	MOVE.l	#$00004000, (A0)+
	MOVE.l	#$0001EAB6, (A0)
	LEA	$FFFFD384, A0
	MOVE.l	#$016A0000, (A0)+
	MOVE.l	#$01030000, (A0)+
	MOVE.l	#$00020000, (A0)+
	MOVE.l	#$00010000, (A0)+
	MOVE.l	#$0001EABC, (A0)
	LEA	$FFFFD398, A0
	MOVE.l	#$01720000, (A0)+
	MOVE.l	#$01040000, (A0)+
	MOVE.l	#$00018000, (A0)+
	MOVE.l	#$00014000, (A0)+
	MOVE.l	#$0001EAA4, (A0)
	LEA	$FFFFD3AC, A0
	MOVE.l	#$01660000, (A0)+
	MOVE.l	#$01070000, (A0)+
	MOVE.l	#$00028000, (A0)+
	MOVE.l	#$00008000, (A0)+
	MOVE.l	#$0001EAAA, (A0)
	LEA	$FFFFD3C0, A0
	MOVE.l	#$016C0000, (A0)+
	MOVE.l	#$01060000, (A0)+
	MOVE.l	#$00020000, (A0)+
	MOVE.l	#$00018000, (A0)+
	MOVE.l	#$0001EAB0, (A0)
loc_00009BE8:
	LEA	$FFFFD31C, A0
	MOVE.l	(A0), D0
	ANDI.l	#$0000000F, D0
	CMPI.l	#$0000000F, D0
	BNE.b	loc_00009C02
	BSR.w	loc_00009F46
loc_00009C02:
	ANDI.l	#7, D0
	CMPI.l	#7, D0
	BNE.b	loc_00009C14
	BSR.w	loc_00009EF6
loc_00009C14:
	ANDI.l	#3, D0
	CMPI.l	#3, D0
	BNE.b	loc_00009C26
	BSR.w	loc_00009EA6
loc_00009C26:
	LEA	$FFFFD3DA, A6
	CMPI.l	#$00000055, D7
	BNE.b	loc_00009C3A
	MOVE.l	#$0001EB0A, (A6)
loc_00009C3A:
	CMPI.l	#$00000052, D7
	BNE.b	loc_00009C48
	MOVE.l	#$0001EB5C, (A6)
loc_00009C48:
	CMPI.l	#$0000004D, D7
	BNE.b	loc_00009C56
	MOVE.l	#$0001EB0A, (A6)
loc_00009C56:
	CMPI.l	#$0000003D, D7
	BNE.b	loc_00009C64
	MOVE.l	#$0001EAC2, (A6)
loc_00009C64:
	CMPI.l	#$0000003A, D7
	BGT.b	loc_00009C90
	MOVE.l	(A0), D0
	ANDI.l	#$00000013, D0
	CMPI.l	#$00000013, D0
	BNE.b	loc_00009C82
	MOVE.l	#$0001EB0A, (A6)
loc_00009C82:
	CMPI.l	#9, D0
	BNE.b	loc_00009C90
	MOVE.l	#$0001EAC2, (A6)
loc_00009C90:
	BSR.w	loc_0000A152
	LEA	$FFFFD3DA, A1
	MOVEA.l	(A1), A0
	MOVE.w	#$0100, D0
	MOVE.w	#$0130, D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	BSR.w	loc_0000A0F6
	LEA	$FFFFD334, A1
	MOVEA.l	$10(A1), A0
	MOVE.w	$4(A1), D0
	MOVE.w	(A1), D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	MOVE.l	$8(A1), D2
	SUB.l	D2, (A1)
	MOVE.l	$C(A1), D2
	SUB.l	D2, $4(A1)
	BSR.w	loc_0000A0F6
	LEA	$FFFFD348, A1
	MOVEA.l	$10(A1), A0
	MOVE.w	$4(A1), D0
	MOVE.w	(A1), D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	MOVE.l	$8(A1), D2
	SUB.l	D2, (A1)
	MOVE.l	$C(A1), D2
	SUB.l	D2, $4(A1)
	BSR.w	loc_0000A0F6
	LEA	$FFFFD35C, A1
	MOVEA.l	$10(A1), A0
	MOVE.w	$4(A1), D0
	MOVE.w	(A1), D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	MOVE.l	$8(A1), D2
	SUB.l	D2, (A1)
	MOVE.l	$C(A1), D2
	SUB.l	D2, $4(A1)
	BSR.w	loc_0000A0F6
	LEA	$FFFFD370, A1
	MOVEA.l	$10(A1), A0
	MOVE.w	$4(A1), D0
	MOVE.w	(A1), D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	MOVE.l	$8(A1), D2
	SUB.l	D2, (A1)
	MOVE.l	$C(A1), D2
	SUB.l	D2, $4(A1)
	BSR.w	loc_0000A0F6
	LEA	$FFFFD384, A1
	MOVEA.l	$10(A1), A0
	MOVE.w	$4(A1), D0
	MOVE.w	(A1), D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	MOVE.l	$8(A1), D2
	SUB.l	D2, (A1)
	MOVE.l	$C(A1), D2
	SUB.l	D2, $4(A1)
	BSR.w	loc_0000A0F6
	LEA	$FFFFD398, A1
	MOVEA.l	$10(A1), A0
	MOVE.w	$4(A1), D0
	MOVE.w	(A1), D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	MOVE.l	$8(A1), D2
	SUB.l	D2, (A1)
	MOVE.l	$C(A1), D2
	SUB.l	D2, $4(A1)
	BSR.w	loc_0000A0F6
	LEA	$FFFFD3AC, A1
	MOVEA.l	$10(A1), A0
	MOVE.w	$4(A1), D0
	MOVE.w	(A1), D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	MOVE.l	$8(A1), D2
	SUB.l	D2, (A1)
	MOVE.l	$C(A1), D2
	SUB.l	D2, $4(A1)
	BSR.w	loc_0000A0F6
	LEA	$FFFFD3C0, A1
	MOVEA.l	$10(A1), A0
	MOVE.w	$4(A1), D0
	MOVE.w	(A1), D1
	MOVE.w	#$0180, D3
	MOVE.w	#0, D5
	MOVE.l	$8(A1), D2
	SUB.l	D2, (A1)
	MOVE.l	$C(A1), D2
	SUB.l	D2, $4(A1)
	BSR.w	loc_0000A0F6
	ANDI	#$FAFF, SR
	BSR.w	loc_00007D64
	ORI	#$2700, SR
	ADDQ.l	#1, $FFFFD31C
	DBF	D7, loc_00009BE8
	MOVEQ	#7, D7
loc_00009E18:
	BSR.w	loc_0000A2B4
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_00009E18
	MOVEQ	#7, D7
loc_00009E32:
	LEA	loc_0001F8D8, A1
	BSR.w	loc_0000A1C6
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D7, loc_00009E32
	LEA	loc_0001FE7E, A1
	MOVE.l	#$60000003, D0
	MOVEQ	#$0000001F, D1
	MOVEQ	#$0000001B, D2
	BSR.w	loc_0000A2EE
	LEA	loc_0001FE3A, A0
	MOVE.w	#$E500, D3
	BSR.w	loc_0000A338
	MOVE.l	#$00000384, D0
loc_00009E78:
	BSR.w	loc_00007D64
	DBF	D0, loc_00009E78
	MOVEQ	#7, D0
loc_00009E82:
	BSR.w	loc_0000A27A
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	BSR.w	loc_00007D64
	DBF	D0, loc_00009E82
	MOVEQ	#0, D0
	BSR.w	loc_000083F4
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00009EA6:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFD3D4, A0
	MOVEQ	#0, D0
	MOVE.w	(A0), D0
	LEA	loc_0001EA04, A1
	MOVE.l	(A1,D0.w), $FFFFD344
	LEA	loc_0001EA40, A1
	MOVE.l	(A1,D0.w), $FFFFD380
	LEA	loc_0001EA7C, A1
	MOVE.l	(A1,D0.w), $FFFFD3BC
	ADDQ.l	#4, D0
	CMPI.l	#$00000011, D0
	BLT.b	loc_00009EEA
	MOVEQ	#0, D0
loc_00009EEA:
	MOVE.w	D0, $FFFFD3D4
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00009EF6:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFD3D6, A0
	MOVEQ	#0, D0
	MOVE.w	(A0), D0
	LEA	loc_0001EA18, A1
	MOVE.l	(A1,D0.w), $FFFFD358
	LEA	loc_0001EA54, A1
	MOVE.l	(A1,D0.w), $FFFFD394
	LEA	loc_0001EA90, A1
	MOVE.l	(A1,D0.w), $FFFFD3D0
	ADDQ.l	#4, D0
	CMPI.l	#$00000011, D0
	BLT.b	loc_00009F3A
	MOVEQ	#0, D0
loc_00009F3A:
	MOVE.w	D0, $FFFFD3D6
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00009F46:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFD3D8, A0
	MOVEQ	#0, D0
	MOVE.w	(A0), D0
	LEA	loc_0001EA2C, A1
	MOVE.l	(A1,D0.w), $FFFFD36C
	LEA	loc_0001EA68, A1
	MOVE.l	(A1,D0.w), $FFFFD3A8
	ADDQ.l	#4, D0
	CMPI.l	#$00000011, D0
	BLT.b	loc_00009F7C
	MOVEQ	#0, D0
loc_00009F7C:
	MOVE.w	D0, $FFFFD3D8
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_00009F88:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVEQ	#1, D6
loc_00009F8E:
	MOVE.w	$FFFFD322, D0
	MOVE.w	#$0100, D1
	CMPI.w	#0, D6
	BNE.b	loc_00009FA2
	MOVE.w	#$0080, D1
loc_00009FA2:
	MOVE.w	$FFFFD320, D2
	ANDI.w	#3, D2
	CMPI.w	#0, D2
	BNE.b	loc_00009FBC
	MOVE.w	#$0680, D3
	LEA	loc_00014FDA, A0
loc_00009FBC:
	CMPI.w	#1, D2
	BNE.b	loc_00009FCC
	MOVE.w	#$0680, D3
	LEA	loc_00014FF0, A0
loc_00009FCC:
	CMPI.w	#2, D2
	BNE.b	loc_00009FDC
	MOVE.w	#$0780, D3
	LEA	loc_00015006, A0
loc_00009FDC:
	CMPI.w	#3, D2
	BNE.b	loc_00009FEC
	MOVE.w	#$0680, D3
	LEA	loc_00014FF0, A0
loc_00009FEC:
	MOVE.w	#$2000, D5
	BSR.w	loc_0000A0F6
	DBF	D6, loc_00009F8E
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_0000A000:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVEQ	#0, D6
	MOVE.w	$FFFFD326, D6
	LEA	loc_0001FAAC, A0
	MOVE.w	(A0,D6.w), D0
	LEA	loc_0001FA68, A0
	MOVE.w	(A0,D6.w), D1
	MOVE.w	#$0128, D3
	MOVE.w	#$8000, D5
	LEA	loc_0001AC9A, A1
	ADD.w	D6, D6
	MOVEA.l	(A1,D6.w), A0
	BSR.w	loc_0000A0F6
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_0000A040:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVEQ	#0, D6
	MOVE.w	$FFFFD328, D6
	MOVE.w	#$00C8, D0
	MOVE.w	#$00B0, D1
	MOVE.w	#$0128, D3
	MOVE.w	#0, D5
	LEA	loc_00015E30, A1
	MOVEA.l	(A1,D6.w), A0
	BSR.w	loc_0000A0F6
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_0000A070:
	ADDQ.w	#1, $FFFFD320
	CMPI.w	#4, $FFFFD320
	BLT.b	loc_0000A088
	MOVE.w	#0, $FFFFD320
loc_0000A088:
	RTS
loc_0000A08A:
	ADDQ.w	#2, $FFFFD326
	RTS
loc_0000A092:
	ADDQ.w	#4, $FFFFD328
	RTS
loc_0000A09A:
	MOVEM.l	A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.w	#$0120, D0
	MOVE.w	#$00E8, D1
	MOVE.w	#$05E8, D3
	LEA	loc_0001A07E, A0
	MOVE.w	#$2000, D5
	BSR.w	loc_0000A0F6
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0
	RTS
loc_0000A0BE:
	CMPI.w	#$0146, $FFFFD322
	BGE.b	loc_0000A0CE
	NEG.w	$FFFFD324
loc_0000A0CE:
	CMPI.w	#$014A, $FFFFD322
	BLE.b	loc_0000A0DE
	NEG.w	$FFFFD324
loc_0000A0DE:
	MOVE.w	$FFFFD322, D0
	ADD.w	$FFFFD324, D0
	MOVE.w	D0, $FFFFD322
	RTS
loc_0000A0F6:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVEA.l	$FFFF8210, A1
	MOVE.w	$FFFF8214, D2
	MOVEQ	#0, D7
	MOVE.b	(A0)+, D7
loc_0000A10A:
	MOVEQ	#0, D4
	MOVE.b	(A0)+, D4
	ADD.w	D0, D4
	MOVE.w	D4, (A1)+
	MOVEQ	#0, D4
	MOVE.b	(A0)+, D4
	LSL.l	#8, D4
	ADDQ.l	#1, D2
	MOVE.b	D2, D4
	MOVE.w	D4, (A1)+
	MOVEQ	#0, D4
	MOVE.b	(A0)+, D4
	LSL.l	#8, D4
	MOVE.b	(A0)+, D4
	ADD.w	D3, D4
	OR.w	D5, D4
	MOVE.w	D4, (A1)+
	MOVEQ	#0, D4
	MOVE.b	(A0)+, D4
	ADD.w	D1, D4
	MOVE.w	D4, (A1)+
	SUBQ.l	#1, D7
	BNE.w	loc_0000A10A
	MOVE.l	A1, $FFFF8210
	MOVE.w	D2, $FFFF8214
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_0000A152:
	MOVEM.l	A0/D0, -(A7)
	MOVE.w	#$009F, D0
	LEA	$FFFFE800.w, A0
loc_0000A15E:
	MOVE.l	#0, (A0)+
	DBF	D0, loc_0000A15E
	MOVE.l	#$FFFFE800, $FFFF8210
	MOVE.w	#0, $FFFF8214
	MOVEM.l	(A7)+, D0/A0
	RTS
loc_0000A180:
	LEA	$FFFFD31A, A1
	MOVE.w	(A1), D0
	ADD.w	D0, D0
	ADD.w	D0, D0
	LEA	loc_0000C7A8, A2
	MOVEA.l	(A2,D0.w), A0
	MOVE.l	#$40000000, loc_00C00004
	ANDI	#$FAFF, SR
	BSR.w	loc_00008108
	RTS
loc_0000A1AA:
	LEA	$FFFFFB00.w, A2
	MOVEQ	#0, D1
	MOVEQ	#3, D2
loc_0000A1B2:
	MOVEA.l	(A1,D1.w), A0
	MOVEQ	#$0000000F, D0
loc_0000A1B8:
	MOVE.w	(A0)+, (A2)+
	DBF	D0, loc_0000A1B8
	ADDQ.l	#4, D1
	DBF	D2, loc_0000A1B2
	RTS
loc_0000A1C6:
	MOVEM.l	D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFFB00.w, A2
	MOVEQ	#0, D7
	MOVEQ	#3, D6
loc_0000A1D2:
	MOVEA.l	(A1,D7.w), A0
	MOVEQ	#$0000000F, D5
loc_0000A1D8:
	MOVE.w	(A2), D0
	MOVE.w	(A0)+, D1
	BSR.w	loc_0000A1F0
	DBF	D5, loc_0000A1D8
	ADDQ.w	#4, D7
	DBF	D6, loc_0000A1D2
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7
	RTS
loc_0000A1F0:
	MOVEM.l	D7, -(A7)
	MOVEQ	#0, D4
	MOVEQ	#2, D7
loc_0000A1F8:
	MOVE.w	D1, D3
	MOVE.w	D0, D2
	ANDI.w	#$000F, D3
	ANDI.w	#$000F, D2
	CMP.w	D3, D2
	BEQ.b	loc_0000A20A
	SUBQ.w	#2, D2
loc_0000A20A:
	OR.w	D2, D4
	ROR.w	#4, D1
	ROR.w	#4, D0
	ROR.w	#4, D4
	DBF	D7, loc_0000A1F8
	ROR.w	#4, D4
	MOVE.w	D4, (A2)+
	MOVEM.l	(A7)+, D7
	RTS
loc_0000A220:
	MOVEM.l	D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFFB00.w, A2
	MOVEQ	#0, D7
	MOVEQ	#3, D6
loc_0000A22C:
	MOVEA.l	(A1,D7.w), A0
	MOVEQ	#$0000000F, D5
loc_0000A232:
	MOVE.w	(A2), D0
	MOVE.w	(A0)+, D1
	BSR.w	loc_0000A24A
	DBF	D5, loc_0000A232
	ADDQ.w	#4, D7
	DBF	D6, loc_0000A22C
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7
	RTS
loc_0000A24A:
	MOVEM.l	D7, -(A7)
	MOVEQ	#0, D4
	MOVEQ	#2, D7
loc_0000A252:
	MOVE.w	D1, D3
	MOVE.w	D0, D2
	ANDI.w	#$000F, D3
	ANDI.w	#$000F, D2
	CMP.w	D3, D2
	BEQ.b	loc_0000A264
	ADDQ.w	#2, D2
loc_0000A264:
	OR.w	D2, D4
	ROR.w	#4, D1
	ROR.w	#4, D0
	ROR.w	#4, D4
	DBF	D7, loc_0000A252
	ROR.w	#4, D4
	MOVE.w	D4, (A2)+
	MOVEM.l	(A7)+, D7
	RTS
loc_0000A27A:
	MOVEM.l	A0/D7/D6/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFFB00.w, A0
	MOVEQ	#$0000003F, D7
loc_0000A284:
	MOVEQ	#0, D0
	MOVEQ	#0, D1
	MOVEQ	#0, D4
	MOVE.w	(A0), D1
	MOVEQ	#2, D6
loc_0000A28E:
	MOVE.w	D1, D0
	ANDI.w	#$000F, D0
	CMPI.w	#0, D0
	BEQ.b	loc_0000A29C
	SUBQ.w	#2, D0
loc_0000A29C:
	OR.w	D0, D4
	ROR.w	#4, D4
	ROR.w	#4, D1
	DBF	D6, loc_0000A28E
	ROR.w	#4, D4
	MOVE.w	D4, (A0)+
	DBF	D7, loc_0000A284
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D6/D7/A0
	RTS
loc_0000A2B4:
	MOVEM.l	A0/D7/D6/D4/D3/D2/D1/D0, -(A7)
	LEA	$FFFFFB00.w, A0
	MOVEQ	#$0000003F, D7
loc_0000A2BE:
	MOVEQ	#0, D0
	MOVEQ	#0, D1
	MOVEQ	#0, D4
	MOVE.w	(A0), D1
	MOVEQ	#2, D6
loc_0000A2C8:
	MOVE.w	D1, D0
	ANDI.w	#$000F, D0
	CMPI.w	#$000E, D0
	BEQ.b	loc_0000A2D6
	ADDQ.w	#2, D0
loc_0000A2D6:
	OR.w	D0, D4
	ROR.w	#4, D4
	ROR.w	#4, D1
	DBF	D6, loc_0000A2C8
	ROR.w	#4, D4
	MOVE.w	D4, (A0)+
	DBF	D7, loc_0000A2BE
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D6/D7/A0
	RTS
loc_0000A2EE:
	MOVEM.l	D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	loc_00C00004, A2
	LEA	loc_00C00000, A3
	MOVE.l	#$00400000, D7
	CLR.w	D6
loc_0000A306:
	MOVE.l	D0, (A2)
	MOVE.w	D1, D4
loc_0000A30A:
	TST.w	D6
	BNE.b	loc_0000A32C
	MOVE.w	(A1)+, D3
	CMPI.w	#$FFFF, D3
	BEQ.b	loc_0000A330
loc_0000A316:
	ORI.w	#$4000, D3
	MOVE.w	D3, (A3)
	DBF	D4, loc_0000A30A
	ADD.l	D7, D0
	DBF	D2, loc_0000A306
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7
	RTS
loc_0000A32C:
	SUBQ.w	#1, D6
	BRA.b	loc_0000A316
loc_0000A330:
	MOVE.w	(A1)+, D6
	MOVE.w	(A1)+, D3
	BRA.b	loc_0000A32C
loc_0000A338:
	MOVEM.l	A0/D3/D2/D1/D0, -(A7)
loc_0000A33C:
	BSR.w	loc_0000A39A
loc_0000A340:
	CLR.w	D2
	MOVE.b	(A0)+, D2
	BEQ.b	loc_0000A356
	CMPI.b	#1, D2
	BEQ.b	loc_0000A33C
	OR.w	D3, D2
	MOVE.w	D2, loc_00C00000
	BRA.b	loc_0000A340
loc_0000A356:
	MOVEM.l	(A7)+, D0/D1/D2/D3/A0
	RTS
loc_0000A35C:
	MOVEM.l	D0, -(A7)
	MOVE.l	#$60000003, loc_00C00004
	MOVE.l	#$000007FF, D0
loc_0000A370:
	MOVE.w	#$2501, loc_00C00000
	DBF	D0, loc_0000A370
	MOVEM.l	(A7)+, D0
loc_0000A380:
	MOVE.w	#$8230, loc_00C00004
	MOVE.w	#$8407, loc_00C00004
	MOVE.w	#$9000, loc_00C00004
	RTS
loc_0000A39A:
	MOVEQ	#0, D0
	MOVE.b	(A0)+, D0
	LSL.w	#8, D0
	MOVE.b	(A0)+, D0
	MOVE.w	D0, D1
	ANDI.w	#$3FFF, D0
	ORI.w	#$4000, D0
	MOVE.w	D0, loc_00C00004
	ANDI.w	#$C000, D1
	ROL.w	#2, D1
	MOVE.w	D1, loc_00C00004
	RTS